contract main {




// =====================  Runtime code  =====================


#
#  - harvest()
#  - beforeDeposit()
#
const borrowRateMax = 75

const minLeverage = 10^15

const usdc = 0x4068da6c83afcfa0e13ba15a6696662335d5b75

const iToken = 0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe

const comptroller = 0x260e596dabe3afc463e75b6cc05d8c46acacfb09

const output = 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475

const wftm = 0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83

const BORROW_DEPTH_MAX = 10

const MAX_FEE = 600


uint8 stor0; offset 160
address owner;
address keeperAddress;
address strategistAddress;
uint32 stor3;
address unirouterAddress;
uint256 stor3;
uint32 stor4;
address vaultAddress;
uint256 stor4;
address harvesterAddress;
uint256 STRATEGIST_FEE;
address inputAddress;
array of struct sub_76c76f91;
array of struct sub_1bf50af2;
array of struct markets;
uint8 stor11;
uint8 stor11; offset 8
uint256 stor11; offset 8
uint256 lastHarvest;
uint256 borrowRate;
uint256 borrowDepth;
uint256 reserves;
uint256 balanceOfPool;

function inputToken() payable {
    return inputAddress
}

function balanceOfPool() payable {
    return balanceOfPool
}

function sub_1bf50af2(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_1bf50af2.length
    return sub_1bf50af2[arg1].field_0
}

function strategist() payable {
    return strategistAddress
}

function unirouter() payable {
    return address(unirouterAddress)
}

function harvester() payable {
    return harvesterAddress
}

function paused() payable {
    return bool(stor0)
}

function panicStatus() payable {
    return bool(uint8(stor11.field_0))
}

function reserves() payable {
    return reserves
}

function sub_76c76f91(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_76c76f91.length
    return sub_76c76f91[arg1].field_0
}

function STRATEGIST_FEE() payable {
    return STRATEGIST_FEE
}

function harvestOnDeposit() payable {
    return bool(uint8(stor11.field_8))
}

function owner() payable {
    return owner
}

function borrowDepth() payable {
    return borrowDepth
}

function keeper() payable {
    return keeperAddress
}

function markets(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < markets.length
    return markets[arg1].field_0
}

function borrowRate() payable {
    return borrowRate
}

function sub_c9ec945a(?) payable {
    return bool(uint8(stor11.field_0))
}

function input() payable {
    return inputAddress
}

function lastHarvest() payable {
    return lastHarvest
}

function vault() payable {
    return address(vaultAddress)
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function balanceOfWant() payable {
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function availableWant() payable {
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if reserves > ext_call.return_data[0]:
        revert with 0, 'SafeMath: subtraction overflow'
    return (ext_call.return_data[0] - reserves)
}

function balanceOf() payable {
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if balanceOfPool + ext_call.return_data[0] < ext_call.return_data[0]:
        revert with 0, 'SafeMath: addition overflow'
    return (balanceOfPool + ext_call.return_data[0])
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x2e4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function setStrategist(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    55,
                    0x644d65736f205374726174204572726f723a20537472617465676973742063616e6e6f7420626520746865207a65726f20616464726573,
                    mem[219 len 9]
    strategistAddress = arg1
    emit StratSetStrategist(arg1);
}

function setHarvestOnDeposit(bool arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    Mask(248, 0, stor11.field_8) = Mask(248, 0, arg1)
    emit StratHarvestOnDeposit(arg1);
}

function setStrategistFee(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    if arg1 > 600:
        revert with 0, 'Must be less than MAX_FEE'
    STRATEGIST_FEE = arg1
    emit feeChange(msg.sender, arg1);
}

function sub_eb1319b1(?) payable {
    if sub_1bf50af2.length:
        mem[128] = address(sub_1bf50af2.field_0)
        if (32 * sub_1bf50af2.length) + 32 > 64:
            mem[160] = address(sub_1bf50af2.field_256)
            idx = 160
            s = 1
            while (32 * sub_1bf50af2.length) + 96 > idx:
                mem[idx + 32] = sub_1bf50af2[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
    mem[(32 * sub_1bf50af2.length) + 128] = 32
    mem[(32 * sub_1bf50af2.length) + 160] = sub_1bf50af2.length
    mem[(32 * sub_1bf50af2.length) + 192 len floor32(sub_1bf50af2.length)] = mem[128 len floor32(sub_1bf50af2.length)]
    return memory
      from (32 * sub_1bf50af2.length) + 128
       len (96 * sub_1bf50af2.length) + 64
}

function setVault(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    50,
                    0x2e4d65736f205374726174204572726f723a205661756c742063616e6e6f7420626520746865207a65726f20616464726573,
                    mem[214 len 14]
    if address(vaultAddress):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    43,
                    0x734d65736f205374726174204572726f723a205661756c7420616c726561647920696e697469616c697a65,
                    mem[207 len 21]
    address(vaultAddress) = arg1
    emit StratSetVault(arg1);
}

function setKeeper(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    47,
                    0x2e4d65736f205374726174204572726f723a204b65657065722063616e6e6f74206265207a65726f20616464726573,
                    mem[211 len 17]
    keeperAddress = arg1
    emit StratSetKeeper(arg1);
}

function setHarvester(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    50,
                    0x734d65736f205374726174204572726f723a204861727665737465722063616e6e6f74206265207a65726f20616464726573,
                    mem[214 len 14]
    harvesterAddress = arg1
    emit StratSetHarvester(arg1);
}

function updateBalance() payable {
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > ext_call.return_data[0]:
        revert with 0, 'SafeMath: subtraction overflow'
    balanceOfPool = 0
}

function outputToUsdc() payable {
    if not sub_76c76f91.length:
        mem[(32 * sub_76c76f91.length) + 128] = 32
        mem[(32 * sub_76c76f91.length) + 160] = sub_76c76f91.length
        mem[(32 * sub_76c76f91.length) + 192 len floor32(sub_76c76f91.length)] = mem[128 len floor32(sub_76c76f91.length)]
        return memory
          from (32 * sub_76c76f91.length) + 128
           len (96 * sub_76c76f91.length) + 64
    mem[128] = address(sub_76c76f91.field_0)
    idx = 128
    s = 0
    while (32 * sub_76c76f91.length) + 96 > idx:
        mem[idx + 32] = sub_76c76f91[s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    mem[(32 * sub_76c76f91.length) + 192 len floor32(sub_76c76f91.length)] = mem[128 len floor32(sub_76c76f91.length)]
    return Array(len=sub_76c76f91.length, data=mem[128 len floor32(sub_76c76f91.length)], mem[(32 * sub_76c76f91.length) + floor32(sub_76c76f91.length) + 192 len (32 * sub_76c76f91.length) - floor32(sub_76c76f91.length)]), 
}

function deposit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if stor0:
        revert with 0, 'Pausable: paused'
    if address(vaultAddress) != msg.sender:
        if msg.sender != this.address:
            if harvesterAddress != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            109,
                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                            mem[273 len 19]
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg1:
        if ext_call.return_data[0] > 0:
            if arg1 >= 10^15:
                idx = 0
                s = arg1
                while idx < borrowDepth:
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                         gas gas_remaining wei
                        args s
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not s:
                        mem[100] = 0
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args 0
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = 0
                        continue 
                    if borrowRate * s / s != borrowRate:
                        revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                    mem[100] = borrowRate * s / 100
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args (borrowRate * s / 100)
                    mem[96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = idx + 1
                    s = borrowRate * s / 100
                    continue 
                if s + reserves < reserves:
                    revert with 0, 'SafeMath: addition overflow'
                reserves += s
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                balanceOfPool = 0
}

function deleverageOnce(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    if arg1 > 75:
        revert with 0, '!safe'
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if arg1 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require arg1
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 0 / arg1 > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
             gas gas_remaining wei
            args (ext_call.return_data[0] - (0 / arg1))
    else:
        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if arg1 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require arg1
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 100 * ext_call.return_data[0] / arg1 > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
             gas gas_remaining wei
            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / arg1))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    reserves = ext_call.return_data[0]
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > ext_call.return_data[0]:
        revert with 0, 'SafeMath: subtraction overflow'
    balanceOfPool = 0
}

function rebalance(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
    if arg1 > 75:
        revert with 0, '!rate'
    if arg2 > 10:
        revert with 0, '!depth'
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    s = mem[96]
    t = ext_call.return_data[0]
    while t < s:
        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
             gas gas_remaining wei
            args t
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if borrowRate <= 0:
                revert with 0, 'SafeMath: division by zero'
            require borrowRate
            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 0 / borrowRate > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                 gas gas_remaining wei
                args (ext_call.return_data[0] - (0 / borrowRate))
        else:
            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
            if borrowRate <= 0:
                revert with 0, 'SafeMath: division by zero'
            require borrowRate
            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                 gas gas_remaining wei
                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[100] = this.address
        require ext_code.size(inputAddress)
        staticcall inputAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        s = ext_call.return_data[0]
        t = ext_call.return_data[0]
        continue 
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
         gas gas_remaining wei
        args -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.redeem(uint256 arg1) with:
         gas gas_remaining wei
        args ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    reserves = 0
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > ext_call.return_data[0]:
        revert with 0, 'SafeMath: subtraction overflow'
    balanceOfPool = 0
    borrowRate = arg1
    borrowDepth = arg2
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] >= 10^15:
        idx = 0
        s = mem[96]
        while idx < borrowDepth:
            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                 gas gas_remaining wei
                args s
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not s:
                mem[100] = 0
                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args 0
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = idx + 1
                s = 0
                continue 
            if borrowRate * s / s != borrowRate:
                revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
            mem[100] = borrowRate * s / 100
            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                 gas gas_remaining wei
                args (borrowRate * s / 100)
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            idx = idx + 1
            s = borrowRate * s / 100
            continue 
        if s + reserves < reserves:
            revert with 0, 'SafeMath: addition overflow'
        reserves += s
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        balanceOfPool = 0
    emit StratRebalance(arg1, arg2);
}

function pause() payable {
    if msg.sender == owner:
        if stor0:
            revert with 0, 'Pausable: paused'
        stor0 = 1
        emit Paused(msg.sender);
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(inputAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
        call inputAddress.0xfdfa0ebe with:
             gas gas_remaining wei
            args 0, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[424 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args 0, mem[488 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
            else:
                mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[456]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
            if eth.balance(this.address) < 0:
                revert with 0, 
                            32,
                            38,
                            0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                            mem[ceil32(return_data.size) + 531 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[ceil32(return_data.size) + 425 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args 0, mem[ceil32(return_data.size) + 489 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 535 len 22]
            else:
                mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[ceil32(return_data.size) + 457]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
    else:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
        if stor0:
            revert with 0, 'Pausable: paused'
        stor0 = 1
        emit Paused(msg.sender);
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(inputAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
        mem[324 len 0] = 0
        call inputAddress.0xfdfa0ebe with:
             gas gas_remaining wei
            args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[424 len 64] = 0, address(unirouterAddress), 0
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args 0, mem[360 len 28], mem[488 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
            else:
                mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[456]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if not return_data.size:
                if eth.balance(this.address) < 0:
                    revert with 0, 
                                32,
                                38,
                                0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                mem[ceil32(return_data.size) + 531 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                else:
                    mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 
                                    'SafeERC20: low-level call failed',
                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[ceil32(return_data.size) + 457]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
            else:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
                if eth.balance(this.address) < 0:
                    revert with 0, 
                                32,
                                38,
                                0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                mem[ceil32(return_data.size) + 531 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                else:
                    mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[ceil32(return_data.size) + 457]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(2 * ceil32(return_data.size)) + 536 len 22]
}

function withdraw(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if address(vaultAddress) != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    81,
                    0x6c4d65736f205374726174204572726f7220285769746864726177293a20556e617574686f72697a6564204163636573732e204f6e6c7920746865207661756c742063616e206163636573732074686973,
                    mem[245 len 15]
    require ext_code.size(inputAddress)
    staticcall inputAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if reserves > ext_call.return_data[0]:
        revert with 0, 'SafeMath: subtraction overflow'
    if ext_call.return_data[0] - reserves >= arg1:
        if ext_call.return_data[0] - reserves <= arg1:
            if not stor0:
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if reserves > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if ext_call.return_data[0] - reserves >= 10^15:
                    idx = 0
                    s = mem[96] - reserves
                    while idx < borrowDepth:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not s:
                            mem[100] = 0
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        if borrowRate * s / s != borrowRate:
                            revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        mem[100] = borrowRate * s / 100
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (borrowRate * s / 100)
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = borrowRate * s / 100
                        continue 
                    if s + reserves < reserves:
                        revert with 0, 'SafeMath: addition overflow'
                    reserves += s
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    balanceOfPool = 0
            else:
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor4), uint32(stor4), Mask(224, 32, ext_call.return_data[0] - reserves) >> 32
                mem[352 len 4] = 0
                mem[324 len 0] = 0
                call inputAddress with:
                   funct uint32(stor4)
                     gas gas_remaining wei
                    args Mask(224, 32, ext_call.return_data[0] - reserves) << 224, mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0xa9059cbb(?????), Mask(224, 0, stor4), uint32(stor4), ext_call.return_data[0] - reserves
                    if not unknown_0xa9059cbb(?????), Mask(224, 0, stor4):
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[260] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[264] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[260] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                mem[264] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[260] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[ceil32(return_data.size) + 261] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 265] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 362 len 31]
                                mem[ceil32(return_data.size) + 265] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
        else:
            if not stor0:
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if reserves > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if ext_call.return_data[0] - reserves >= 10^15:
                    idx = 0
                    s = mem[96] - reserves
                    while idx < borrowDepth:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not s:
                            mem[100] = 0
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        if borrowRate * s / s != borrowRate:
                            revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        mem[100] = borrowRate * s / 100
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (borrowRate * s / 100)
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = borrowRate * s / 100
                        continue 
                    if s + reserves < reserves:
                        revert with 0, 'SafeMath: addition overflow'
                    reserves += s
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    balanceOfPool = 0
            else:
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor4), uint32(stor4), Mask(224, 32, arg1) >> 32
                mem[352 len 4] = 0
                mem[324 len 0] = 0
                call inputAddress with:
                   funct uint32(stor4)
                     gas gas_remaining wei
                    args Mask(224, 32, arg1) << 224, mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0xa9059cbb(?????), Mask(224, 0, stor4), uint32(stor4), arg1
                    if not unknown_0xa9059cbb(?????), Mask(224, 0, stor4):
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[260] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[264] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[260] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                mem[264] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[260] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[ceil32(return_data.size) + 261] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 265] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 362 len 31]
                                mem[ceil32(return_data.size) + 265] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
    else:
        require ext_code.size(inputAddress)
        staticcall inputAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        s = mem[96]
        t = ext_call.return_data[0]
        while t < s:
            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                 gas gas_remaining wei
                args t
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if borrowRate <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require borrowRate
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 0 / borrowRate > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (0 / borrowRate))
            else:
                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                if borrowRate <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require borrowRate
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            mem[100] = this.address
            require ext_code.size(inputAddress)
            staticcall inputAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            s = ext_call.return_data[0]
            t = ext_call.return_data[0]
            continue 
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
             gas gas_remaining wei
            args -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.redeem(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        reserves = 0
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        balanceOfPool = 0
        require ext_code.size(inputAddress)
        staticcall inputAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] <= arg1:
            if not stor0:
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if reserves > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if ext_call.return_data[0] - reserves >= 10^15:
                    idx = 0
                    s = mem[96] - reserves
                    while idx < borrowDepth:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not s:
                            mem[100] = 0
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        if borrowRate * s / s != borrowRate:
                            revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        mem[100] = borrowRate * s / 100
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (borrowRate * s / 100)
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = borrowRate * s / 100
                        continue 
                    if s + reserves < reserves:
                        revert with 0, 'SafeMath: addition overflow'
                    reserves += s
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    balanceOfPool = 0
            else:
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = 0, address(vaultAddress), ext_call.return_data[0 len 28]
                mem[352 len 4] = 0
                call inputAddress with:
                   funct uint32(stor4)
                     gas gas_remaining wei
                    args ext_call.return_data[0], mem[196 len 28], mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0xa9059cbb(?????), address(vaultAddress), ext_call.return_data[0]
                    if not uint32(this.address), Mask(224, 0, stor4):
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[260] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[264] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[260] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                mem[264] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[260] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[ceil32(return_data.size) + 261] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 265] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 362 len 31]
                                mem[ceil32(return_data.size) + 265] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
        else:
            if not stor0:
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if reserves > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if ext_call.return_data[0] - reserves >= 10^15:
                    idx = 0
                    s = mem[96] - reserves
                    while idx < borrowDepth:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                             gas gas_remaining wei
                            args s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not s:
                            mem[100] = 0
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args 0
                            mem[96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            idx = idx + 1
                            s = 0
                            continue 
                        if borrowRate * s / s != borrowRate:
                            revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        mem[100] = borrowRate * s / 100
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args (borrowRate * s / 100)
                        mem[96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = idx + 1
                        s = borrowRate * s / 100
                        continue 
                    if s + reserves < reserves:
                        revert with 0, 'SafeMath: addition overflow'
                    reserves += s
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    balanceOfPool = 0
            else:
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = 0, address(vaultAddress), Mask(224, 32, arg1) >> 32
                mem[352 len 4] = 0
                call inputAddress with:
                   funct uint32(stor4)
                     gas gas_remaining wei
                    args arg1, mem[196 len 28], mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0xa9059cbb(?????), address(vaultAddress), arg1
                    if not uint32(this.address), Mask(224, 0, stor4):
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[260] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[264] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[260] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                mem[264] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[260] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if not stor0:
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if reserves > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if ext_call.return_data[0] - reserves >= 10^15:
                            idx = 0
                            s = mem[ceil32(return_data.size) + 261] - reserves
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 265] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 362 len 31]
                                mem[ceil32(return_data.size) + 265] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
}

function unpause() payable {
    if msg.sender == owner:
        if uint8(stor11.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        54,
                        0x754d65736f205374726174204572726f722028556e7061757365293a20537472617465677920697320696e2070616e6963206d6f6465,
                        mem[218 len 10]
        if not stor0:
            revert with 0, 'Pausable: not paused'
        stor0 = 0
        emit Unpaused(msg.sender);
        require ext_code.size(inputAddress)
        staticcall inputAddress.0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        54,
                        0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                        mem[218 len 10]
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(inputAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        mem[324 len 0] = 0
        call inputAddress.0xfdfa0ebe with:
             gas gas_remaining wei
            args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, address(unirouterAddress)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[382 len 10]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[424 len 64] = 0, address(unirouterAddress), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args -1, mem[360 len 28], mem[488 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[601 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[428] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                mem[428] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
            else:
                mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[456]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[ceil32(return_data.size) + 602 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 429] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                mem[ceil32(return_data.size) + 429] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, address(unirouterAddress)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[ceil32(return_data.size) + 383 len 10]
            if eth.balance(this.address) < 0:
                revert with 0, 
                            32,
                            38,
                            0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                            mem[ceil32(return_data.size) + 531 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args -1, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 535 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[ceil32(return_data.size) + 602 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 429] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                mem[ceil32(return_data.size) + 429] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
            else:
                mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[ceil32(return_data.size) + 457]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(2 * ceil32(return_data.size)) + 536 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[(2 * ceil32(return_data.size)) + 603 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[(2 * ceil32(return_data.size)) + 430] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                mem[(2 * ceil32(return_data.size)) + 430] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 
                                            'SafeMath: addition overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 
                                            'SafeMath: subtraction overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            balanceOfPool = 0
    else:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
        if uint8(stor11.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        54,
                        0x754d65736f205374726174204572726f722028556e7061757365293a20537472617465677920697320696e2070616e6963206d6f6465,
                        mem[218 len 10]
        if not stor0:
            revert with 0, 'Pausable: not paused'
        stor0 = 0
        emit Unpaused(msg.sender);
        require ext_code.size(inputAddress)
        staticcall inputAddress.0xdd62ed3e with:
                gas gas_remaining wei
               args this.address, 0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        54,
                        0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                        mem[218 len 10]
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(inputAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        mem[324 len 0] = 0
        call inputAddress.0xfdfa0ebe with:
             gas gas_remaining wei
            args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0xdd62ed3e with:
                    gas gas_remaining wei
                   args this.address, address(unirouterAddress)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                revert with 0, 
                            32,
                            54,
                            0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                            mem[382 len 10]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[424 len 64] = 0, address(unirouterAddress), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args -1, mem[360 len 28], mem[488 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[601 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[428] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                mem[428] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
            else:
                mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[456]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor0:
                    revert with 0, 'Pausable: paused'
                if address(vaultAddress) != msg.sender:
                    if msg.sender != this.address:
                        if harvesterAddress != msg.sender:
                            revert with 0, 
                                        32,
                                        109,
                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                        mem[ceil32(return_data.size) + 602 len 19]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    if ext_call.return_data[0] > 0:
                        if ext_call.return_data[0] >= 10^15:
                            idx = 0
                            s = ext_call.return_data[0]
                            while idx < borrowDepth:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args s
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not s:
                                    mem[ceil32(return_data.size) + 429] = 0
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args 0
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = 0
                                    continue 
                                if borrowRate * s / s != borrowRate:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                mem[ceil32(return_data.size) + 429] = borrowRate * s / 100
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (borrowRate * s / 100)
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                idx = idx + 1
                                s = borrowRate * s / 100
                                continue 
                            if s + reserves < reserves:
                                revert with 0, 'SafeMath: addition overflow'
                            reserves += s
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            balanceOfPool = 0
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if not return_data.size:
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0xdd62ed3e with:
                        gas gas_remaining wei
                       args this.address, address(unirouterAddress)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    revert with 0, 
                                32,
                                54,
                                0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                                mem[ceil32(return_data.size) + 383 len 10]
                if eth.balance(this.address) < 0:
                    revert with 0, 
                                32,
                                38,
                                0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                mem[ceil32(return_data.size) + 531 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args -1, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    if address(vaultAddress) != msg.sender:
                        if msg.sender != this.address:
                            if harvesterAddress != msg.sender:
                                revert with 0, 
                                            32,
                                            109,
                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                            mem[ceil32(return_data.size) + 602 len 19]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0:
                            if ext_call.return_data[0] >= 10^15:
                                idx = 0
                                s = ext_call.return_data[0]
                                while idx < borrowDepth:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not s:
                                        mem[ceil32(return_data.size) + 429] = 0
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    if borrowRate * s / s != borrowRate:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    mem[ceil32(return_data.size) + 429] = borrowRate * s / 100
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (borrowRate * s / 100)
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = borrowRate * s / 100
                                    continue 
                                if s + reserves < reserves:
                                    revert with 0, 'SafeMath: addition overflow'
                                reserves += s
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                balanceOfPool = 0
                else:
                    mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[ceil32(return_data.size) + 457]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(2 * ceil32(return_data.size)) + 536 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    if address(vaultAddress) != msg.sender:
                        if msg.sender != this.address:
                            if harvesterAddress != msg.sender:
                                revert with 0, 
                                            32,
                                            109,
                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                            mem[(2 * ceil32(return_data.size)) + 603 len 19]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0:
                            if ext_call.return_data[0] >= 10^15:
                                idx = 0
                                s = ext_call.return_data[0]
                                while idx < borrowDepth:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not s:
                                        mem[(2 * ceil32(return_data.size)) + 430] = 0
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    if borrowRate * s / s != borrowRate:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                    mem[(2 * ceil32(return_data.size)) + 430] = borrowRate * s / 100
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (borrowRate * s / 100)
                                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = borrowRate * s / 100
                                    continue 
                                if s + reserves < reserves:
                                    revert with 0, 
                                                'SafeMath: addition overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                reserves += s
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                balanceOfPool = 0
            else:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0xdd62ed3e with:
                        gas gas_remaining wei
                       args this.address, address(unirouterAddress)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    revert with 0, 
                                32,
                                54,
                                0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                                mem[ceil32(return_data.size) + 383 len 10]
                if eth.balance(this.address) < 0:
                    revert with 0, 
                                32,
                                38,
                                0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                mem[ceil32(return_data.size) + 531 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args -1, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, -1
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    if address(vaultAddress) != msg.sender:
                        if msg.sender != this.address:
                            if harvesterAddress != msg.sender:
                                revert with 0, 
                                            32,
                                            109,
                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                            mem[ceil32(return_data.size) + 602 len 19]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0:
                            if ext_call.return_data[0] >= 10^15:
                                idx = 0
                                s = ext_call.return_data[0]
                                while idx < borrowDepth:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not s:
                                        mem[ceil32(return_data.size) + 429] = 0
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    if borrowRate * s / s != borrowRate:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    mem[ceil32(return_data.size) + 429] = borrowRate * s / 100
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (borrowRate * s / 100)
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = borrowRate * s / 100
                                    continue 
                                if s + reserves < reserves:
                                    revert with 0, 'SafeMath: addition overflow'
                                reserves += s
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                balanceOfPool = 0
                else:
                    mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 
                                    'SafeERC20: low-level call failed',
                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[ceil32(return_data.size) + 457]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if stor0:
                        revert with 0, 
                                    'Pausable: paused',
                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if address(vaultAddress) != msg.sender:
                        if msg.sender != this.address:
                            if harvesterAddress != msg.sender:
                                revert with 0, 
                                            32,
                                            109,
                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                            mem[(2 * ceil32(return_data.size)) + 603 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 19]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0:
                            if ext_call.return_data[0] >= 10^15:
                                idx = 0
                                s = ext_call.return_data[0]
                                while idx < borrowDepth:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args s
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not s:
                                        mem[(2 * ceil32(return_data.size)) + 430] = 0
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args 0
                                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = 0
                                        continue 
                                    if borrowRate * s / s != borrowRate:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                    mem[(2 * ceil32(return_data.size)) + 430] = borrowRate * s / 100
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (borrowRate * s / 100)
                                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    idx = idx + 1
                                    s = borrowRate * s / 100
                                    continue 
                                if s + reserves < reserves:
                                    revert with 0, 
                                                'SafeMath: addition overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                reserves += s
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                balanceOfPool = 0
}

function panic() payable {
    if msg.sender == owner:
        if stor0:
            revert with 0, 'Pausable: paused'
        stor0 = 1
        emit Paused(msg.sender);
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(inputAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
        call inputAddress.0xfdfa0ebe with:
             gas gas_remaining wei
            args 0, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[424 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
            mem[516 len 4] = 0
            mem[488 len 0] = 0
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[488 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                mem[424] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                s = mem[424]
                t = ext_call.return_data[0]
                while t < s:
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args t
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (0 / borrowRate))
                    else:
                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                            revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[428] = this.address
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[424] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = ext_call.return_data[0]
                    t = ext_call.return_data[0]
                    continue 
            else:
                mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[456]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                s = mem[ceil32(return_data.size) + 425]
                t = ext_call.return_data[0]
                while t < s:
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args t
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (0 / borrowRate))
                    else:
                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[ceil32(return_data.size) + 526 len 31]
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[ceil32(return_data.size) + 429] = this.address
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = ext_call.return_data[0]
                    t = ext_call.return_data[0]
                    continue 
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
            if eth.balance(this.address) < 0:
                revert with 0, 
                            32,
                            38,
                            0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                            mem[ceil32(return_data.size) + 531 len 26]
            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                revert with 0, 'Address: call to non-contract'
            mem[ceil32(return_data.size) + 425 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
            mem[ceil32(return_data.size) + 517 len 4] = 0
            mem[ceil32(return_data.size) + 489 len 0] = 0
            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
               funct uint32(stor3)
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[ceil32(return_data.size) + 489 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 
                                32,
                                42,
                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 535 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                s = mem[ceil32(return_data.size) + 425]
                t = ext_call.return_data[0]
                while t < s:
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args t
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (0 / borrowRate))
                    else:
                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[ceil32(return_data.size) + 526 len 31]
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[ceil32(return_data.size) + 429] = this.address
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = ext_call.return_data[0]
                    t = ext_call.return_data[0]
                    continue 
            else:
                mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[ceil32(return_data.size) + 457]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[(2 * ceil32(return_data.size)) + 536 len 22]
                require ext_code.size(inputAddress)
                staticcall inputAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                s = mem[(2 * ceil32(return_data.size)) + 426]
                t = ext_call.return_data[0]
                while t < s:
                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args t
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (0 / borrowRate))
                    else:
                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                            revert with 0, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[(2 * ceil32(return_data.size)) + 527 len 31]
                        if borrowRate <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require borrowRate
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(2 * ceil32(return_data.size)) + 430] = this.address
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = ext_call.return_data[0]
                    t = ext_call.return_data[0]
                    continue 
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
             gas gas_remaining wei
            args -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.redeem(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        reserves = 0
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
    else:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
        if msg.sender == owner:
            if stor0:
                revert with 0, 'Pausable: paused'
            stor0 = 1
            emit Paused(msg.sender);
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(inputAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
            mem[324 len 0] = 0
            call inputAddress.0xfdfa0ebe with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[424 len 64] = 0, address(unirouterAddress), 0
                mem[516 len 4] = 0
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args 0, mem[360 len 28], mem[488 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[424] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[424]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[428] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[424] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                else:
                    mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[456]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[ceil32(return_data.size) + 425]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 526 len 31]
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[ceil32(return_data.size) + 429] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.redeem(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                reserves = 0
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
            else:
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    if eth.balance(this.address) < 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                    mem[ceil32(return_data.size) + 531 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                    mem[ceil32(return_data.size) + 517 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[ceil32(return_data.size) + 457]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[(2 * ceil32(return_data.size)) + 536 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[(2 * ceil32(return_data.size)) + 426]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(2 * ceil32(return_data.size)) + 430] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 
                                        'SafeMath: subtraction overflow',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                else:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
                    if eth.balance(this.address) < 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                    mem[ceil32(return_data.size) + 531 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                    mem[ceil32(return_data.size) + 517 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 
                                        'SafeERC20: low-level call failed',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[ceil32(return_data.size) + 457]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[(2 * ceil32(return_data.size)) + 426]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(2 * ceil32(return_data.size)) + 430] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 
                                        'SafeMath: subtraction overflow',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
        else:
            if keeperAddress != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            72,
                            0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                            mem[236 len 24]
            if stor0:
                revert with 0, 'Pausable: paused'
            stor0 = 1
            emit Paused(msg.sender);
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(inputAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
            mem[324 len 0] = 0
            call inputAddress.0xfdfa0ebe with:
                 gas gas_remaining wei
                args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                    revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[424 len 64] = 0, address(unirouterAddress), 0
                mem[516 len 4] = 0
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args 0, mem[360 len 28], mem[488 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[424] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[424]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[428] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[424] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                else:
                    mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[456]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[ceil32(return_data.size) + 425]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 526 len 31]
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[ceil32(return_data.size) + 429] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                     gas gas_remaining wei
                    args -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.redeem(uint256 arg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                reserves = 0
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                     gas gas_remaining wei
                    args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
            else:
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
                if eth.balance(this.address) < 0:
                    revert with 0, 
                                32,
                                38,
                                0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                mem[ceil32(return_data.size) + 531 len 26]
                if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                    revert with 0, 'Address: call to non-contract'
                mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                mem[ceil32(return_data.size) + 517 len 4] = 0
                call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                   funct uint32(stor3)
                     gas gas_remaining wei
                    args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 
                                    32,
                                    42,
                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 535 len 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[ceil32(return_data.size) + 425]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 526 len 31]
                            if borrowRate <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[ceil32(return_data.size) + 429] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                else:
                    mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 
                                    'SafeERC20: low-level call failed',
                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[ceil32(return_data.size) + 457]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    require ext_code.size(inputAddress)
                    staticcall inputAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    s = mem[(2 * ceil32(return_data.size)) + 426]
                    t = ext_call.return_data[0]
                    while t < s:
                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if borrowRate <= 0:
                                revert with 0, 
                                            'SafeMath: division by zero',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / borrowRate > ext_call.return_data[0]:
                                revert with 0, 
                                            'SafeMath: subtraction overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (0 / borrowRate))
                        else:
                            if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                revert with 0, 
                                            32,
                                            33,
                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                            if borrowRate <= 0:
                                revert with 0, 
                                            'SafeMath: division by zero',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            require borrowRate
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                revert with 0, 
                                            'SafeMath: subtraction overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[(2 * ceil32(return_data.size)) + 430] = this.address
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = ext_call.return_data[0]
                        t = ext_call.return_data[0]
                        continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 
                                    'SafeMath: subtraction overflow',
                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
    ('le', ('ext_call.return_data', 0, 32), ('ext_call.return_data', 0, 32))
    balanceOfPool = 0
    uint8(stor11.field_0) = 1
    emit StratPanic(msg.sender);
}

function managerHarvest() payable {
    if msg.sender == owner:
        if stor0:
            revert with 0, 'Pausable: paused'
        require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
        staticcall 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.pendingComptrollerImplementation() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20]:
            if msg.sender == owner:
                if stor0:
                    revert with 0, 'Pausable: paused'
                stor0 = 1
                emit Paused(msg.sender);
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                mem[324 len 0] = 0
                call inputAddress.0xfdfa0ebe with:
                     gas gas_remaining wei
                    args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[424 len 64] = 0, address(unirouterAddress), 0
                    mem[516 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[360 len 28], mem[488 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[424] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[424]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[428] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                    else:
                        mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[456]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if eth.balance(this.address) < 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                    mem[ceil32(return_data.size) + 531 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                    mem[ceil32(return_data.size) + 517 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 
                                        'SafeERC20: low-level call failed',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[ceil32(return_data.size) + 457]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[(2 * ceil32(return_data.size)) + 426]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(2 * ceil32(return_data.size)) + 430] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 
                                        'SafeMath: subtraction overflow',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                if keeperAddress != msg.sender:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                72,
                                0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                                mem[236 len 24]
                if msg.sender == owner:
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    stor0 = 1
                    emit Paused(msg.sender);
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(inputAddress):
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    mem[324 len 0] = 0
                    call inputAddress.0xfdfa0ebe with:
                         gas gas_remaining wei
                        args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[424 len 64] = 0, address(unirouterAddress), 0
                        mem[516 len 4] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args 0, mem[360 len 28], mem[488 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[424]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[428] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        else:
                            mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[456]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 
                                        32,
                                        38,
                                        0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                        mem[ceil32(return_data.size) + 531 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                        mem[ceil32(return_data.size) + 517 len 4] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args -1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeem(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            reserves = 0
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                        else:
                            mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[(2 * ceil32(return_data.size)) + 426]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 
                                                    'SafeMath: division by zero',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 
                                                    'SafeMath: subtraction overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                    if borrowRate <= 0:
                                        revert with 0, 
                                                    'SafeMath: division by zero',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 
                                                    'SafeMath: subtraction overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[(2 * ceil32(return_data.size)) + 430] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args -1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeem(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            reserves = 0
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 
                                            'SafeMath: subtraction overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                else:
                    if keeperAddress != msg.sender:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    72,
                                    0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                                    mem[236 len 24]
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    stor0 = 1
                    emit Paused(msg.sender);
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(inputAddress):
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    call inputAddress.0xfdfa0ebe with:
                         gas gas_remaining wei
                        args 0, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[424 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
                        mem[516 len 4] = 0
                        mem[488 len 0] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[488 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[424]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[428] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        else:
                            mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[456]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 
                                        32,
                                        38,
                                        0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                        mem[ceil32(return_data.size) + 531 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[ceil32(return_data.size) + 425 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
                        mem[ceil32(return_data.size) + 517 len 4] = 0
                        mem[ceil32(return_data.size) + 489 len 0] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[ceil32(return_data.size) + 489 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        else:
                            mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(2 * ceil32(return_data.size)) + 536 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[(2 * ceil32(return_data.size)) + 426]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 527 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[(2 * ceil32(return_data.size)) + 430] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
            ('le', ('ext_call.return_data', 0, 32), ('ext_call.return_data', 0, 32))
            balanceOfPool = 0
            uint8(stor11.field_0) = 1
            emit StratPanic(msg.sender);
        else:
            if not markets.length:
                require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
                call 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.claimComp(address arg1, address[] arg2) with:
                     gas gas_remaining wei
                    args this.address, 64, markets.length
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                if not STRATEGIST_FEE:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[100] = ext_call.return_data[0]
                    mem[132] = 0
                    mem[196] = this.address
                    mem[228] = block.timestamp
                    mem[164] = 160
                    mem[260] = sub_1bf50af2.length
                    if not sub_1bf50af2.length:
                        require ext_code.size(address(unirouterAddress))
                        call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _60 = mem[96 len 4], ext_call.return_data[0 len 28]
                        require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                        require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                        require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                        mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                        _85 = mem[_60 + 96]
                        mem[ceil32(return_data.size) + 128 len floor32(mem[_60 + 96])] = mem[_60 + 128 len floor32(mem[_60 + 96])]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if stor0:
                            revert with 0, 'Pausable: paused'
                        if address(vaultAddress) != msg.sender:
                            if msg.sender != this.address:
                                if harvesterAddress != msg.sender:
                                    revert with 0, 
                                                32,
                                                109,
                                                0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                mem[(32 * _85) + ceil32(return_data.size) + 305 len 19]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0:
                                if ext_call.return_data[0] >= 10^15:
                                    idx = 0
                                    s = ext_call.return_data[0]
                                    while idx < borrowDepth:
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not s:
                                            mem[(32 * _85) + ceil32(return_data.size) + 132] = 0
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[(32 * _85) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        if borrowRate * s / s != borrowRate:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(32 * _85) + ceil32(return_data.size) + 229 len 31]
                                        mem[(32 * _85) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (borrowRate * s / 100)
                                        mem[(32 * _85) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = borrowRate * s / 100
                                        continue 
                                    if s + reserves < reserves:
                                        revert with 0, 'SafeMath: addition overflow'
                                    reserves += s
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    balanceOfPool = 0
                    else:
                        mem[0] = 9
                        mem[292] = address(sub_1bf50af2.field_0)
                        if (32 * sub_1bf50af2.length) + 196 <= 228:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _66 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _100 = mem[_66 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_66 + 96])] = mem[_66 + 128 len floor32(mem[_66 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _100) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _100) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _100) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _100) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _100) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _100) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                        else:
                            mem[324] = address(sub_1bf50af2.field_256)
                            idx = 324
                            s = 1
                            while (32 * sub_1bf50af2.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_1bf50af2[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24578 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _24841 = mem[_24578 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24578 + 96])] = mem[_24578 + 128 len floor32(mem[_24578 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _24841) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _24841) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _24841) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _24841) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _24841) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _24841) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                else:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = 0
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _127 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _168 = mem[_127 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_127 + 96])] = mem[_127 + 128 len floor32(mem[_127 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _168) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _168) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _168) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _168) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _168) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _168) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _168) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _168) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _168) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _12472 = mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _168) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _12555 = mem[(32 * _168) + ceil32(return_data.size) + _12472 + 128]
                                mem[(32 * _168) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _12472 + 128])] = mem[(32 * _168) + ceil32(return_data.size) + _12472 + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _12472 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _12555) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _168) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _168) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _168) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _168) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _12501 = mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _168) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _12588 = mem[(32 * _168) + ceil32(return_data.size) + _12501 + 128]
                                    mem[(32 * _168) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _12501 + 128])] = mem[(32 * _168) + ceil32(return_data.size) + _12501 + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _12501 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _12588) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _168) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _168) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _168) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _168) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _168) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _168) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _40388 = mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _168) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _168) + ceil32(return_data.size) + mem[(32 * _168) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _41560 = mem[(32 * _168) + ceil32(return_data.size) + _40388 + 128]
                                    mem[(32 * _168) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _40388 + 128])] = mem[(32 * _168) + ceil32(return_data.size) + _40388 + 160 len floor32(mem[(32 * _168) + ceil32(return_data.size) + _40388 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _41560) + (32 * _168) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24591 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _24843 = mem[_24591 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24591 + 96])] = mem[_24591 + 128 len floor32(mem[_24591 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _24843) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _24843) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _24843) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _24843) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _24843) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _24843) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _24843) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _24843) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _24843) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42608 = mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43601 = mem[(32 * _24843) + ceil32(return_data.size) + _42608 + 128]
                                mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _42608 + 128])] = mem[(32 * _24843) + ceil32(return_data.size) + _42608 + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _42608 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43601) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _24843) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24843) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24843) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24843) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _42945 = mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44195 = mem[(32 * _24843) + ceil32(return_data.size) + _42945 + 128]
                                    mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _42945 + 128])] = mem[(32 * _24843) + ceil32(return_data.size) + _42945 + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _42945 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44195) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _24843) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _24843) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _24843) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24843) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24843) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24843) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57586 = mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24843) + ceil32(return_data.size) + mem[(32 * _24843) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58000 = mem[(32 * _24843) + ceil32(return_data.size) + _57586 + 128]
                                    mem[(32 * _24843) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _57586 + 128])] = mem[(32 * _24843) + ceil32(return_data.size) + _57586 + 160 len floor32(mem[(32 * _24843) + ceil32(return_data.size) + _57586 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58000) + (32 * _24843) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                    else:
                        if STRATEGIST_FEE * ext_call.return_data[0] / ext_call.return_data[0] != STRATEGIST_FEE:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = STRATEGIST_FEE * ext_call.return_data[0] / 10000
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _138 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _177 = mem[_138 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_138 + 96])] = mem[_138 + 128 len floor32(mem[_138 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _177) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _177) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _177) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _177) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _177) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _177) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _177) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _177) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _177) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _12469 = mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _177) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _12553 = mem[(32 * _177) + ceil32(return_data.size) + _12469 + 128]
                                mem[(32 * _177) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _12469 + 128])] = mem[(32 * _177) + ceil32(return_data.size) + _12469 + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _12469 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _12553) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _177) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _177) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _177) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _177) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _12499 = mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _177) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _12587 = mem[(32 * _177) + ceil32(return_data.size) + _12499 + 128]
                                    mem[(32 * _177) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _12499 + 128])] = mem[(32 * _177) + ceil32(return_data.size) + _12499 + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _12499 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _12587) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _177) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _177) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _177) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _177) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _177) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _177) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _40366 = mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _177) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _177) + ceil32(return_data.size) + mem[(32 * _177) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _41557 = mem[(32 * _177) + ceil32(return_data.size) + _40366 + 128]
                                    mem[(32 * _177) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _40366 + 128])] = mem[(32 * _177) + ceil32(return_data.size) + _40366 + 160 len floor32(mem[(32 * _177) + ceil32(return_data.size) + _40366 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _41557) + (32 * _177) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24589 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _24842 = mem[_24589 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24589 + 96])] = mem[_24589 + 128 len floor32(mem[_24589 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _24842) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _24842) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _24842) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _24842) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _24842) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _24842) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _24842) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _24842) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _24842) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42599 = mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43563 = mem[(32 * _24842) + ceil32(return_data.size) + _42599 + 128]
                                mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _42599 + 128])] = mem[(32 * _24842) + ceil32(return_data.size) + _42599 + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _42599 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43563) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _24842) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24842) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24842) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24842) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _42936 = mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44188 = mem[(32 * _24842) + ceil32(return_data.size) + _42936 + 128]
                                    mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _42936 + 128])] = mem[(32 * _24842) + ceil32(return_data.size) + _42936 + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _42936 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44188) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _24842) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _24842) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _24842) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24842) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24842) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24842) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57557 = mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24842) + ceil32(return_data.size) + mem[(32 * _24842) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _57999 = mem[(32 * _24842) + ceil32(return_data.size) + _57557 + 128]
                                    mem[(32 * _24842) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _57557 + 128])] = mem[(32 * _24842) + ceil32(return_data.size) + _57557 + 160 len floor32(mem[(32 * _24842) + ceil32(return_data.size) + _57557 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _57999) + (32 * _24842) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
            else:
                mem[0] = 10
                mem[196] = address(markets.field_0)
                idx = 196
                s = 0
                while (32 * markets.length) + 196 > idx + 32:
                    mem[idx + 32] = markets[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
                call 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.claimComp(address arg1, address[] arg2) with:
                     gas gas_remaining wei
                    args this.address, Array(len=markets.length, data=mem[196 len 32 * markets.length])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                if not STRATEGIST_FEE:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[100] = ext_call.return_data[0]
                    mem[132] = 0
                    mem[196] = this.address
                    mem[228] = block.timestamp
                    mem[164] = 160
                    mem[260] = sub_1bf50af2.length
                    if not sub_1bf50af2.length:
                        require ext_code.size(address(unirouterAddress))
                        call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _25627 = mem[96 len 4], ext_call.return_data[0 len 28]
                        require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                        require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                        require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                        mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                        _25889 = mem[_25627 + 96]
                        mem[ceil32(return_data.size) + 128 len floor32(mem[_25627 + 96])] = mem[_25627 + 128 len floor32(mem[_25627 + 96])]
                        var38001 = floor32(_25889)
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if stor0:
                            revert with 0, 'Pausable: paused'
                        if address(vaultAddress) != msg.sender:
                            if msg.sender != this.address:
                                if harvesterAddress != msg.sender:
                                    revert with 0, 
                                                32,
                                                109,
                                                0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                mem[(32 * _25889) + ceil32(return_data.size) + 305 len 19]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0:
                                if ext_call.return_data[0] >= 10^15:
                                    idx = 0
                                    s = ext_call.return_data[0]
                                    while idx < borrowDepth:
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not s:
                                            mem[(32 * _25889) + ceil32(return_data.size) + 132] = 0
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[(32 * _25889) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        if borrowRate * s / s != borrowRate:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(32 * _25889) + ceil32(return_data.size) + 229 len 31]
                                        mem[(32 * _25889) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (borrowRate * s / 100)
                                        mem[(32 * _25889) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = borrowRate * s / 100
                                        continue 
                                    if s + reserves < reserves:
                                        revert with 0, 'SafeMath: addition overflow'
                                    reserves += s
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    balanceOfPool = 0
                    else:
                        mem[0] = 9
                        mem[292] = address(sub_1bf50af2.field_0)
                        if (32 * sub_1bf50af2.length) + 196 <= 228:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _25759 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _25969 = mem[_25759 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_25759 + 96])] = mem[_25759 + 128 len floor32(mem[_25759 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _25969) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _25969) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _25969) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _25969) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _25969) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _25969) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                        else:
                            mem[324] = address(sub_1bf50af2.field_256)
                            idx = 324
                            s = 1
                            while (32 * sub_1bf50af2.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_1bf50af2[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52373 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _52539 = mem[_52373 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52373 + 96])] = mem[_52373 + 128 len floor32(mem[_52373 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _52539) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _52539) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _52539) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _52539) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _52539) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _52539) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                else:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = 0
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _26279 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _26922 = mem[_26279 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_26279 + 96])] = mem[_26279 + 128 len floor32(mem[_26279 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _26922) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _26922) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _26922) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _26922) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _26922) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _26922) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _26922) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _26922) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _26922) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42614 = mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43609 = mem[(32 * _26922) + ceil32(return_data.size) + _42614 + 128]
                                mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _42614 + 128])] = mem[(32 * _26922) + ceil32(return_data.size) + _42614 + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _42614 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43609) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _26922) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _26922) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _26922) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _26922) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _42949 = mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44207 = mem[(32 * _26922) + ceil32(return_data.size) + _42949 + 128]
                                    mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _42949 + 128])] = mem[(32 * _26922) + ceil32(return_data.size) + _42949 + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _42949 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44207) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _26922) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _26922) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _26922) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _26922) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _26922) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _26922) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57628 = mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26922) + ceil32(return_data.size) + mem[(32 * _26922) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58004 = mem[(32 * _26922) + ceil32(return_data.size) + _57628 + 128]
                                    mem[(32 * _26922) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _57628 + 128])] = mem[(32 * _26922) + ceil32(return_data.size) + _57628 + 160 len floor32(mem[(32 * _26922) + ceil32(return_data.size) + _57628 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58004) + (32 * _26922) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52386 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _52541 = mem[_52386 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52386 + 96])] = mem[_52386 + 128 len floor32(mem[_52386 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _52541) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _52541) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _52541) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _52541) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _52541) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _52541) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _52541) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _52541) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _52541) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _58572 = mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _59127 = mem[(32 * _52541) + ceil32(return_data.size) + _58572 + 128]
                                mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _58572 + 128])] = mem[(32 * _52541) + ceil32(return_data.size) + _58572 + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _58572 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _59127) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _52541) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52541) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52541) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52541) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _58647 = mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _59351 = mem[(32 * _52541) + ceil32(return_data.size) + _58647 + 128]
                                    mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _58647 + 128])] = mem[(32 * _52541) + ceil32(return_data.size) + _58647 + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _58647 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _59351) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _52541) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _52541) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _52541) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52541) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52541) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52541) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _64868 = mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52541) + ceil32(return_data.size) + mem[(32 * _52541) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _65152 = mem[(32 * _52541) + ceil32(return_data.size) + _64868 + 128]
                                    mem[(32 * _52541) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _64868 + 128])] = mem[(32 * _52541) + ceil32(return_data.size) + _64868 + 160 len floor32(mem[(32 * _52541) + ceil32(return_data.size) + _64868 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _65152) + (32 * _52541) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                    else:
                        if STRATEGIST_FEE * ext_call.return_data[0] / ext_call.return_data[0] != STRATEGIST_FEE:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = STRATEGIST_FEE * ext_call.return_data[0] / 10000
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _26471 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _27036 = mem[_26471 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_26471 + 96])] = mem[_26471 + 128 len floor32(mem[_26471 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _27036) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _27036) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _27036) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _27036) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _27036) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _27036) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _27036) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _27036) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _27036) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42611 = mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43607 = mem[(32 * _27036) + ceil32(return_data.size) + _42611 + 128]
                                mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _42611 + 128])] = mem[(32 * _27036) + ceil32(return_data.size) + _42611 + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _42611 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43607) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _27036) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _27036) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _27036) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _27036) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _42947 = mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44206 = mem[(32 * _27036) + ceil32(return_data.size) + _42947 + 128]
                                    mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _42947 + 128])] = mem[(32 * _27036) + ceil32(return_data.size) + _42947 + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _42947 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44206) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _27036) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _27036) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _27036) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _27036) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _27036) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _27036) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57606 = mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27036) + ceil32(return_data.size) + mem[(32 * _27036) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58001 = mem[(32 * _27036) + ceil32(return_data.size) + _57606 + 128]
                                    mem[(32 * _27036) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _57606 + 128])] = mem[(32 * _27036) + ceil32(return_data.size) + _57606 + 160 len floor32(mem[(32 * _27036) + ceil32(return_data.size) + _57606 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58001) + (32 * _27036) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52384 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _52540 = mem[_52384 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52384 + 96])] = mem[_52384 + 128 len floor32(mem[_52384 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _52540) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _52540) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _52540) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _52540) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _52540) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _52540) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _52540) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _52540) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _52540) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _58563 = mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _59089 = mem[(32 * _52540) + ceil32(return_data.size) + _58563 + 128]
                                mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _58563 + 128])] = mem[(32 * _52540) + ceil32(return_data.size) + _58563 + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _58563 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _59089) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _52540) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52540) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52540) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52540) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _58638 = mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _59344 = mem[(32 * _52540) + ceil32(return_data.size) + _58638 + 128]
                                    mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _58638 + 128])] = mem[(32 * _52540) + ceil32(return_data.size) + _58638 + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _58638 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _59344) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _52540) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _52540) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _52540) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52540) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52540) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52540) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _64839 = mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52540) + ceil32(return_data.size) + mem[(32 * _52540) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _65151 = mem[(32 * _52540) + ceil32(return_data.size) + _64839 + 128]
                                    mem[(32 * _52540) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _64839 + 128])] = mem[(32 * _52540) + ceil32(return_data.size) + _64839 + 160 len floor32(mem[(32 * _52540) + ceil32(return_data.size) + _64839 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _65151) + (32 * _52540) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
    else:
        if keeperAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        72,
                        0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                        mem[236 len 24]
        if stor0:
            revert with 0, 'Pausable: paused'
        require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
        staticcall 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.pendingComptrollerImplementation() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20]:
            if msg.sender == owner:
                if stor0:
                    revert with 0, 'Pausable: paused'
                stor0 = 1
                emit Paused(msg.sender);
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(inputAddress):
                    revert with 0, 'Address: call to non-contract'
                mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                mem[324 len 0] = 0
                call inputAddress.0xfdfa0ebe with:
                     gas gas_remaining wei
                    args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                        revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[424 len 64] = 0, address(unirouterAddress), 0
                    mem[516 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[360 len 28], mem[488 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[424] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[424]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[428] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                    else:
                        mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[456]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                else:
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                    if eth.balance(this.address) < 0:
                        revert with 0, 
                                    32,
                                    38,
                                    0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                    mem[ceil32(return_data.size) + 531 len 26]
                    if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                        revert with 0, 'Address: call to non-contract'
                    mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                    mem[ceil32(return_data.size) + 517 len 4] = 0
                    call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                       funct uint32(stor3)
                         gas gas_remaining wei
                        args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 
                                        32,
                                        42,
                                        0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 535 len 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[ceil32(return_data.size) + 425]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 526 len 31]
                                if borrowRate <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[ceil32(return_data.size) + 429] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 
                                        'SafeERC20: low-level call failed',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[ceil32(return_data.size) + 457]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        s = mem[(2 * ceil32(return_data.size)) + 426]
                        t = ext_call.return_data[0]
                        while t < s:
                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (0 / borrowRate))
                            else:
                                if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                if borrowRate <= 0:
                                    revert with 0, 
                                                'SafeMath: division by zero',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require borrowRate
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                    revert with 0, 
                                                'SafeMath: subtraction overflow',
                                                mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(2 * ceil32(return_data.size)) + 430] = this.address
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = ext_call.return_data[0]
                            t = ext_call.return_data[0]
                            continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 
                                        'SafeMath: subtraction overflow',
                                        mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                if keeperAddress != msg.sender:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                72,
                                0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                                mem[236 len 24]
                if msg.sender == owner:
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    stor0 = 1
                    emit Paused(msg.sender);
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(inputAddress):
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    call inputAddress.0xfdfa0ebe with:
                         gas gas_remaining wei
                        args 0, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[424 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
                        mem[516 len 4] = 0
                        mem[488 len 0] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[488 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[424]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[428] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        else:
                            mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[456]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if not return_data.size:
                            if eth.balance(this.address) < 0:
                                revert with 0, 
                                            32,
                                            38,
                                            0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                            mem[ceil32(return_data.size) + 531 len 26]
                            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                                revert with 0, 'Address: call to non-contract'
                            mem[ceil32(return_data.size) + 425 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
                            mem[ceil32(return_data.size) + 517 len 4] = 0
                            mem[ceil32(return_data.size) + 489 len 0] = 0
                            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                               funct uint32(stor3)
                                 gas gas_remaining wei
                                args Mask(480, -256, approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0) << 256, mem[ceil32(return_data.size) + 489 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = mem[ceil32(return_data.size) + 425]
                                t = ext_call.return_data[0]
                                while t < s:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 0 / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (0 / borrowRate))
                                    else:
                                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 526 len 31]
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[ceil32(return_data.size) + 429] = this.address
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    s = ext_call.return_data[0]
                                    t = ext_call.return_data[0]
                                    continue 
                            else:
                                mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[ceil32(return_data.size) + 457]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(2 * ceil32(return_data.size)) + 536 len 22]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = mem[(2 * ceil32(return_data.size)) + 426]
                                t = ext_call.return_data[0]
                                while t < s:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 0 / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (0 / borrowRate))
                                    else:
                                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 527 len 31]
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[(2 * ceil32(return_data.size)) + 430] = this.address
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    s = ext_call.return_data[0]
                                    t = ext_call.return_data[0]
                                    continue 
                        else:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                            if eth.balance(this.address) < 0:
                                revert with 0, 
                                            32,
                                            38,
                                            0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                            mem[ceil32(return_data.size) + 531 len 26]
                            if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                                revert with 0, 'Address: call to non-contract'
                            mem[ceil32(return_data.size) + 425 len 64] = approve(address arg1, uint256 arg2), Mask(224, 0, stor3), uint32(stor3), 0
                            mem[ceil32(return_data.size) + 517 len 4] = 0
                            call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                               funct uint32(stor3)
                                 gas gas_remaining wei
                                args 0, mem[ceil32(return_data.size) + 489 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                                if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = mem[ceil32(return_data.size) + 425]
                                t = ext_call.return_data[0]
                                while t < s:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 0 / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (0 / borrowRate))
                                    else:
                                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 526 len 31]
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[ceil32(return_data.size) + 429] = this.address
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    s = ext_call.return_data[0]
                                    t = ext_call.return_data[0]
                                    continue 
                            else:
                                mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[ceil32(return_data.size) + 457]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address, mem[(2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = mem[(2 * ceil32(return_data.size)) + 426]
                                t = ext_call.return_data[0]
                                while t < s:
                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args t
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 0 / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (0 / borrowRate))
                                    else:
                                        if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 527 len 31]
                                        if borrowRate <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require borrowRate
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[(2 * ceil32(return_data.size)) + 430] = this.address
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    s = ext_call.return_data[0]
                                    t = ext_call.return_data[0]
                                    continue 
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                         gas gas_remaining wei
                        args -1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.redeem(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    reserves = 0
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                         gas gas_remaining wei
                        args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                else:
                    if keeperAddress != msg.sender:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    72,
                                    0x2e4d65736f205374726174204572726f723a20556e617574686f72697a6564206163636573732e204f6e6c7920746865206d616e616765722063616e206163636573732074686973,
                                    mem[236 len 24]
                    if stor0:
                        revert with 0, 'Pausable: paused'
                    stor0 = 1
                    emit Paused(msg.sender);
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(inputAddress):
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                    mem[324 len 0] = 0
                    call inputAddress.0xfdfa0ebe with:
                         gas gas_remaining wei
                        args Mask(480, -256, approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0) << 256, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                        if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                            revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[530 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[424 len 64] = 0, address(unirouterAddress), 0
                        mem[516 len 4] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args 0, mem[360 len 28], mem[488 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 32, 42, 0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[534 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[424] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[424]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 32, 33, 0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[525 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[428] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        else:
                            mem[456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[456]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                             gas gas_remaining wei
                            args -1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.redeem(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        reserves = 0
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                             gas gas_remaining wei
                            args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                        if eth.balance(this.address) < 0:
                            revert with 0, 
                                        32,
                                        38,
                                        0x2e416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                        mem[ceil32(return_data.size) + 531 len 26]
                        if not ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475):
                            revert with 0, 'Address: call to non-contract'
                        mem[ceil32(return_data.size) + 425 len 64] = 0, address(unirouterAddress), 0
                        mem[ceil32(return_data.size) + 517 len 4] = 0
                        call 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475 with:
                           funct uint32(stor3)
                             gas gas_remaining wei
                            args 0, mem[ceil32(return_data.size) + 361 len 28], mem[ceil32(return_data.size) + 489 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with approve(address arg1, uint256 arg2), 171190167871914701914677161, 0, 0
                            if not approve(address arg1, uint256 arg2), 171190167871914701914677161:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 535 len 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[ceil32(return_data.size) + 425]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 526 len 31]
                                    if borrowRate <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[ceil32(return_data.size) + 429] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args -1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeem(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            reserves = 0
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                        else:
                            mem[ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[(2 * ceil32(return_data.size)) + 536 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            s = mem[(2 * ceil32(return_data.size)) + 426]
                            t = ext_call.return_data[0]
                            while t < s:
                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.repayBorrow(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args t
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                     gas gas_remaining wei
                                    args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if borrowRate <= 0:
                                        revert with 0, 
                                                    'SafeMath: division by zero',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 0 / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 
                                                    'SafeMath: subtraction overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (0 / borrowRate))
                                else:
                                    if 100 * ext_call.return_data[0] / ext_call.return_data[0] != 100:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 527 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                    if borrowRate <= 0:
                                        revert with 0, 
                                                    'SafeMath: division by zero',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require borrowRate
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if 100 * ext_call.return_data[0] / borrowRate > ext_call.return_data[0]:
                                        revert with 0, 
                                                    'SafeMath: subtraction overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.redeemUnderlying(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - (100 * ext_call.return_data[0] / borrowRate))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[(2 * ceil32(return_data.size)) + 430] = this.address
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[(2 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                s = ext_call.return_data[0]
                                t = ext_call.return_data[0]
                                continue 
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.repayBorrow(uint256 arg1) with:
                                 gas gas_remaining wei
                                args -1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            staticcall 0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.redeem(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            reserves = 0
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                 gas gas_remaining wei
                                args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 
                                            'SafeMath: subtraction overflow',
                                            mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            ('le', ('ext_call.return_data', 0, 32), ('ext_call.return_data', 0, 32))
            balanceOfPool = 0
            uint8(stor11.field_0) = 1
            emit StratPanic(msg.sender);
        else:
            if not markets.length:
                require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
                call 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.claimComp(address arg1, address[] arg2) with:
                     gas gas_remaining wei
                    args this.address, 64, markets.length
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                if not STRATEGIST_FEE:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[100] = ext_call.return_data[0]
                    mem[132] = 0
                    mem[196] = this.address
                    mem[228] = block.timestamp
                    mem[164] = 160
                    mem[260] = sub_1bf50af2.length
                    if not sub_1bf50af2.length:
                        require ext_code.size(address(unirouterAddress))
                        call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _70 = mem[96 len 4], ext_call.return_data[0 len 28]
                        require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                        require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                        require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                        mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                        _105 = mem[_70 + 96]
                        mem[ceil32(return_data.size) + 128 len floor32(mem[_70 + 96])] = mem[_70 + 128 len floor32(mem[_70 + 96])]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if stor0:
                            revert with 0, 'Pausable: paused'
                        if address(vaultAddress) != msg.sender:
                            if msg.sender != this.address:
                                if harvesterAddress != msg.sender:
                                    revert with 0, 
                                                32,
                                                109,
                                                0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                mem[(32 * _105) + ceil32(return_data.size) + 305 len 19]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0:
                                if ext_call.return_data[0] >= 10^15:
                                    idx = 0
                                    s = ext_call.return_data[0]
                                    while idx < borrowDepth:
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not s:
                                            mem[(32 * _105) + ceil32(return_data.size) + 132] = 0
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[(32 * _105) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        if borrowRate * s / s != borrowRate:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(32 * _105) + ceil32(return_data.size) + 229 len 31]
                                        mem[(32 * _105) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (borrowRate * s / 100)
                                        mem[(32 * _105) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = borrowRate * s / 100
                                        continue 
                                    if s + reserves < reserves:
                                        revert with 0, 'SafeMath: addition overflow'
                                    reserves += s
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    balanceOfPool = 0
                    else:
                        mem[0] = 9
                        mem[292] = address(sub_1bf50af2.field_0)
                        if (32 * sub_1bf50af2.length) + 196 <= 228:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _81 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _118 = mem[_81 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_81 + 96])] = mem[_81 + 128 len floor32(mem[_81 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _118) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _118) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _118) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _118) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _118) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _118) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                        else:
                            mem[324] = address(sub_1bf50af2.field_256)
                            idx = 324
                            s = 1
                            while (32 * sub_1bf50af2.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_1bf50af2[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24608 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _24943 = mem[_24608 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24608 + 96])] = mem[_24608 + 128 len floor32(mem[_24608 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _24943) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _24943) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _24943) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _24943) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _24943) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _24943) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                else:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = 0
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _146 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _185 = mem[_146 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_146 + 96])] = mem[_146 + 128 len floor32(mem[_146 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _185) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _185) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _185) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _185) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _185) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _185) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _185) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _185) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _185) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _12490 = mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _185) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _12575 = mem[(32 * _185) + ceil32(return_data.size) + _12490 + 128]
                                mem[(32 * _185) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _12490 + 128])] = mem[(32 * _185) + ceil32(return_data.size) + _12490 + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _12490 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _12575) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _185) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _185) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _185) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _185) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _12511 = mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _185) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _12600 = mem[(32 * _185) + ceil32(return_data.size) + _12511 + 128]
                                    mem[(32 * _185) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _12511 + 128])] = mem[(32 * _185) + ceil32(return_data.size) + _12511 + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _12511 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _12600) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _185) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _185) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _185) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _185) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _185) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _185) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _40556 = mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _185) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _185) + ceil32(return_data.size) + mem[(32 * _185) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _41666 = mem[(32 * _185) + ceil32(return_data.size) + _40556 + 128]
                                    mem[(32 * _185) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _40556 + 128])] = mem[(32 * _185) + ceil32(return_data.size) + _40556 + 160 len floor32(mem[(32 * _185) + ceil32(return_data.size) + _40556 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _41666) + (32 * _185) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24621 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _24945 = mem[_24621 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24621 + 96])] = mem[_24621 + 128 len floor32(mem[_24621 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _24945) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _24945) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _24945) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _24945) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _24945) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _24945) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _24945) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _24945) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _24945) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42632 = mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43831 = mem[(32 * _24945) + ceil32(return_data.size) + _42632 + 128]
                                mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _42632 + 128])] = mem[(32 * _24945) + ceil32(return_data.size) + _42632 + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _42632 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43831) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _24945) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24945) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24945) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24945) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _43255 = mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44562 = mem[(32 * _24945) + ceil32(return_data.size) + _43255 + 128]
                                    mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _43255 + 128])] = mem[(32 * _24945) + ceil32(return_data.size) + _43255 + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _43255 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44562) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _24945) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _24945) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _24945) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24945) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24945) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24945) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57688 = mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24945) + ceil32(return_data.size) + mem[(32 * _24945) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58008 = mem[(32 * _24945) + ceil32(return_data.size) + _57688 + 128]
                                    mem[(32 * _24945) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _57688 + 128])] = mem[(32 * _24945) + ceil32(return_data.size) + _57688 + 160 len floor32(mem[(32 * _24945) + ceil32(return_data.size) + _57688 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58008) + (32 * _24945) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                    else:
                        if STRATEGIST_FEE * ext_call.return_data[0] / ext_call.return_data[0] != STRATEGIST_FEE:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = STRATEGIST_FEE * ext_call.return_data[0] / 10000
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _159 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _191 = mem[_159 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_159 + 96])] = mem[_159 + 128 len floor32(mem[_159 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _191) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _191) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _191) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _191) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _191) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _191) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _191) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _191) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _191) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _12487 = mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _191) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _12573 = mem[(32 * _191) + ceil32(return_data.size) + _12487 + 128]
                                mem[(32 * _191) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _12487 + 128])] = mem[(32 * _191) + ceil32(return_data.size) + _12487 + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _12487 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _12573) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _191) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _191) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _191) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _191) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _12509 = mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _191) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _12599 = mem[(32 * _191) + ceil32(return_data.size) + _12509 + 128]
                                    mem[(32 * _191) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _12509 + 128])] = mem[(32 * _191) + ceil32(return_data.size) + _12509 + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _12509 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _12599) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _191) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _191) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _191) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _191) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _191) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _191) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _40534 = mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _191) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _191) + ceil32(return_data.size) + mem[(32 * _191) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _41663 = mem[(32 * _191) + ceil32(return_data.size) + _40534 + 128]
                                    mem[(32 * _191) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _40534 + 128])] = mem[(32 * _191) + ceil32(return_data.size) + _40534 + 160 len floor32(mem[(32 * _191) + ceil32(return_data.size) + _40534 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _41663) + (32 * _191) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _24619 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _24944 = mem[_24619 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_24619 + 96])] = mem[_24619 + 128 len floor32(mem[_24619 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _24944) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _24944) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _24944) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _24944) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _24944) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _24944) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _24944) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _24944) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _24944) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42623 = mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43793 = mem[(32 * _24944) + ceil32(return_data.size) + _42623 + 128]
                                mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _42623 + 128])] = mem[(32 * _24944) + ceil32(return_data.size) + _42623 + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _42623 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43793) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _24944) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24944) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24944) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24944) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _43246 = mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44555 = mem[(32 * _24944) + ceil32(return_data.size) + _43246 + 128]
                                    mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _43246 + 128])] = mem[(32 * _24944) + ceil32(return_data.size) + _43246 + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _43246 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44555) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _24944) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _24944) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _24944) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _24944) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _24944) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _24944) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57659 = mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _24944) + ceil32(return_data.size) + mem[(32 * _24944) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58007 = mem[(32 * _24944) + ceil32(return_data.size) + _57659 + 128]
                                    mem[(32 * _24944) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _57659 + 128])] = mem[(32 * _24944) + ceil32(return_data.size) + _57659 + 160 len floor32(mem[(32 * _24944) + ceil32(return_data.size) + _57659 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58007) + (32 * _24944) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
            else:
                mem[0] = 10
                mem[196] = address(markets.field_0)
                idx = 196
                s = 0
                while (32 * markets.length) + 196 > idx + 32:
                    mem[idx + 32] = markets[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                require ext_code.size(0x260e596dabe3afc463e75b6cc05d8c46acacfb09)
                call 0x260e596dabe3afc463e75b6cc05d8c46acacfb09.claimComp(address arg1, address[] arg2) with:
                     gas gas_remaining wei
                    args this.address, Array(len=markets.length, data=mem[196 len 32 * markets.length])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                if not STRATEGIST_FEE:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[100] = ext_call.return_data[0]
                    mem[132] = 0
                    mem[196] = this.address
                    mem[228] = block.timestamp
                    mem[164] = 160
                    mem[260] = sub_1bf50af2.length
                    if not sub_1bf50af2.length:
                        require ext_code.size(address(unirouterAddress))
                        call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _25726 = mem[96 len 4], ext_call.return_data[0 len 28]
                        require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                        require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                        require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                        mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                        _25954 = mem[_25726 + 96]
                        mem[ceil32(return_data.size) + 128 len floor32(mem[_25726 + 96])] = mem[_25726 + 128 len floor32(mem[_25726 + 96])]
                        var39001 = floor32(_25954)
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if stor0:
                            revert with 0, 'Pausable: paused'
                        if address(vaultAddress) != msg.sender:
                            if msg.sender != this.address:
                                if harvesterAddress != msg.sender:
                                    revert with 0, 
                                                32,
                                                109,
                                                0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                mem[(32 * _25954) + ceil32(return_data.size) + 305 len 19]
                        require ext_code.size(inputAddress)
                        staticcall inputAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0:
                                if ext_call.return_data[0] >= 10^15:
                                    idx = 0
                                    s = ext_call.return_data[0]
                                    while idx < borrowDepth:
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args s
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not s:
                                            mem[(32 * _25954) + ceil32(return_data.size) + 132] = 0
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args 0
                                            mem[(32 * _25954) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = 0
                                            continue 
                                        if borrowRate * s / s != borrowRate:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(32 * _25954) + ceil32(return_data.size) + 229 len 31]
                                        mem[(32 * _25954) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (borrowRate * s / 100)
                                        mem[(32 * _25954) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        idx = idx + 1
                                        s = borrowRate * s / 100
                                        continue 
                                    if s + reserves < reserves:
                                        revert with 0, 'SafeMath: addition overflow'
                                    reserves += s
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                    call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                         gas gas_remaining wei
                                        args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    balanceOfPool = 0
                    else:
                        mem[0] = 9
                        mem[292] = address(sub_1bf50af2.field_0)
                        if (32 * sub_1bf50af2.length) + 196 <= 228:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _25791 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _25982 = mem[_25791 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_25791 + 96])] = mem[_25791 + 128 len floor32(mem[_25791 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _25982) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _25982) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _25982) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _25982) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _25982) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _25982) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                        else:
                            mem[324] = address(sub_1bf50af2.field_256)
                            idx = 324
                            s = 1
                            while (32 * sub_1bf50af2.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_1bf50af2[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[28 len 4], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[292 len 32 * sub_1bf50af2.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52406 = mem[96 len 4], ext_call.return_data[0 len 28]
                            require mem[96 len 4], ext_call.return_data[0 len 28] <= 4294967296
                            require mem[96 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                            require mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96] <= 4294967296 and mem[96 len 4], ext_call.return_data[0 len 28] + (32 * mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], ext_call.return_data[0 len 28] + 96]
                            _52542 = mem[_52406 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52406 + 96])] = mem[_52406 + 128 len floor32(mem[_52406 + 96])]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if stor0:
                                revert with 0, 'Pausable: paused'
                            if address(vaultAddress) != msg.sender:
                                if msg.sender != this.address:
                                    if harvesterAddress != msg.sender:
                                        revert with 0, 
                                                    32,
                                                    109,
                                                    0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                    mem[(32 * _52542) + ceil32(return_data.size) + 305 len 19]
                            require ext_code.size(inputAddress)
                            staticcall inputAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                if ext_call.return_data[0] > 0:
                                    if ext_call.return_data[0] >= 10^15:
                                        idx = 0
                                        s = ext_call.return_data[0]
                                        while idx < borrowDepth:
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args s
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not s:
                                                mem[(32 * _52542) + ceil32(return_data.size) + 132] = 0
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                mem[(32 * _52542) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = 0
                                                continue 
                                            if borrowRate * s / s != borrowRate:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(32 * _52542) + ceil32(return_data.size) + 229 len 31]
                                            mem[(32 * _52542) + ceil32(return_data.size) + 132] = borrowRate * s / 100
                                            require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (borrowRate * s / 100)
                                            mem[(32 * _52542) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            idx = idx + 1
                                            s = borrowRate * s / 100
                                            continue 
                                        if s + reserves < reserves:
                                            revert with 0, 'SafeMath: addition overflow'
                                        reserves += s
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                        call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                             gas gas_remaining wei
                                            args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        balanceOfPool = 0
                else:
                    staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = 0
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _26419 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _26982 = mem[_26419 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_26419 + 96])] = mem[_26419 + 128 len floor32(mem[_26419 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _26982) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _26982) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _26982) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _26982) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _26982) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _26982) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _26982) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _26982) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _26982) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42638 = mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43839 = mem[(32 * _26982) + ceil32(return_data.size) + _42638 + 128]
                                mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _42638 + 128])] = mem[(32 * _26982) + ceil32(return_data.size) + _42638 + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _42638 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43839) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _26982) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _26982) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _26982) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _26982) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _43259 = mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44574 = mem[(32 * _26982) + ceil32(return_data.size) + _43259 + 128]
                                    mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _43259 + 128])] = mem[(32 * _26982) + ceil32(return_data.size) + _43259 + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _43259 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44574) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _26982) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _26982) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _26982) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _26982) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _26982) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _26982) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57730 = mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _26982) + ceil32(return_data.size) + mem[(32 * _26982) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58012 = mem[(32 * _26982) + ceil32(return_data.size) + _57730 + 128]
                                    mem[(32 * _26982) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _57730 + 128])] = mem[(32 * _26982) + ceil32(return_data.size) + _57730 + 160 len floor32(mem[(32 * _26982) + ceil32(return_data.size) + _57730 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58012) + (32 * _26982) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, 0, 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52419 = mem[96 len 4], 0
                            require mem[96 len 4], 0 <= 4294967296
                            require mem[96 len 4], 0 + 32 <= return_data.size
                            require mem[mem[96 len 4], 0 + 96] <= 4294967296 and mem[96 len 4], 0 + (32 * mem[mem[96 len 4], 0 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], 0 + 96]
                            _52544 = mem[_52419 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52419 + 96])] = mem[_52419 + 128 len floor32(mem[_52419 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _52544) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _52544) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _52544) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _52544) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _52544) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _52544) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _52544) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _52544) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _52544) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _58608 = mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _59313 = mem[(32 * _52544) + ceil32(return_data.size) + _58608 + 128]
                                mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _58608 + 128])] = mem[(32 * _52544) + ceil32(return_data.size) + _58608 + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _58608 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _59313) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _52544) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52544) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52544) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52544) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _58685 = mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _59388 = mem[(32 * _52544) + ceil32(return_data.size) + _58685 + 128]
                                    mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _58685 + 128])] = mem[(32 * _52544) + ceil32(return_data.size) + _58685 + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _58685 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _59388) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _52544) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _52544) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _52544) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52544) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52544) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52544) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _64944 = mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52544) + ceil32(return_data.size) + mem[(32 * _52544) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _65154 = mem[(32 * _52544) + ceil32(return_data.size) + _64944 + 128]
                                    mem[(32 * _52544) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _64944 + 128])] = mem[(32 * _52544) + ceil32(return_data.size) + _64944 + 160 len floor32(mem[(32 * _52544) + ceil32(return_data.size) + _64944 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _65154) + (32 * _52544) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                    else:
                        if STRATEGIST_FEE * ext_call.return_data[0] / ext_call.return_data[0] != STRATEGIST_FEE:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        mem[96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[100] = STRATEGIST_FEE * ext_call.return_data[0] / 10000
                        mem[132] = 0
                        mem[196] = strategistAddress
                        mem[228] = block.timestamp
                        mem[164] = 160
                        mem[260] = sub_76c76f91.length
                        if not sub_76c76f91.length:
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _26523 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _27090 = mem[_26523 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_26523 + 96])] = mem[_26523 + 128 len floor32(mem[_26523 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _27090) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _27090) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _27090) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _27090) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _27090) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _27090) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _27090) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _27090) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _27090) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _42635 = mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _43837 = mem[(32 * _27090) + ceil32(return_data.size) + _42635 + 128]
                                mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _42635 + 128])] = mem[(32 * _27090) + ceil32(return_data.size) + _42635 + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _42635 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _43837) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _27090) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _27090) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _27090) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _27090) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _43257 = mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _44573 = mem[(32 * _27090) + ceil32(return_data.size) + _43257 + 128]
                                    mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _43257 + 128])] = mem[(32 * _27090) + ceil32(return_data.size) + _43257 + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _43257 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _44573) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _27090) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _27090) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _27090) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _27090) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _27090) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _27090) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _57708 = mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _27090) + ceil32(return_data.size) + mem[(32 * _27090) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _58009 = mem[(32 * _27090) + ceil32(return_data.size) + _57708 + 128]
                                    mem[(32 * _27090) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _57708 + 128])] = mem[(32 * _27090) + ceil32(return_data.size) + _57708 + 160 len floor32(mem[(32 * _27090) + ceil32(return_data.size) + _57708 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _58009) + (32 * _27090) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                        else:
                            mem[0] = 8
                            mem[292] = address(sub_76c76f91.field_0)
                            idx = 292
                            s = 0
                            while (32 * sub_76c76f91.length) + 292 > idx + 32:
                                mem[idx + 32] = sub_76c76f91[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require ext_code.size(address(unirouterAddress))
                            call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 0, uint32(STRATEGIST_FEE * ext_call.return_data[0] / 10000), 0, 160, strategistAddress, block.timestamp, sub_76c76f91.length, mem[292 len 32 * sub_76c76f91.length]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _52417 = mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 <= 4294967296
                            require mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 32 <= return_data.size
                            require mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96] <= 4294967296 and mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + (32 * mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]) + 32 <= return_data.size
                            mem[ceil32(return_data.size) + 96] = mem[mem[96 len 4], Mask(224, 32, STRATEGIST_FEE * ext_call.return_data[0] / 10000) >> 32 + 96]
                            _52543 = mem[_52417 + 96]
                            mem[ceil32(return_data.size) + 128 len floor32(mem[_52417 + 96])] = mem[_52417 + 128 len floor32(mem[_52417 + 96])]
                            require ext_code.size(0xe0654c8e6fd4d733349ac7e09f6f23da256bf475)
                            staticcall 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[(32 * _52543) + ceil32(return_data.size) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[(32 * _52543) + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            mem[(32 * _52543) + ceil32(return_data.size) + 164] = 0
                            mem[(32 * _52543) + ceil32(return_data.size) + 228] = this.address
                            mem[(32 * _52543) + ceil32(return_data.size) + 260] = block.timestamp
                            mem[(32 * _52543) + ceil32(return_data.size) + 196] = 160
                            mem[(32 * _52543) + ceil32(return_data.size) + 292] = sub_1bf50af2.length
                            if not sub_1bf50af2.length:
                                require ext_code.size(address(unirouterAddress))
                                call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(32 * _52543) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (32 * _52543) + (2 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _58599 = mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                require mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                _59275 = mem[(32 * _52543) + ceil32(return_data.size) + _58599 + 128]
                                mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _58599 + 128])] = mem[(32 * _52543) + ceil32(return_data.size) + _58599 + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _58599 + 128])]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if stor0:
                                    revert with 0, 'Pausable: paused'
                                if address(vaultAddress) != msg.sender:
                                    if msg.sender != this.address:
                                        if harvesterAddress != msg.sender:
                                            revert with 0, 
                                                        32,
                                                        109,
                                                        0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                        mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 337 len 19]
                                require ext_code.size(inputAddress)
                                staticcall inputAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    if ext_call.return_data[0] > 0:
                                        if ext_call.return_data[0] >= 10^15:
                                            idx = 0
                                            s = ext_call.return_data[0]
                                            while idx < borrowDepth:
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args s
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not s:
                                                    mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = 0
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args 0
                                                    mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = 0
                                                    continue 
                                                if borrowRate * s / s != borrowRate:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                     gas gas_remaining wei
                                                    args (borrowRate * s / 100)
                                                mem[(32 * _59275) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                idx = idx + 1
                                                s = borrowRate * s / 100
                                                continue 
                                            if s + reserves < reserves:
                                                revert with 0, 'SafeMath: addition overflow'
                                            reserves += s
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                            call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                 gas gas_remaining wei
                                                args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            balanceOfPool = 0
                            else:
                                mem[0] = 9
                                mem[(32 * _52543) + ceil32(return_data.size) + 324] = address(sub_1bf50af2.field_0)
                                if (32 * sub_1bf50af2.length) + 196 <= 228:
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52543) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52543) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52543) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _58676 = mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _59381 = mem[(32 * _52543) + ceil32(return_data.size) + _58676 + 128]
                                    mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _58676 + 128])] = mem[(32 * _52543) + ceil32(return_data.size) + _58676 + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _58676 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _59381) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
                                else:
                                    mem[(32 * _52543) + ceil32(return_data.size) + 356] = address(sub_1bf50af2.field_256)
                                    idx = (32 * _52543) + ceil32(return_data.size) + 356
                                    s = 1
                                    while (32 * _52543) + ceil32(return_data.size) + (32 * sub_1bf50af2.length) + 324 > idx + 32:
                                        mem[idx + 32] = sub_1bf50af2[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    require ext_code.size(address(unirouterAddress))
                                    call address(unirouterAddress).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, 160, this.address, block.timestamp, sub_1bf50af2.length, mem[(32 * _52543) + ceil32(return_data.size) + 324 len 32 * sub_1bf50af2.length]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(32 * _52543) + ceil32(return_data.size) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (32 * _52543) + (2 * ceil32(return_data.size)) + 128
                                    require return_data.size >= 32
                                    _64915 = mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28]
                                    require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] <= 4294967296
                                    require mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 32 <= return_data.size
                                    require mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128] <= 4294967296 and mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + (32 * mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]) + 32 <= return_data.size
                                    mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 128] = mem[(32 * _52543) + ceil32(return_data.size) + mem[(32 * _52543) + ceil32(return_data.size) + 128 len 4], ext_call.return_data[0 len 28] + 128]
                                    _65153 = mem[(32 * _52543) + ceil32(return_data.size) + _64915 + 128]
                                    mem[(32 * _52543) + (2 * ceil32(return_data.size)) + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _64915 + 128])] = mem[(32 * _52543) + ceil32(return_data.size) + _64915 + 160 len floor32(mem[(32 * _52543) + ceil32(return_data.size) + _64915 + 128])]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if stor0:
                                        revert with 0, 'Pausable: paused'
                                    if address(vaultAddress) != msg.sender:
                                        if msg.sender != this.address:
                                            if harvesterAddress != msg.sender:
                                                revert with 0, 
                                                            32,
                                                            109,
                                                            0xfe4d65736f205374726174204572726f7220284465706f736974293a20556e617574686f72697a6564206163636573732e204f6e6c7920746865207661756c742c206861727665737465722c206f72207468697320636f6e74726163742063616e206163636573732074686973,
                                                            mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 337 len 19]
                                    require ext_code.size(inputAddress)
                                    staticcall inputAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        if ext_call.return_data[0] > 0:
                                            if ext_call.return_data[0] >= 10^15:
                                                idx = 0
                                                s = ext_call.return_data[0]
                                                while idx < borrowDepth:
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.mint(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args s
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not s:
                                                        mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = 0
                                                        require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                        call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        idx = idx + 1
                                                        s = 0
                                                        continue 
                                                    if borrowRate * s / s != borrowRate:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 261 len 31]
                                                    mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 164] = borrowRate * s / 100
                                                    require ext_code.size(0x8d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                    call 0x008d9aed9882b4953a0c9fa920168fa1fdfa0ebe.borrow(uint256 arg1) with:
                                                         gas gas_remaining wei
                                                        args (borrowRate * s / 100)
                                                    mem[(32 * _65153) + (32 * _52543) + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    idx = idx + 1
                                                    s = borrowRate * s / 100
                                                    continue 
                                                if s + reserves < reserves:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                reserves += s
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.balanceOfUnderlying(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0x720000000000000000000000008d9aed9882b4953a0c9fa920168fa1fdfa0ebe)
                                                call ????????????????????????????????????????.borrowBalanceCurrent(address arg1) with:
                                                     gas gas_remaining wei
                                                    args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                balanceOfPool = 0
    emit StratHarvest(msg.sender);
    emit StratHarvestFromMangager(msg.sender);
}



}
