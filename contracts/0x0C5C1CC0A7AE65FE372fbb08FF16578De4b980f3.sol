contract main {




// =====================  Runtime code  =====================


const lantern_bullseye = 11, 12 * 10^18, 3, 160, 224, 17, Mask(136, 120, 'Lantern, Bullseye') >> 120, 0, 194, 0x2e412062756c6c73657965206c616e7465726e2070726f766964657320636c65617220696c6c756d696e6174696f6e20696e20612036302d666f6f7420636f6e6520616e6420736861646f777920696c6c756d696e6174696f6e20696e2061203132302d666f6f7420636f6e652e204974206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e20636172727920612062756c6c73657965206c616e7465726e20696e206f6e652068616e64, mem[386 len 30] >> 1296, 0

const index = '', 0

const lantern_hooded = 12, 7 * 10^18, 2, 160, 224, 15, 0, 0, 191, 0x2e4120686f6f646564206c616e7465726e20636c6561726c7920696c6c756d696e6174657320612033302d666f6f742072616469757320616e642070726f766964657320736861646f777920696c6c756d696e6174696f6e20696e20612036302d666f6f74207261646975732e204974206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e206361727279206120686f6f646564206c616e7465726e20696e206f6e652068616e64, mem[383 len 1] >> 1272, 0

const hammer = 7, 5 * 10^17, 2, 160, 224, 6, 0, 0, 151, 0x2e496620612068616d6d6572206973207573656420696e20636f6d6261742c2074726561742069742061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f662061207370696b6564206761756e746c6574206f66206974732073697a65, mem[343 len 9] >> 952, 0

const rope_hempen = 20, 10^18, 10, 160, 224, 12, 0, 0, 72, 0x2e5468697320726f70652068617320322068697420706f696e747320616e642063616e2062652062757273742077697468206120444320323320537472656e67746820636865636b, mem[264 len 24] >> 320, 0

const grappling_hook = 6, 10^18, 4, 160, 224, 14, Mask(112, 144, 'Grappling Hook') >> 144, 0, 108, 0x2e5468726f77696e6720612067726170706c696e6720686f6f6b207375636365737366756c6c7920726571756972657320612055736520526f706520636865636b202844432031302c202b32207065722031302066656574206f662064697374616e6365207468726f776e29, mem[300 len 20] >> 608, 0

const manacles_masterwork = 18, 50 * 10^18, 2, 160, 224, 20, Mask(160, 96, 'Manacles, masterwork') >> 96, 0, 279, 0x2e4d616e61636c65732063616e2062696e642061204d656469756d2063726561747572652e2041206d616e61636c65642063726561747572652063616e2075736520746865204573636170652041727469737420736b696c6c20746f20736c69702066726565202844432033302c206f7220444320333520666f72206d6173746572776f726b206d616e61636c6573292e20427265616b696e6720746865206d616e61636c6573207265717569726573206120537472656e67746820636865636b202844432032362c206f7220444320323820666f72206d6173746572776f726b206d616e61636c6573292e204d616e61636c6573206861766520686172646e65737320313020616e642031302068697420706f696e74, mem[471 len 9] >> 1976, 0

const manacles = 17, 15 * 10^18, 2, 160, 224, 8, Mask(64, 192, 'Manacles') >> 192, 0, 279, 0x2e4d616e61636c65732063616e2062696e642061204d656469756d2063726561747572652e2041206d616e61636c65642063726561747572652063616e2075736520746865204573636170652041727469737420736b696c6c20746f20736c69702066726565202844432033302c206f7220444320333520666f72206d6173746572776f726b206d616e61636c6573292e20427265616b696e6720746865206d616e61636c6573207265717569726573206120537472656e67746820636865636b202844432032362c206f7220444320323820666f72206d6173746572776f726b206d616e61636c6573292e204d616e61636c6573206861766520686172646e65737320313020616e642031302068697420706f696e74, mem[471 len 9] >> 1976, 0

const oil = 19, 10^17, 1, 160, 224, 3, 0, 0, 488, 0xfe412070696e74206f66206f696c206275726e7320666f72203620686f75727320696e2061206c616e7465726e2e20596f752063616e20757365206120666c61736b206f66206f696c20617320612073706c61736820776561706f6e2e20557365207468652072756c657320666f7220616c6368656d6973747320666972652c2065786365707420746861742069742074616b657320612066756c6c20726f756e6420616374696f6e20746f2070726570617265206120666c61736b2077697468206120667573652e204f6e6365206974206973207468726f776e2c207468657265206973206120353025206368616e6365206f662074686520666c61736b2069676e6974696e67207375636365737366756c6c792e20596f752063616e20706f757220612070696e74206f66206f696c206f6e207468652067726f756e6420746f20636f76657220616e206172656120352066656574207371756172652c2070726f7669646564207468617420746865207375726661636520697320736d6f6f74682e204966206c69742c20746865206f696c206275726e7320666f72203220726f756e647320616e64206465616c732031643320706f696e7473206f6620666972652064616d61676520746f206561636820637265617475726520696e207468652061726561, mem[680 len 24] >> 3648, 0

const flint_and_steel = 5, 10^18, 0, 160, 224, 15, 0, 0, 125, 0x2e4c69676874696e67206120746f726368207769746820666c696e7420616e6420737465656c20697320612066756c6c2d726f756e6420616374696f6e2c20616e64206c69676874696e6720616e79206f7468657220666972652077697468207468656d2074616b6573206174206c656173742074686174206c6f6e67, mem[317 len 3] >> 744, 0

const crowbar = 4, 2 * 10^18, 5, 160, 224, 7, 0, 0, 219, 0x2e412063726f77626172206772616e74732061202b322063697263756d7374616e636520626f6e7573206f6e20537472656e67746820636865636b73206d61646520666f72207375636820707572706f7365732e204966207573656420696e20636f6d6261742c20747265617420612063726f776261722061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f66206120636c7562206f66206974732073697a65, mem[411 len 5] >> 1496, 0

const spyglass = 22, 1000 * 10^18, 1, 160, 224, 8, Mask(64, 192, 'Spyglass') >> 192, 0, 68, 0x2e4f626a6563747320766965776564207468726f756768206120737079676c61737320617265206d61676e696669656420746f2074776963652074686569722073697a65, mem[260 len 28] >> 288, 0

const jug_clay = 9, 3 * 10^16, 9, 160, 224, 9, Mask(72, 184, 'Jug, Clay') >> 184, 0, 77, 0x2e5468697320626173696320636572616d6963206a756720697320666974746564207769746820612073746f7070657220616e6420686f6c647320312067616c6c6f6e206f66206c6971756964, mem[269 len 19] >> 360, 0

const rope_silk = 21, 10 * 10^18, 5, 160, 224, 10, Mask(80, 176, 'Rope, Silk') >> 176, 0, 149, 0x2e5468697320726f70652068617320342068697420706f696e747320616e642063616e2062652062757273742077697468206120444320323420537472656e67746820636865636b2e20497420697320736f20737570706c6520746861742069742070726f76696465732061202b322063697263756d7374616e636520626f6e7573206f6e2055736520526f706520636865636b73, mem[341 len 11] >> 936, 0

const caltrops = 1, 10^18, 2, 160, 224, 8, Mask(64, 192, 'Caltrops') >> 192, 0, 301, 0x2e412063616c74726f70206973206120666f75722d70726f6e6765642069726f6e207370696b65206372616674656420736f2074686174206f6e652070726f6e67206661636573207570206e6f206d617474657220686f77207468652063616c74726f7020636f6d657320746f20726573742e20596f7520736361747465722063616c74726f7073206f6e207468652067726f756e6420696e2074686520686f7065207468617420796f757220656e656d6965732073746570206f6e207468656d206f7220617265206174206c6561737420666f7263656420746f20736c6f7720646f776e20746f2061766f6964207468656d2e204f6e6520322d706f756e6420626167206f662063616c74726f707320636f7665727320616e20617265612035206665657420737175617265, mem[493 len 19] >> 2152, 0

const candle = 2, 10^16, 0, 160, 224, 6, 0, 0, 64, 0x2e412063616e646c652064696d6c7920696c6c756d696e61746573206120352d666f6f742072616469757320616e64206275726e7320666f72203120686f7572

const class = '', 0

const chain = 3, 30 * 10^18, 2, 160, 224, 5, 0, 0, 84, 0x73436861696e2068617320686172646e65737320313020616e6420352068697420706f696e74732e2049742063616e2062652062757273742077697468206120444320323620537472656e67746820636865636b, mem[276 len 12] >> 416, 0

const lock_good = 15, 80 * 10^18, 1, 160, 224, 11, Mask(88, 168, 'Lock (good)') >> 168, 0, 144, 0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896, 0

const torch = 23, 10^16, 1, 160, 224, 5, 0, 0, 296, 0x2e4120746f726368206275726e7320666f72203120686f75722c20636c6561726c7920696c6c756d696e6174696e6720612032302d666f6f742072616469757320616e642070726f766964696e6720736861646f777920696c6c756d696e6174696f6e206f757420746f20612034302d666f6f74207261646975732e204966206120746f726368206973207573656420696e20636f6d6261742c2074726561742069742061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f662061206761756e746c6574206f66206974732073697a652c20706c7573203120706f696e74206f6620666972652064616d616765, mem[488 len 24] >> 2112, 0

const lock_average = 14, 40 * 10^18, 1, 160, 224, 14, Mask(112, 144, 'Lock (average)') >> 144, 0, 144, 0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896, 0

const lock_amazing = 16, 150 * 10^18, 1, 160, 224, 14, Mask(112, 144, 'Lock (amazing)') >> 144, 0, 144, 0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896, 0

const ink = 8, 8 * 10^18, 0, 160, 224, 3, 0, 0, 79, 0x2e5468697320697320626c61636b20696e6b2e20596f752063616e2062757920696e6b20696e206f7468657220636f6c6f72732c2062757420697420636f737473207477696365206173206d756368, mem[271 len 17] >> 376, 0

const vial = 24, 10^18, 1, 160, 224, 4, 0, 0, 110, 0x2e41207669616c20686f6c64732031206f756e6365206f66206c69717569642e205468652073746f70706572656420636f6e7461696e657220757375616c6c79206973206e6f206d6f7265207468616e203120696e6368207769646520616e64203320696e636865732068696768, mem[302 len 18] >> 624, 0

const lock_very_simple = 13, 20 * 10^18, 1, 160, 224, 18, Mask(144, 112, 'Lock (very simple)') >> 112, 0, 144, 0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896, 0

const lamp_common = 10, 10^17, 1, 160, 224, 12, 0, 0, 173, 0x2e41206c616d7020636c6561726c7920696c6c756d696e6174657320612031352d666f6f74207261646975732c2070726f766964657320736861646f777920696c6c756d696e6174696f6e206f757420746f20612033302d666f6f74207261646975732c20616e64206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e2063617272792061206c616d7020696e206f6e652068616e64, mem[365 len 19] >> 1128, 0


function _fallback() payable {
    revert
}

function item_by_id(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if 1 == arg1:
        return 1, 
               10^18,
               2,
               160,
               224,
               8,
               'Caltrops',
               0,
               301,
               0x2e412063616c74726f70206973206120666f75722d70726f6e6765642069726f6e207370696b65206372616674656420736f2074686174206f6e652070726f6e67206661636573207570206e6f206d617474657220686f77207468652063616c74726f7020636f6d657320746f20726573742e20596f7520736361747465722063616c74726f7073206f6e207468652067726f756e6420696e2074686520686f7065207468617420796f757220656e656d6965732073746570206f6e207468656d206f7220617265206174206c6561737420666f7263656420746f20736c6f7720646f776e20746f2061766f6964207468656d2e204f6e6520322d706f756e6420626167206f662063616c74726f707320636f7665727320616e20617265612035206665657420737175617265, mem[493 len 19] >> 2152,
               0
    if 2 == arg1:
        return 2, 
               10^16,
               0,
               160,
               224,
               6,
               0,
               0,
               64,
               0x2e412063616e646c652064696d6c7920696c6c756d696e61746573206120352d666f6f742072616469757320616e64206275726e7320666f72203120686f7572
    if 3 == arg1:
        return 3, 
               30 * 10^18,
               2,
               160,
               224,
               5,
               0,
               0,
               84,
               0x73436861696e2068617320686172646e65737320313020616e6420352068697420706f696e74732e2049742063616e2062652062757273742077697468206120444320323620537472656e67746820636865636b, mem[276 len 12] >> 416,
               0
    if 4 == arg1:
        return 4, 
               2 * 10^18,
               5,
               160,
               224,
               7,
               0,
               0,
               219,
               0x2e412063726f77626172206772616e74732061202b322063697263756d7374616e636520626f6e7573206f6e20537472656e67746820636865636b73206d61646520666f72207375636820707572706f7365732e204966207573656420696e20636f6d6261742c20747265617420612063726f776261722061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f66206120636c7562206f66206974732073697a65, mem[411 len 5] >> 1496,
               0
    if 5 == arg1:
        return 5, 
               10^18,
               0,
               160,
               224,
               15,
               0,
               0,
               125,
               0x2e4c69676874696e67206120746f726368207769746820666c696e7420616e6420737465656c20697320612066756c6c2d726f756e6420616374696f6e2c20616e64206c69676874696e6720616e79206f7468657220666972652077697468207468656d2074616b6573206174206c656173742074686174206c6f6e67, mem[317 len 3] >> 744,
               0
    if 6 == arg1:
        return 6, 
               10^18,
               4,
               160,
               224,
               14,
               'Grappling Hook',
               0,
               108,
               0x2e5468726f77696e6720612067726170706c696e6720686f6f6b207375636365737366756c6c7920726571756972657320612055736520526f706520636865636b202844432031302c202b32207065722031302066656574206f662064697374616e6365207468726f776e29, mem[300 len 20] >> 608,
               0
    if 7 == arg1:
        return 7, 
               5 * 10^17,
               2,
               160,
               224,
               6,
               0,
               0,
               151,
               0x2e496620612068616d6d6572206973207573656420696e20636f6d6261742c2074726561742069742061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f662061207370696b6564206761756e746c6574206f66206974732073697a65, mem[343 len 9] >> 952,
               0
    if 8 == arg1:
        return 8, 
               8 * 10^18,
               0,
               160,
               224,
               3,
               0,
               0,
               79,
               0x2e5468697320697320626c61636b20696e6b2e20596f752063616e2062757920696e6b20696e206f7468657220636f6c6f72732c2062757420697420636f737473207477696365206173206d756368, mem[271 len 17] >> 376,
               0
    if 9 == arg1:
        return 9, 
               3 * 10^16,
               9,
               160,
               224,
               9,
               'Jug, Clay',
               0,
               77,
               0x2e5468697320626173696320636572616d6963206a756720697320666974746564207769746820612073746f7070657220616e6420686f6c647320312067616c6c6f6e206f66206c6971756964, mem[269 len 19] >> 360,
               0
    if 10 == arg1:
        return 10, 
               10^17,
               1,
               160,
               224,
               12,
               0,
               0,
               173,
               0x2e41206c616d7020636c6561726c7920696c6c756d696e6174657320612031352d666f6f74207261646975732c2070726f766964657320736861646f777920696c6c756d696e6174696f6e206f757420746f20612033302d666f6f74207261646975732c20616e64206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e2063617272792061206c616d7020696e206f6e652068616e64, mem[365 len 19] >> 1128,
               0
    if 11 == arg1:
        return 11, 
               12 * 10^18,
               3,
               160,
               224,
               17,
               'Lantern, Bullseye',
               0,
               194,
               0x2e412062756c6c73657965206c616e7465726e2070726f766964657320636c65617220696c6c756d696e6174696f6e20696e20612036302d666f6f7420636f6e6520616e6420736861646f777920696c6c756d696e6174696f6e20696e2061203132302d666f6f7420636f6e652e204974206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e20636172727920612062756c6c73657965206c616e7465726e20696e206f6e652068616e64, mem[386 len 30] >> 1296,
               0
    if 12 == arg1:
        return 12, 
               7 * 10^18,
               2,
               160,
               224,
               15,
               0,
               0,
               191,
               0x2e4120686f6f646564206c616e7465726e20636c6561726c7920696c6c756d696e6174657320612033302d666f6f742072616469757320616e642070726f766964657320736861646f777920696c6c756d696e6174696f6e20696e20612036302d666f6f74207261646975732e204974206275726e7320666f72203620686f757273206f6e20612070696e74206f66206f696c2e20596f752063616e206361727279206120686f6f646564206c616e7465726e20696e206f6e652068616e64, mem[383 len 1] >> 1272,
               0
    if 13 == arg1:
        return 13, 
               20 * 10^18,
               1,
               160,
               224,
               18,
               'Lock (very simple)',
               0,
               144,
               0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896,
               0
    if 14 == arg1:
        return 14, 
               40 * 10^18,
               1,
               160,
               224,
               14,
               'Lock (average)',
               0,
               144,
               0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896,
               0
    if 15 == arg1:
        return 15, 
               80 * 10^18,
               1,
               160,
               224,
               11,
               'Lock (good)',
               0,
               144,
               0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896,
               0
    if 16 == arg1:
        return 16, 
               150 * 10^18,
               1,
               160,
               224,
               14,
               'Lock (amazing)',
               0,
               144,
               0x2e54686520444320746f206f70656e2061206c6f636b207769746820746865204f70656e204c6f636b20736b696c6c20646570656e6473206f6e20746865206c6f636b73207175616c6974793a2073696d706c6520284443203230292c206176657261676520284443203235292c20676f6f6420284443203330292c206f72207375706572696f722028444320343029, mem[336 len 16] >> 896,
               0
    if 17 == arg1:
        return 17, 
               15 * 10^18,
               2,
               160,
               224,
               8,
               'Manacles',
               0,
               279,
               0x2e4d616e61636c65732063616e2062696e642061204d656469756d2063726561747572652e2041206d616e61636c65642063726561747572652063616e2075736520746865204573636170652041727469737420736b696c6c20746f20736c69702066726565202844432033302c206f7220444320333520666f72206d6173746572776f726b206d616e61636c6573292e20427265616b696e6720746865206d616e61636c6573207265717569726573206120537472656e67746820636865636b202844432032362c206f7220444320323820666f72206d6173746572776f726b206d616e61636c6573292e204d616e61636c6573206861766520686172646e65737320313020616e642031302068697420706f696e74, mem[471 len 9] >> 1976,
               0
    if 18 == arg1:
        return 18, 
               50 * 10^18,
               2,
               160,
               224,
               20,
               'Manacles, masterwork',
               0,
               279,
               0x2e4d616e61636c65732063616e2062696e642061204d656469756d2063726561747572652e2041206d616e61636c65642063726561747572652063616e2075736520746865204573636170652041727469737420736b696c6c20746f20736c69702066726565202844432033302c206f7220444320333520666f72206d6173746572776f726b206d616e61636c6573292e20427265616b696e6720746865206d616e61636c6573207265717569726573206120537472656e67746820636865636b202844432032362c206f7220444320323820666f72206d6173746572776f726b206d616e61636c6573292e204d616e61636c6573206861766520686172646e65737320313020616e642031302068697420706f696e74, mem[471 len 9] >> 1976,
               0
    if 19 == arg1:
        return 19, 
               10^17,
               1,
               160,
               224,
               3,
               0,
               0,
               488,
               0xfe412070696e74206f66206f696c206275726e7320666f72203620686f75727320696e2061206c616e7465726e2e20596f752063616e20757365206120666c61736b206f66206f696c20617320612073706c61736820776561706f6e2e20557365207468652072756c657320666f7220616c6368656d6973747320666972652c2065786365707420746861742069742074616b657320612066756c6c20726f756e6420616374696f6e20746f2070726570617265206120666c61736b2077697468206120667573652e204f6e6365206974206973207468726f776e2c207468657265206973206120353025206368616e6365206f662074686520666c61736b2069676e6974696e67207375636365737366756c6c792e20596f752063616e20706f757220612070696e74206f66206f696c206f6e207468652067726f756e6420746f20636f76657220616e206172656120352066656574207371756172652c2070726f7669646564207468617420746865207375726661636520697320736d6f6f74682e204966206c69742c20746865206f696c206275726e7320666f72203220726f756e647320616e64206465616c732031643320706f696e7473206f6620666972652064616d61676520746f206561636820637265617475726520696e207468652061726561, mem[680 len 24] >> 3648,
               0
    if 20 == arg1:
        return 20, 
               10^18,
               10,
               160,
               224,
               12,
               0,
               0,
               72,
               0x2e5468697320726f70652068617320322068697420706f696e747320616e642063616e2062652062757273742077697468206120444320323320537472656e67746820636865636b, mem[264 len 24] >> 320,
               0
    if 21 == arg1:
        return 21, 
               10 * 10^18,
               5,
               160,
               224,
               10,
               'Rope, Silk',
               0,
               149,
               0x2e5468697320726f70652068617320342068697420706f696e747320616e642063616e2062652062757273742077697468206120444320323420537472656e67746820636865636b2e20497420697320736f20737570706c6520746861742069742070726f76696465732061202b322063697263756d7374616e636520626f6e7573206f6e2055736520526f706520636865636b73, mem[341 len 11] >> 936,
               0
    if 22 == arg1:
        return 22, 
               1000 * 10^18,
               1,
               160,
               224,
               8,
               'Spyglass',
               0,
               68,
               0x2e4f626a6563747320766965776564207468726f756768206120737079676c61737320617265206d61676e696669656420746f2074776963652074686569722073697a65, mem[260 len 28] >> 288,
               0
    if 23 == arg1:
        return 23, 
               10^16,
               1,
               160,
               224,
               5,
               0,
               0,
               296,
               0x2e4120746f726368206275726e7320666f72203120686f75722c20636c6561726c7920696c6c756d696e6174696e6720612032302d666f6f742072616469757320616e642070726f766964696e6720736861646f777920696c6c756d696e6174696f6e206f757420746f20612034302d666f6f74207261646975732e204966206120746f726368206973207573656420696e20636f6d6261742c2074726561742069742061732061206f6e652d68616e64656420696d70726f766973656420776561706f6e2074686174206465616c7320626c756467656f6e696e672064616d61676520657175616c20746f2074686174206f662061206761756e746c6574206f66206974732073697a652c20706c7573203120706f696e74206f6620666972652064616d616765, mem[488 len 24] >> 2112,
               0
    if arg1 != 24:
        return 0, 0, 0, 160, 192, 0, 0
    return 24, 
           10^18,
           1,
           160,
           224,
           4,
           0,
           0,
           110,
           0x2e41207669616c20686f6c64732031206f756e6365206f66206c69717569642e205468652073746f70706572656420636f6e7461696e657220757375616c6c79206973206e6f206d6f7265207468616e203120696e6368207769646520616e64203320696e636865732068696768, mem[302 len 18] >> 624,
           0
}



}
