contract main {




// =====================  Runtime code  =====================


#
#  - sub_04a404ba(?)
#
uint32 stor0;
address sub_34efb150Address;
uint256 stor0;
address sub_3a261badAddress;
address stor2;
address factAddress;
address sub_8e7f5634Address;
address sub_1c6ef204Address;
address stor10;
uint256 stor12; offset 32
uint256 stor12;
uint256 stor14;
array of address stor15;
address stor16;
uint256 sub_5081df82;
uint256 sub_76c4bbf0;
uint256 sub_d625c3c5;
uint256 sub_2c1b7e0a;
uint256 sub_8872fc44;

function sub_1c6ef204(?) payable {
    return sub_1c6ef204Address
}

function sub_2c1b7e0a(?) payable {
    return sub_2c1b7e0a
}

function sub_34efb150(?) payable {
    return address(sub_34efb150Address)
}

function sub_3a261bad(?) payable {
    return sub_3a261badAddress
}

function sub_5081df82(?) payable {
    return sub_5081df82
}

function fact() payable {
    return factAddress
}

function sub_76c4bbf0(?) payable {
    return sub_76c4bbf0
}

function sub_8872fc44(?) payable {
    return sub_8872fc44
}

function sub_8e7f5634(?) payable {
    return sub_8e7f5634Address
}

function sub_d625c3c5(?) payable {
    return sub_d625c3c5
}

function _fallback() payable {
    revert
}

function sub_1e868f76(?) payable {
    require ext_code.size(stor10)
    call stor10.0x8ed955b9 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_35345150(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if address(sub_34efb150Address) != msg.sender:
        revert with 0, 'jiba gei ni chi, mmmm'
    sub_1c6ef204Address = address(arg1)
}

function sub_6ea3a67d(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if address(sub_34efb150Address) != msg.sender:
        if sub_3a261badAddress != msg.sender:
            revert with 0, 'jiba gei ni chi,997'
    sub_d625c3c5 = arg1
}

function sub_ac0811f2(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if address(sub_34efb150Address) != msg.sender:
        if sub_3a261badAddress != msg.sender:
            revert with 0, 'jiba gei ni chi,xdbv'
    sub_2c1b7e0a = arg1
}

function sub_3bc37ed7(?) payable {
    require ext_code.size(0xb29065f0c5b9db719f180149f0251598df2f1e4)
    call 0x0b29065f0c5b9db719f180149f0251598df2f1e4.0x3ccfd60b with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_42e241eb(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(stor10)
    call stor10.0x5312ea8e with:
         gas gas_remaining wei
        args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_1bfa56bc(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(stor10)
    staticcall stor10.getPoolLength() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    idx = 0
    while idx < ext_call.return_data[0]:
        mem[ceil32(return_data.size) + 96] = 0x5312ea8e00000000000000000000000000000000000000000000000000000000
        mem[ceil32(return_data.size) + 100] = idx
        require ext_code.size(stor10)
        call stor10.0x5312ea8e with:
             gas gas_remaining wei
            args idx
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function sub_209d4a96(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(arg1), address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if address(arg1) == address(ext_call.return_data[0]):
        return ext_call.return_data[18 len 14], ext_call.return_data[32] << 144
    return ext_call.return_data[50 len 14], ext_call.return_data[0] << 144
}

function sub_9dc1983f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    mem[100] = this.address
    require ext_code.size(address(arg1))
    staticcall address(arg1).balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[0] > 0
    mem[ceil32(return_data.size) + 96] = 68
    mem[ceil32(return_data.size) + 132 len 28] = Mask(224, 0, stor0)
    mem[ceil32(return_data.size) + 128 len 4] = transfer(address arg1, uint256 arg2)
    mem[ceil32(return_data.size) + 196 len 96] = transfer(address arg1, uint256 arg2), Mask(224, 0, stor0), uint32(stor0), ext_call.return_data[0], mem[ceil32(return_data.size) + 196 len 28]
    call address(arg1).mem[ceil32(return_data.size) + 196 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(return_data.size) + 200 len 64]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if ext_call.return_data[0]:
            require ext_call.return_data[0] >= 32
            require 0, mem[132 len 28] == bool(0, mem[132 len 28])
            if not 0, mem[132 len 28]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
    else:
        mem[ceil32(return_data.size) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if return_data.size:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 228] == bool(mem[ceil32(return_data.size) + 228])
            if not mem[ceil32(return_data.size) + 228]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
}

function sub_ff1baa1d(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == address(arg2)
    if address(arg2) == stor2:
        return arg1
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(arg2), stor2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    require ext_code.size(sub_8e7f5634Address)
    if address(arg2) == address(ext_call.return_data[0]):
        staticcall sub_8e7f5634Address.quote(uint256 arg1, uint256 arg2, uint256 arg3) with:
                gas gas_remaining wei
               args arg1, ext_call.return_data[0] << 144, Mask(112, 0, ext_call.return_data[32])
    else:
        staticcall sub_8e7f5634Address.quote(uint256 arg1, uint256 arg2, uint256 arg3) with:
                gas gas_remaining wei
               args arg1, ext_call.return_data[32] << 144, Mask(112, 0, ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    return ext_call.return_data[0]
}

function pancakeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    if arg4.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(arg4.length) + 128 > test266151307() or ceil32(arg4.length) + 128 < 96:
        revert with 'NH{q', 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if block.timestamp > -1801:
        revert with 'NH{q', 17
    mem[ceil32(arg4.length) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
    mem[ceil32(arg4.length) + 132] = uint256(stor12.field_0)
    mem[ceil32(arg4.length) + 164] = 0
    mem[ceil32(arg4.length) + 196] = 160
    mem[ceil32(arg4.length) + 292] = stor15.length
    mem[0] = 15
    idx = 0
    s = 0
    t = ceil32(arg4.length) + 324
    while idx < stor15.length:
        mem[t] = stor15[s]
        idx = idx + 1
        s = s + 1
        t = t + 32
        continue 
    mem[ceil32(arg4.length) + 228] = this.address
    mem[ceil32(arg4.length) + 260] = block.timestamp + 1800
    require ext_code.size(sub_8e7f5634Address)
    call sub_8e7f5634Address with:
         gas gas_remaining wei
        args uint256(stor12.field_0), 0, 160, address(this.address), block.timestamp + 1800, stor15.length, mem[ceil32(arg4.length) + 324 len 32 * stor15.length]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(arg4.length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(arg4.length) + ceil32(return_data.size) + 128
    require return_data.size >= 32
    require 0, Mask(224, 0, stor12.field_32) <= test266151307()
    require ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 159 < ceil32(arg4.length) + return_data.size + 128
    _18 = mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]
    if mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128] > test266151307():
        revert with 'NH{q', 65
    if ceil32(arg4.length) + ceil32(return_data.size) + (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 160 > test266151307() or (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 32 < 0:
        revert with 'NH{q', 65
    mem[64] = ceil32(arg4.length) + ceil32(return_data.size) + (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 160
    mem[ceil32(arg4.length) + ceil32(return_data.size) + 128] = _18
    require 0, Mask(224, 0, stor12.field_32) + (32 * _18) + 32 <= return_data.size
    idx = 0
    s = ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 160
    t = ceil32(arg4.length) + ceil32(return_data.size) + 160
    while idx < _18:
        require mem[s] == mem[s]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if stor15.length < 1:
        revert with 'NH{q', 17
    if stor15.length - 1 >= stor15.length:
        revert with 'NH{q', 50
    mem[0] = 15
    mem[mem[64] + 4] = stor16
    mem[mem[64] + 36] = stor14
    require ext_code.size(stor15[stor15.length])
    call stor15[stor15.length].transfer(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args stor16, stor14
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _30 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    require mem[_30] == bool(mem[_30])
}

function uniswapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    if arg4.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(arg4.length) + 128 > test266151307() or ceil32(arg4.length) + 128 < 96:
        revert with 'NH{q', 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if block.timestamp > -1801:
        revert with 'NH{q', 17
    mem[ceil32(arg4.length) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
    mem[ceil32(arg4.length) + 132] = uint256(stor12.field_0)
    mem[ceil32(arg4.length) + 164] = 0
    mem[ceil32(arg4.length) + 196] = 160
    mem[ceil32(arg4.length) + 292] = stor15.length
    mem[0] = 15
    idx = 0
    s = 0
    t = ceil32(arg4.length) + 324
    while idx < stor15.length:
        mem[t] = stor15[s]
        idx = idx + 1
        s = s + 1
        t = t + 32
        continue 
    mem[ceil32(arg4.length) + 228] = this.address
    mem[ceil32(arg4.length) + 260] = block.timestamp + 1800
    require ext_code.size(sub_8e7f5634Address)
    call sub_8e7f5634Address with:
         gas gas_remaining wei
        args uint256(stor12.field_0), 0, 160, address(this.address), block.timestamp + 1800, stor15.length, mem[ceil32(arg4.length) + 324 len 32 * stor15.length]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(arg4.length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(arg4.length) + ceil32(return_data.size) + 128
    require return_data.size >= 32
    require 0, Mask(224, 0, stor12.field_32) <= test266151307()
    require ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 159 < ceil32(arg4.length) + return_data.size + 128
    _18 = mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]
    if mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128] > test266151307():
        revert with 'NH{q', 65
    if ceil32(arg4.length) + ceil32(return_data.size) + (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 160 > test266151307() or (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 32 < 0:
        revert with 'NH{q', 65
    mem[64] = ceil32(arg4.length) + ceil32(return_data.size) + (32 * mem[ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 128]) + 160
    mem[ceil32(arg4.length) + ceil32(return_data.size) + 128] = _18
    require 0, Mask(224, 0, stor12.field_32) + (32 * _18) + 32 <= return_data.size
    idx = 0
    s = ceil32(arg4.length) + 0, Mask(224, 0, stor12.field_32) + 160
    t = ceil32(arg4.length) + ceil32(return_data.size) + 160
    while idx < _18:
        require mem[s] == mem[s]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if stor15.length < 1:
        revert with 'NH{q', 17
    if stor15.length - 1 >= stor15.length:
        revert with 'NH{q', 50
    mem[0] = 15
    mem[mem[64] + 4] = stor16
    mem[mem[64] + 36] = stor14
    require ext_code.size(stor15[stor15.length])
    call stor15[stor15.length].transfer(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args stor16, stor14
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _30 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    require mem[_30] == bool(mem[_30])
}

function sub_ced97902(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if (32 * ('cd', 4).length) + 128 > test266151307() or (32 * ('cd', 4).length) + 128 < 96:
        revert with 'NH{q', 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == cd[36]
    mem[(32 * ('cd', 4).length) + 128] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
    mem[(32 * ('cd', 4).length) + 132] = cd[36]
    mem[(32 * ('cd', 4).length) + 164] = 64
    mem[(32 * ('cd', 4).length) + 196] = ('cd', 4).length
    idx = 0
    s = 128
    t = (32 * ('cd', 4).length) + 228
    while idx < ('cd', 4).length:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ext_code.size(sub_8e7f5634Address)
    staticcall sub_8e7f5634Address.getAmountsOut(uint256 arg1, address[] arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + 132 len (96 * ('cd', 4).length) + 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[(32 * ('cd', 4).length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = (32 * ('cd', 4).length) + ceil32(return_data.size) + 128
    require return_data.size >= 32
    _110 = mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32
    require mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 <= test266151307()
    require (32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 159 < (32 * ('cd', 4).length) + return_data.size + 128
    _111 = mem[(32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 128]
    if mem[(32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 128] > test266151307():
        revert with 'NH{q', 65
    if (32 * ('cd', 4).length) + ceil32(return_data.size) + (32 * mem[(32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 128]) + 160 > test266151307() or (32 * mem[(32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 128]) + 32 < 0:
        revert with 'NH{q', 65
    mem[64] = (32 * ('cd', 4).length) + ceil32(return_data.size) + (32 * mem[(32 * ('cd', 4).length) + mem[(32 * ('cd', 4).length) + 128 len 4], Mask(224, 32, cd[36]) >> 32 + 128]) + 160
    mem[(32 * ('cd', 4).length) + ceil32(return_data.size) + 128] = _111
    require _110 + (32 * _111) + 32 <= return_data.size
    idx = 0
    s = (32 * ('cd', 4).length) + _110 + 160
    t = (32 * ('cd', 4).length) + ceil32(return_data.size) + 160
    while idx < _111:
        require mem[s] == mem[s]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if _111 < 1:
        revert with 'NH{q', 17
    if _111 - 1 >= _111:
        revert with 'NH{q', 50
    _168 = mem[(32 * _111 - 1) + (32 * ('cd', 4).length) + ceil32(return_data.size) + 160]
    _169 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_169 + 32 len 64] = call.data[calldata.size len 64]
    if ('cd', 4).length < 1:
        revert with 'NH{q', 17
    if ('cd', 4).length - 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if 0 >= mem[_169]:
        revert with 'NH{q', 50
    mem[_169 + 32] = mem[(32 * ('cd', 4).length - 1) + 140 len 20]
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if 1 >= mem[_169]:
        revert with 'NH{q', 50
    mem[_169 + 64] = mem[140 len 20]
    mem[_169 + 96] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
    mem[_169 + 100] = cd[36]
    mem[_169 + 132] = 64
    mem[_169 + 164] = mem[_169]
    idx = 0
    s = _169 + 32
    t = _169 + 196
    while idx < mem[_169]:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ext_code.size(sub_8e7f5634Address)
    staticcall sub_8e7f5634Address.mem[mem[64] len 4] with:
            gas gas_remaining wei
           args mem[mem[64] + 4 len _169 + (32 * mem[_169]) + -mem[64] + 192]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _223 = mem[64]
    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _224 = mem[_223]
    require mem[_223] <= test266151307()
    require _223 + mem[_223] + 31 < _223 + return_data.size
    _225 = mem[_223 + mem[_223]]
    if mem[_223 + mem[_223]] > test266151307():
        revert with 'NH{q', 65
    if _223 + ceil32(return_data.size) + (32 * mem[_223 + mem[_223]]) + 32 > test266151307() or (32 * mem[_223 + mem[_223]]) + 32 < 0:
        revert with 'NH{q', 65
    mem[64] = _223 + ceil32(return_data.size) + (32 * mem[_223 + mem[_223]]) + 32
    mem[_223 + ceil32(return_data.size)] = _225
    require _224 + (32 * _225) + 32 <= return_data.size
    idx = 0
    s = _223 + _224 + 32
    t = _223 + ceil32(return_data.size) + 32
    while idx < _225:
        require mem[s] == mem[s]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if 0 >= _225:
        revert with 'NH{q', 50
    _265 = mem[_223 + ceil32(return_data.size) + 32]
    if _168 <= mem[_223 + ceil32(return_data.size) + 32]:
        return 0, mem[_223 + ceil32(return_data.size) + 32]
    if _168 < mem[_223 + ceil32(return_data.size) + 32]:
        revert with 'NH{q', 17
    if mem[96] < 1:
        revert with 'NH{q', 17
    if mem[96] - 1 >= mem[96]:
        revert with 'NH{q', 50
    _270 = mem[(32 * mem[96] - 1) + 128]
    if mem[(32 * mem[96] - 1) + 140 len 20] == stor2:
        mem[mem[64]] = _168 - mem[_223 + ceil32(return_data.size) + 32]
    else:
        mem[mem[64] + 4] = mem[(32 * mem[96] - 1) + 140 len 20]
        mem[mem[64] + 36] = stor2
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], stor2
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _275 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _276 = mem[_275]
        require mem[_275] == mem[_275 + 12 len 20]
        require ext_code.size(mem[_275 + 12 len 20])
        staticcall mem[_275 + 12 len 20].token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _280 = mem[_279]
        require mem[_279] == mem[_279 + 12 len 20]
        require ext_code.size(address(_276))
        staticcall address(_276).getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _283 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _284 = mem[_283]
        require mem[_283] == mem[_283 + 18 len 14]
        _285 = mem[_283 + 32]
        require mem[_283 + 32] == mem[_283 + 50 len 14]
        require mem[_283 + 64] == mem[_283 + 92 len 4]
        mem[mem[64] + 4] = _168 - _265
        if address(_270) == address(_280):
            mem[mem[64] + 36] = Mask(112, 0, _284)
            mem[mem[64] + 68] = Mask(112, 0, _285)
            require ext_code.size(sub_8e7f5634Address)
            staticcall sub_8e7f5634Address.quote(uint256 arg1, uint256 arg2, uint256 arg3) with:
                    gas gas_remaining wei
                   args _168 - _265, _284 << 144, Mask(112, 0, _285)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _291 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_291] == mem[_291]
            mem[mem[64]] = mem[_291]
        else:
            mem[mem[64] + 36] = Mask(112, 0, _285)
            mem[mem[64] + 68] = Mask(112, 0, _284)
            require ext_code.size(sub_8e7f5634Address)
            staticcall sub_8e7f5634Address.quote(uint256 arg1, uint256 arg2, uint256 arg3) with:
                    gas gas_remaining wei
                   args _168 - _265, _285 << 144, Mask(112, 0, _284)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _292 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_292] == mem[_292]
            mem[mem[64]] = mem[_292]
    return mem[mem[64]], _265
}

function sub_8ce488e6(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if (32 * ('cd', 4).length) + 128 > test266151307() or (32 * ('cd', 4).length) + 128 < 96:
        revert with 'NH{q', 65
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _97 = mem[128]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _99 = mem[160]
    mem[(32 * ('cd', 4).length) + 132] = mem[140 len 20]
    mem[(32 * ('cd', 4).length) + 164] = address(_99)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + 132], address(_99)
    mem[(32 * ('cd', 4).length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (2 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_97) == address(ext_call.return_data[0]):
        _116 = mem[160]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _120 = mem[192]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_120)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_120)
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_116) == address(ext_call.return_data[0]):
            _154 = mem[192]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _162 = mem[128]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_162)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_154) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))), 
                       sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))), 
                   sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))
        _156 = mem[192]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _163 = mem[128]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_163)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_156) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))), 
                   sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))), 
               sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))
    _118 = mem[160]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _121 = mem[192]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_121)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_121)
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_118) == address(ext_call.return_data[0]):
        _158 = mem[192]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _164 = mem[128]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_164)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_158) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))), 
                   sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))), 
               sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))
    _160 = mem[192]
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _165 = mem[128]
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_165)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if address(_160) == address(ext_call.return_data[0]):
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))), 
               sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    return sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))), 
           sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))
}

function sub_77a0ae95(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if (32 * ('cd', 4).length) + 128 > test266151307() or (32 * ('cd', 4).length) + 128 < 96:
        revert with 'NH{q', 65
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _97 = mem[128]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _99 = mem[160]
    mem[(32 * ('cd', 4).length) + 132] = mem[140 len 20]
    mem[(32 * ('cd', 4).length) + 164] = address(_99)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + 132], address(_99)
    mem[(32 * ('cd', 4).length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (2 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_97) == address(ext_call.return_data[0]):
        _116 = mem[160]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _120 = mem[192]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_120)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_120)
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_116) == address(ext_call.return_data[0]):
            _154 = mem[192]
            if 3 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _162 = mem[224]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_162)
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_162)
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if 3 >= ('cd', 4).length:
                revert with 'NH{q', 50
            if address(_154) == address(ext_call.return_data[0]):
                _230 = mem[224]
                if 0 >= ('cd', 4).length:
                    revert with 'NH{q', 50
                _246 = mem[128]
                mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
                require ext_code.size(factAddress)
                staticcall factAddress.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_246)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(ext_call.return_data[12 len 20])
                staticcall ext_call.return_data[12 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if address(_230) == address(ext_call.return_data[0]):
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                        revert with 'NH{q', 17
                    if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 18
                    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 18
                    return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                           sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                       sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
            _232 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _247 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_247)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_232) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                       sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
        _156 = mem[192]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _163 = mem[224]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_163)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_163)
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_156) == address(ext_call.return_data[0]):
            _234 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _248 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_248)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_234) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                       sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
        _236 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _249 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_249)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_236) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))), 
               sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))))
    _118 = mem[160]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _121 = mem[192]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_121)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_121)
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_118) == address(ext_call.return_data[0]):
        _158 = mem[192]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _164 = mem[224]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_164)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_164)
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_158) == address(ext_call.return_data[0]):
            _238 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _250 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_250)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_238) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 18
                return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
                       sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
        _240 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _251 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_251)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_240) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
               sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
    _160 = mem[192]
    if 3 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _165 = mem[224]
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_165)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_165)
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 3 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_160) == address(ext_call.return_data[0]):
        _242 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _252 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_252)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_242) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
                   sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
               sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
    _244 = mem[224]
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _253 = mem[128]
    mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_253)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if address(_244) == address(ext_call.return_data[0]):
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
               sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 18
    return sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))), 
           sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))))
}

function sub_818abb5e(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if (32 * ('cd', 4).length) + 128 > test266151307() or (32 * ('cd', 4).length) + 128 < 96:
        revert with 'NH{q', 65
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if ('cd', 4).length != 4:
        if ('cd', 4).length != 3:
            return 0
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _185 = mem[128]
        if 1 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _188 = mem[160]
        mem[(32 * ('cd', 4).length) + 132] = mem[140 len 20]
        mem[(32 * ('cd', 4).length) + 164] = address(_188)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + 132], address(_188)
        mem[(32 * ('cd', 4).length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (2 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 1 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_185) == address(ext_call.return_data[0]):
            _226 = mem[160]
            if 2 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _232 = mem[192]
            mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
            mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_232)
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_232)
            mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if 2 >= ('cd', 4).length:
                revert with 'NH{q', 50
            if address(_226) == address(ext_call.return_data[0]):
                _306 = mem[192]
                if 0 >= ('cd', 4).length:
                    revert with 'NH{q', 50
                _318 = mem[128]
                mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
                require ext_code.size(factAddress)
                staticcall factAddress.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_318)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(ext_call.return_data[12 len 20])
                staticcall ext_call.return_data[12 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if address(_306) == address(ext_call.return_data[0]):
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                        revert with 'NH{q', 17
                    if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 18
                    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                            revert with 'NH{q', 17
                        if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82:
                            if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                                return 0
                            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                                revert with 'NH{q', 17
                            if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                                revert with 'NH{q', 17
                            if not sub_d625c3c5:
                                revert with 'NH{q', 18
                            if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5:
                                revert with 'NH{q', 17
                            if not sub_5081df82:
                                revert with 'NH{q', 18
                            return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                        if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                            revert with 'NH{q', 17
                        if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                    t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82
                    while s < t:
                        if not s:
                            revert with 'NH{q', 18
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                            revert with 'NH{q', 17
                        s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                        t = s
                        continue 
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            _308 = mem[192]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _319 = mem[128]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_319)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_308) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        _228 = mem[160]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _233 = mem[192]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_233)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_233)
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_228) == address(ext_call.return_data[0]):
            _310 = mem[192]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _320 = mem[128]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_320)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_310) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        _312 = mem[192]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _321 = mem[128]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_321)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_312) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) >= sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            return 0
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 <= 3:
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82:
                if 0 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if 0 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if 1 <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if 1 < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return ((-1 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
        t = sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82
        while s < t:
            if not s:
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
            t = s
            continue 
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if t <= sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if t < sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return (t - (sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _182 = mem[128]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _187 = mem[160]
    mem[(32 * ('cd', 4).length) + 132] = mem[140 len 20]
    mem[(32 * ('cd', 4).length) + 164] = address(_187)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + 132], address(_187)
    mem[(32 * ('cd', 4).length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + ceil32(return_data.size) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (2 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 1 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_182) == address(ext_call.return_data[0]):
        _222 = mem[160]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _230 = mem[192]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_230)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_230)
        mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 2 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_222) == address(ext_call.return_data[0]):
            _298 = mem[192]
            if 3 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _314 = mem[224]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_314)
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_314)
            mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if 3 >= ('cd', 4).length:
                revert with 'NH{q', 50
            if address(_298) == address(ext_call.return_data[0]):
                _442 = mem[224]
                if 0 >= ('cd', 4).length:
                    revert with 'NH{q', 50
                _458 = mem[128]
                mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
                require ext_code.size(factAddress)
                staticcall factAddress.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_458)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(ext_call.return_data[12 len 20])
                staticcall ext_call.return_data[12 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if address(_442) == address(ext_call.return_data[0]):
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                        revert with 'NH{q', 17
                    if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 18
                    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                        revert with 'NH{q', 17
                    if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                        revert with 'NH{q', 17
                    if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                        revert with 'NH{q', 17
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                            revert with 'NH{q', 17
                        if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                            if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                                return 0
                            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                                revert with 'NH{q', 17
                            if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                                revert with 'NH{q', 17
                            if not sub_d625c3c5:
                                revert with 'NH{q', 18
                            if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                                revert with 'NH{q', 17
                            if not sub_5081df82:
                                revert with 'NH{q', 18
                            return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                        if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                            revert with 'NH{q', 17
                        if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                    t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
                    while s < t:
                        if not s:
                            revert with 'NH{q', 18
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                            revert with 'NH{q', 17
                        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                        t = s
                        continue 
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            _444 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _459 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_459)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_444) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        _300 = mem[192]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _315 = mem[224]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_315)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_315)
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_300) == address(ext_call.return_data[0]):
            _446 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _460 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_460)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_446) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        _448 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _461 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_461)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_448) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 <= 3:
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82:
                if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                    revert with 'NH{q', 17
                if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
                revert with 'NH{q', 17
            if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
        t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82
        while s < t:
            if not s:
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
            t = s
            continue 
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 17
        if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))):
            revert with 'NH{q', 17
        if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[32])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    _224 = mem[160]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _231 = mem[192]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132] = mem[172 len 20]
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 164] = address(_231)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 132], address(_231)
    mem[(32 * ('cd', 4).length) + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (6 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (7 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 2 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_224) == address(ext_call.return_data[0]):
        _302 = mem[192]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _316 = mem[224]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_316)
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_316)
        mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if 3 >= ('cd', 4).length:
            revert with 'NH{q', 50
        if address(_302) == address(ext_call.return_data[0]):
            _450 = mem[224]
            if 0 >= ('cd', 4).length:
                revert with 'NH{q', 50
            _462 = mem[128]
            mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
            require ext_code.size(factAddress)
            staticcall factAddress.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_462)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(ext_call.return_data[12 len 20])
            staticcall ext_call.return_data[12 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if address(_450) == address(ext_call.return_data[0]):
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                    revert with 'NH{q', 17
                if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 18
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                    revert with 'NH{q', 17
                if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                    revert with 'NH{q', 17
                if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                    revert with 'NH{q', 17
                if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
                    revert with 'NH{q', 17
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                        revert with 'NH{q', 17
                    if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                        if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                            return 0
                        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                            revert with 'NH{q', 17
                        if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                            revert with 'NH{q', 17
                        if not sub_d625c3c5:
                            revert with 'NH{q', 18
                        if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                            revert with 'NH{q', 17
                        if not sub_5081df82:
                            revert with 'NH{q', 18
                        return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                    if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                        revert with 'NH{q', 17
                    if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
                t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
                while s < t:
                    if not s:
                        revert with 'NH{q', 18
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                        revert with 'NH{q', 17
                    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                    t = s
                    continue 
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        _452 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _463 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_463)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_452) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
        t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
        while s < t:
            if not s:
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
            t = s
            continue 
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    _304 = mem[192]
    if 3 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _317 = mem[224]
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132] = mem[204 len 20]
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 164] = address(_317)
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 132], address(_317)
    mem[(32 * ('cd', 4).length) + (8 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (10 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    mem[(32 * ('cd', 4).length) + (11 * ceil32(return_data.size)) + 128 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 3 >= ('cd', 4).length:
        revert with 'NH{q', 50
    if address(_304) == address(ext_call.return_data[0]):
        _454 = mem[224]
        if 0 >= ('cd', 4).length:
            revert with 'NH{q', 50
        _464 = mem[128]
        mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
        require ext_code.size(factAddress)
        staticcall factAddress.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_464)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * Mask(112, 0, ext_call.return_data[0]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if address(_454) == address(ext_call.return_data[0]):
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
                revert with 'NH{q', 17
            if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
                revert with 'NH{q', 17
            if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
                revert with 'NH{q', 17
            if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
                revert with 'NH{q', 17
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                    if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        return 0
                    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                        revert with 'NH{q', 17
                    if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                        revert with 'NH{q', 17
                    if not sub_d625c3c5:
                        revert with 'NH{q', 18
                    if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                        revert with 'NH{q', 17
                    if not sub_5081df82:
                        revert with 'NH{q', 18
                    return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
                if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
            t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
            while s < t:
                if not s:
                    revert with 'NH{q', 18
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                    revert with 'NH{q', 17
                s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
                t = s
                continue 
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
        t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
        while s < t:
            if not s:
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
            t = s
            continue 
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[0])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    _456 = mem[224]
    if 0 >= ('cd', 4).length:
        revert with 'NH{q', 50
    _465 = mem[128]
    mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132] = mem[236 len 20]
    require ext_code.size(factAddress)
    staticcall factAddress.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args mem[(32 * ('cd', 4).length) + (12 * ceil32(return_data.size)) + 132], address(_465)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * Mask(112, 0, ext_call.return_data[32]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and Mask(112, 0, ext_call.return_data[32]) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) > (-1 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) and Mask(112, 0, ext_call.return_data[0]) > -1 / sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if not (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if address(_456) == address(ext_call.return_data[0]):
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 and ext_call.return_data[18 len 14] > -1 / sub_5081df82:
            revert with 'NH{q', 17
        if sub_5081df82 * ext_call.return_data[18 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
            revert with 'NH{q', 17
        if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
            revert with 'NH{q', 17
        if not (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
            revert with 'NH{q', 17
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
                if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    return 0
                if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                    revert with 'NH{q', 17
                if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                    revert with 'NH{q', 17
                if not sub_d625c3c5:
                    revert with 'NH{q', 18
                if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                    revert with 'NH{q', 17
                if not sub_5081df82:
                    revert with 'NH{q', 18
                return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
            if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
        t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
        while s < t:
            if not s:
                revert with 'NH{q', 18
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
                revert with 'NH{q', 17
            s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
            t = s
            continue 
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[18 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
        revert with 'NH{q', 17
    if sub_5081df82 and sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[50 len 14] > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 18
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 and ext_call.return_data[50 len 14] > -1 / sub_5081df82:
        revert with 'NH{q', 17
    if sub_5081df82 * ext_call.return_data[50 len 14] > (-1 * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) - 1:
        revert with 'NH{q', 17
    if sub_d625c3c5 and sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) > -1 / sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) and ext_call.return_data[18 len 14] > -1 / sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))):
        revert with 'NH{q', 17
    if not (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 18
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) >= sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        return 0
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_d625c3c5 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5:
        revert with 'NH{q', 17
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 <= 3:
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if not sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82:
            if 0 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                return 0
            if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
                revert with 'NH{q', 17
            if 0 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
                revert with 'NH{q', 17
            if not sub_d625c3c5:
                revert with 'NH{q', 18
            if -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 and sub_2c1b7e0a > -1 / -1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5:
                revert with 'NH{q', 17
            if not sub_5081df82:
                revert with 'NH{q', 18
            return (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
        if 1 <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            return 0
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
            revert with 'NH{q', 17
        if 1 < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
            revert with 'NH{q', 17
        if not sub_d625c3c5:
            revert with 'NH{q', 18
        if (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 and sub_2c1b7e0a > -1 / (-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5:
            revert with 'NH{q', 17
        if not sub_5081df82:
            revert with 'NH{q', 18
        return ((-1 * sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) + 1 / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2 > -2:
        revert with 'NH{q', 17
    s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / 2) + 1
    t = sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82
    while s < t:
        if not s:
            revert with 'NH{q', 18
        if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s > -s - 1:
            revert with 'NH{q', 17
        s = (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[18 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_d625c3c5 * sub_5081df82 / s) + s / 2
        t = s
        continue 
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 17
    if t <= sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
        return 0
    if sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) and sub_5081df82 > -1 / sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))):
        revert with 'NH{q', 17
    if t < sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82:
        revert with 'NH{q', 17
    if not sub_d625c3c5:
        revert with 'NH{q', 18
    if t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 and sub_2c1b7e0a > -1 / t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5:
        revert with 'NH{q', 17
    if not sub_5081df82:
        revert with 'NH{q', 18
    return (t - (sub_5081df82 * sub_5081df82 * sub_5081df82 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[32]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]))) * ext_call.return_data[50 len 14] / (sub_5081df82 * ext_call.return_data[50 len 14]) + (sub_d625c3c5 * sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (sub_5081df82 * Mask(112, 0, ext_call.return_data[32])) + (sub_d625c3c5 * Mask(112, 0, ext_call.return_data[0])))) * sub_5081df82) / sub_d625c3c5 * sub_2c1b7e0a / sub_5081df82)
}



}
