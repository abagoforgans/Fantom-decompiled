contract main {




// =====================  Runtime code  =====================


#
#  - elkCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#  - sub_095c414e(?)
#  - sub_2109214f(?)
#  - sub_37ad065c(?)
#  - sub_986ebcca(?)
#
address owner;
address stor1;
address stor2;
address stor3;
address stor4;
address stor5;
address stor6;
address stor7;
address stor8;
address stor9;
address stor10;
address stor11;
address stor12;

function owner() payable {
    return owner
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function withdraw(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'Zero balance!'
    if arg2:
        if ext_call.return_data[0] < arg2:
            revert with 0, 'Insufficient balance!'
        require ext_code.size(arg1)
        call arg1.0xa9059cbb with:
             gas gas_remaining wei
            args owner, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        return (ext_call.return_data[0] - arg2)
    if ext_call.return_data[0] < ext_call.return_data[0]:
        revert with 0, 'Insufficient balance!'
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args owner, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    return 0
}

function sub_404a63d2(?) payable {
    require calldata.size - 4 >= 288
    require arg3 == address(arg3)
    require arg5 == address(arg5)
    require arg7 == address(arg7)
    require arg8 == address(arg8)
    require arg9 <= test266151307()
    require arg9 + 35 < calldata.size
    require arg9.length <= test266151307()
    require arg9 + arg9.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1:
        if arg1 < block.number:
            revert with 0, 'Block expired!'
    mem[132] = address(arg5)
    if arg2 == 1:
        require ext_code.size(stor1)
        staticcall stor1.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args address(arg3), address(arg5)
    else:
        if arg2 == 2:
            if arg2 == 1:
                require ext_code.size(stor1)
                staticcall stor1.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(arg3), address(arg5)
            else:
                require ext_code.size(stor2)
                staticcall stor2.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(arg3), address(arg5)
        else:
            if arg2 == 16:
                require ext_code.size(stor5)
                staticcall stor5.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(arg3), address(arg5)
            else:
                if arg2 != 32:
                    require ext_code.size(stor3)
                    staticcall stor3.getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(arg3), address(arg5)
                else:
                    require ext_code.size(stor6)
                    staticcall stor6.getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(arg3), address(arg5)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 128] = address(arg7)
    mem[(2 * ceil32(return_data.size)) + 160] = address(arg8)
    mem[(2 * ceil32(return_data.size)) + 192] = 96
    mem[(2 * ceil32(return_data.size)) + 224] = arg9.length
    mem[(2 * ceil32(return_data.size)) + 256 len arg9.length] = arg9[all]
    require ext_code.size(address(ext_call.return_data[0]))
    if address(arg3) != ext_call.return_data[12 len 20]:
        call address(ext_call.return_data[0]) with:
             gas gas_remaining wei
            args arg6, arg4, address(this.address), Array(len=ceil32(arg9.length) + 128, data=mem[(2 * ceil32(return_data.size)) + 128 len ceil32(ceil32(arg9.length)) + 4])
    else:
        call address(ext_call.return_data[0]) with:
             gas gas_remaining wei
            args arg4, arg6, address(this.address), Array(len=ceil32(arg9.length) + 128, data=mem[(2 * ceil32(return_data.size)) + 128 len ceil32(ceil32(arg9.length)) + 4])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function pancakeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(stor1)
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if msg.sender == ext_call.return_data[12 len 20]:
        mem[(4 * ceil32(return_data.size)) + 96] = 2
        mem[(4 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
        if arg2:
            mem[(4 * ceil32(return_data.size)) + 196] = arg2
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg2, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2887 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
            _2899 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2899
            require return_data.size >= _2887 + (32 * _2899) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2899] = mem[(4 * ceil32(return_data.size)) + _2887 + 224 len 32 * _2899]
            require 0 < _2899
            _5755 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5757 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5757] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5757 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5757 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5787 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5787]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5853 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5877 = mem[_5853]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8730 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8730 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9073 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9257 = mem[_9073]
                        if mem[_9073] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9073] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10129] == bool(mem[_10129])
                        if not mem[_10129]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9257 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9257 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10705] == bool(mem[_10705])
                        if not mem[_10705]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8617 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8617] = return_data.size
                        mem[_8617 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8732 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8617 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8732 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9074 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9258 = mem[_9074]
                        if mem[_9074] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9074] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10130 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10130] == bool(mem[_10130])
                        if not mem[_10130]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9258 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9258 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10706 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10706] == bool(mem[_10706])
                        if not mem[_10706]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8826 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8826 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9163 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9313 = mem[_9163]
                        if mem[_9163] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9163] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10177 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10177] == bool(mem[_10177])
                        if not mem[_10177]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9313 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9313 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10753] == bool(mem[_10753])
                        if not mem[_10753]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8645] = return_data.size
                        mem[_8645 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8828 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8645 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8828 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9164 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9314 = mem[_9164]
                        if mem[_9164] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9164] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10178] == bool(mem[_10178])
                        if not mem[_10178]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9314 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9314 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10754] == bool(mem[_10754])
                        if not mem[_10754]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5854 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5854] == bool(mem[_5854])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5961 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5985 = mem[_5961]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8734 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8734 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9075 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9261 = mem[_9075]
                        if mem[_9075] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9075] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10131] == bool(mem[_10131])
                        if not mem[_10131]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9261 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9261 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10707] == bool(mem[_10707])
                        if not mem[_10707]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8619] = return_data.size
                        mem[_8619 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8736 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8619 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8736 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9076 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9262 = mem[_9076]
                        if mem[_9076] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9076] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10132 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10132] == bool(mem[_10132])
                        if not mem[_10132]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9262 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9262 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10708] == bool(mem[_10708])
                        if not mem[_10708]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8830 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8830 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9315 = mem[_9167]
                        if mem[_9167] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9167] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10179 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10179] == bool(mem[_10179])
                        if not mem[_10179]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9315 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9315 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10755 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10755] == bool(mem[_10755])
                        if not mem[_10755]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8646] = return_data.size
                        mem[_8646 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8832 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8646 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8832 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9316 = mem[_9168]
                        if mem[_9168] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9168] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10180 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10180] == bool(mem[_10180])
                        if not mem[_10180]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9316 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9316 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10756] == bool(mem[_10756])
                        if not mem[_10756]:
                            revert with 0, 'Withdraw failed!'
        else:
            mem[(4 * ceil32(return_data.size)) + 196] = arg3
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg3, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2888 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
            _2900 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2900
            require return_data.size >= _2888 + (32 * _2900) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2900] = mem[(4 * ceil32(return_data.size)) + _2888 + 224 len 32 * _2900]
            require 0 < _2900
            _5756 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5758 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5758] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5758 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5758 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5788 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5788]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5855 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5879 = mem[_5855]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8738 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8738 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9077 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9265 = mem[_9077]
                        if mem[_9077] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9077] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10133] == bool(mem[_10133])
                        if not mem[_10133]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9265 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9265 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10709] == bool(mem[_10709])
                        if not mem[_10709]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8621 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8621] = return_data.size
                        mem[_8621 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8740 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8621 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8740 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9078 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9266 = mem[_9078]
                        if mem[_9078] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9078] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10134] == bool(mem[_10134])
                        if not mem[_10134]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9266 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9266 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10710] == bool(mem[_10710])
                        if not mem[_10710]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8834 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8834 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9317 = mem[_9171]
                        if mem[_9171] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9171] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10181] == bool(mem[_10181])
                        if not mem[_10181]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9317 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9317 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10757] == bool(mem[_10757])
                        if not mem[_10757]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8647] = return_data.size
                        mem[_8647 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8836 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8647 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8836 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9172 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9318 = mem[_9172]
                        if mem[_9172] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9172] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10182] == bool(mem[_10182])
                        if not mem[_10182]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9318 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9318 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10758 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10758] == bool(mem[_10758])
                        if not mem[_10758]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5856] == bool(mem[_5856])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5962 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5988 = mem[_5962]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8742 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8742 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9269 = mem[_9079]
                        if mem[_9079] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9079] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10135] == bool(mem[_10135])
                        if not mem[_10135]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9269 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9269 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10711] == bool(mem[_10711])
                        if not mem[_10711]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8623] = return_data.size
                        mem[_8623 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8744 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8623 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8744 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9270 = mem[_9080]
                        if mem[_9080] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9080] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10136 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10136] == bool(mem[_10136])
                        if not mem[_10136]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9270 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9270 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10712] == bool(mem[_10712])
                        if not mem[_10712]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8838 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8838 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9319 = mem[_9175]
                        if mem[_9175] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9175] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10183] == bool(mem[_10183])
                        if not mem[_10183]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9319 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9319 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10759] == bool(mem[_10759])
                        if not mem[_10759]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8648] = return_data.size
                        mem[_8648 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8840 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8648 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8840 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9176 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9320 = mem[_9176]
                        if mem[_9176] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9176] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10184 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10184] == bool(mem[_10184])
                        if not mem[_10184]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9320 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9320 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10760 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10760] == bool(mem[_10760])
                        if not mem[_10760]:
                            revert with 0, 'Withdraw failed!'
    else:
        mem[(4 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
        require ext_code.size(stor2)
        staticcall stor2.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if msg.sender == ext_call.return_data[12 len 20]:
            mem[(6 * ceil32(return_data.size)) + 96] = 2
            mem[(6 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
            if arg2:
                mem[(6 * ceil32(return_data.size)) + 196] = arg2
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg2, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2885 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                _2897 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require return_data.size >= _2885 + (32 * _2897) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2897] = mem[(6 * ceil32(return_data.size)) + _2885 + 224 len 32 * _2897]
                require 0 < _2897
                _5753 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5759 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5759] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5759 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5759 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5791]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5885 = mem[_5861]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8714 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8714 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9065 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9241 = mem[_9065]
                            if mem[_9065] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9065] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10121] == bool(mem[_10121])
                            if not mem[_10121]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9241 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9241 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10697] == bool(mem[_10697])
                            if not mem[_10697]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8609] = return_data.size
                            mem[_8609 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8716 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8609 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8716 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9066 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9242 = mem[_9066]
                            if mem[_9066] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9066] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10122] == bool(mem[_10122])
                            if not mem[_10122]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9242 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9242 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10698] == bool(mem[_10698])
                            if not mem[_10698]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8810 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8810 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9147 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9305 = mem[_9147]
                            if mem[_9147] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9147] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10169 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10169] == bool(mem[_10169])
                            if not mem[_10169]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9305 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9305 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10745 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10745] == bool(mem[_10745])
                            if not mem[_10745]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8641] = return_data.size
                            mem[_8641 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8812 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8641 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8812 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9148 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9306 = mem[_9148]
                            if mem[_9148] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9148] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10170] == bool(mem[_10170])
                            if not mem[_10170]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9306 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9306 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10746] == bool(mem[_10746])
                            if not mem[_10746]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5862] == bool(mem[_5862])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5995 = mem[_5967]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8718 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8718 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9245 = mem[_9067]
                            if mem[_9067] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9067] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10123 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10123] == bool(mem[_10123])
                            if not mem[_10123]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9245 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9245 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10699] == bool(mem[_10699])
                            if not mem[_10699]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8611 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8611] = return_data.size
                            mem[_8611 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8720 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8611 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8720 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9246 = mem[_9068]
                            if mem[_9068] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9068] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10124 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10124] == bool(mem[_10124])
                            if not mem[_10124]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9246 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9246 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10700] == bool(mem[_10700])
                            if not mem[_10700]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8814 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8814 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9307 = mem[_9151]
                            if mem[_9151] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9151] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10171] == bool(mem[_10171])
                            if not mem[_10171]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9307 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9307 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10747] == bool(mem[_10747])
                            if not mem[_10747]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8642] = return_data.size
                            mem[_8642 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8816 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8642 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8816 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9152 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9308 = mem[_9152]
                            if mem[_9152] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9152] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10172] == bool(mem[_10172])
                            if not mem[_10172]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9308 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9308 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10748] == bool(mem[_10748])
                            if not mem[_10748]:
                                revert with 0, 'Withdraw failed!'
            else:
                mem[(6 * ceil32(return_data.size)) + 196] = arg3
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg3, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2886 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                _2898 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require return_data.size >= _2886 + (32 * _2898) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2898] = mem[(6 * ceil32(return_data.size)) + _2886 + 224 len 32 * _2898]
                require 0 < _2898
                _5754 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5760 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5760] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5760 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5760 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5792 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5792]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5863 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5887 = mem[_5863]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8722 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8722 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9249 = mem[_9069]
                            if mem[_9069] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9069] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10125] == bool(mem[_10125])
                            if not mem[_10125]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9249 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9249 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10701] == bool(mem[_10701])
                            if not mem[_10701]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8613 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8613] = return_data.size
                            mem[_8613 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8724 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8613 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8724 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9250 = mem[_9070]
                            if mem[_9070] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9070] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10126] == bool(mem[_10126])
                            if not mem[_10126]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9250 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9250 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10702] == bool(mem[_10702])
                            if not mem[_10702]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8818 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8818 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9309 = mem[_9155]
                            if mem[_9155] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9155] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10173] == bool(mem[_10173])
                            if not mem[_10173]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9309 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9309 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10749] == bool(mem[_10749])
                            if not mem[_10749]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8643 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8643] = return_data.size
                            mem[_8643 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8820 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8643 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8820 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9156 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9310 = mem[_9156]
                            if mem[_9156] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9156] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10174] == bool(mem[_10174])
                            if not mem[_10174]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9310 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9310 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10750] == bool(mem[_10750])
                            if not mem[_10750]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5864] == bool(mem[_5864])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5968 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5998 = mem[_5968]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8726 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8726 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9253 = mem[_9071]
                            if mem[_9071] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9071] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10127] == bool(mem[_10127])
                            if not mem[_10127]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9253 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9253 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10703] == bool(mem[_10703])
                            if not mem[_10703]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8615 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8615] = return_data.size
                            mem[_8615 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8728 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8615 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8728 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9254 = mem[_9072]
                            if mem[_9072] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9072] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10128 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10128] == bool(mem[_10128])
                            if not mem[_10128]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9254 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9254 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10704] == bool(mem[_10704])
                            if not mem[_10704]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8822 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8822 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9311 = mem[_9159]
                            if mem[_9159] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9159] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10175 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10175] == bool(mem[_10175])
                            if not mem[_10175]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9311 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9311 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10751 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10751] == bool(mem[_10751])
                            if not mem[_10751]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8644 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8644] = return_data.size
                            mem[_8644 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8824 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8644 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8824 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9312 = mem[_9160]
                            if mem[_9160] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9160] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10176 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10176] == bool(mem[_10176])
                            if not mem[_10176]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9312 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9312 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10752] == bool(mem[_10752])
                            if not mem[_10752]:
                                revert with 0, 'Withdraw failed!'
        else:
            mem[(6 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
            require ext_code.size(stor3)
            staticcall stor3.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if msg.sender == ext_call.return_data[12 len 20]:
                mem[(7 * ceil32(return_data.size)) + 96] = 2
                mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                if arg2:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2883 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                    _2895 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2895
                    require return_data.size >= _2883 + (32 * _2895) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2895] = mem[(7 * ceil32(return_data.size)) + _2883 + 224 len 32 * _2895]
                    require 0 < _2895
                    _5751 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5761 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5761] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5761 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5761 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5797 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5797]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5873 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5899 = mem[_5873]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8698 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8698 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9057 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9225 = mem[_9057]
                                if mem[_9057] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9057] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10113 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10113] == bool(mem[_10113])
                                if not mem[_10113]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9225 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9225 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10689 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10689] == bool(mem[_10689])
                                if not mem[_10689]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8601 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8601] = return_data.size
                                mem[_8601 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8700 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8601 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8700 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9058 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9226 = mem[_9058]
                                if mem[_9058] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9058] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10114 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10114] == bool(mem[_10114])
                                if not mem[_10114]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9226 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9226 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10690] == bool(mem[_10690])
                                if not mem[_10690]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8794 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8794 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9131 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9297 = mem[_9131]
                                if mem[_9131] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9131] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10161] == bool(mem[_10161])
                                if not mem[_10161]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9297 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9297 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10737] == bool(mem[_10737])
                                if not mem[_10737]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8637 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8637] = return_data.size
                                mem[_8637 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8796 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8637 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8796 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9132 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9298 = mem[_9132]
                                if mem[_9132] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9132] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10162] == bool(mem[_10162])
                                if not mem[_10162]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9298 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9298 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10738] == bool(mem[_10738])
                                if not mem[_10738]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5874 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5874] == bool(mem[_5874])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6011 = mem[_5979]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8702 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8702 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9059 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9229 = mem[_9059]
                                if mem[_9059] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9059] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10115 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10115] == bool(mem[_10115])
                                if not mem[_10115]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9229 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9229 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10691 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10691] == bool(mem[_10691])
                                if not mem[_10691]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8603 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8603] = return_data.size
                                mem[_8603 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8704 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8603 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8704 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9060 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9230 = mem[_9060]
                                if mem[_9060] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9060] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10116] == bool(mem[_10116])
                                if not mem[_10116]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9230 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9230 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10692 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10692] == bool(mem[_10692])
                                if not mem[_10692]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8798 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8798 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9135 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9299 = mem[_9135]
                                if mem[_9135] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9135] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10163] == bool(mem[_10163])
                                if not mem[_10163]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9299 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9299 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10739] == bool(mem[_10739])
                                if not mem[_10739]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8638] = return_data.size
                                mem[_8638 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8800 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8638 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8800 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9136 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9300 = mem[_9136]
                                if mem[_9136] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9136] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10164 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10164] == bool(mem[_10164])
                                if not mem[_10164]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9300 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9300 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10740 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10740] == bool(mem[_10740])
                                if not mem[_10740]:
                                    revert with 0, 'Withdraw failed!'
                else:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg3
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg3, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2884 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                    _2896 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2896
                    require return_data.size >= _2884 + (32 * _2896) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2896] = mem[(7 * ceil32(return_data.size)) + _2884 + 224 len 32 * _2896]
                    require 0 < _2896
                    _5752 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5762 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5762] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5762 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5762 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5798]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5875 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5901 = mem[_5875]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8706 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8706 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9061 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9233 = mem[_9061]
                                if mem[_9061] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9061] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10117] == bool(mem[_10117])
                                if not mem[_10117]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9233 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9233 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10693 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10693] == bool(mem[_10693])
                                if not mem[_10693]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8605 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8605] = return_data.size
                                mem[_8605 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8708 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8605 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8708 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9062 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9234 = mem[_9062]
                                if mem[_9062] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9062] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10118] == bool(mem[_10118])
                                if not mem[_10118]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9234 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9234 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10694] == bool(mem[_10694])
                                if not mem[_10694]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8802 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8802 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9139 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9301 = mem[_9139]
                                if mem[_9139] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9139] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10165 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10165] == bool(mem[_10165])
                                if not mem[_10165]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9301 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9301 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10741 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10741] == bool(mem[_10741])
                                if not mem[_10741]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8639 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8639] = return_data.size
                                mem[_8639 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8804 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8639 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8804 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9140 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9302 = mem[_9140]
                                if mem[_9140] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9140] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10166] == bool(mem[_10166])
                                if not mem[_10166]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9302 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9302 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10742 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10742] == bool(mem[_10742])
                                if not mem[_10742]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5876 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5876] == bool(mem[_5876])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6014 = mem[_5980]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8710 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8710 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9063 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9237 = mem[_9063]
                                if mem[_9063] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9063] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10119 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10119] == bool(mem[_10119])
                                if not mem[_10119]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9237 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9237 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10695] == bool(mem[_10695])
                                if not mem[_10695]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8607 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8607] = return_data.size
                                mem[_8607 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8712 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8607 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8712 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9064 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9238 = mem[_9064]
                                if mem[_9064] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9064] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10120 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10120] == bool(mem[_10120])
                                if not mem[_10120]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9238 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9238 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10696] == bool(mem[_10696])
                                if not mem[_10696]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8806 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8806 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9303 = mem[_9143]
                                if mem[_9143] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9143] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10167] == bool(mem[_10167])
                                if not mem[_10167]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9303 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9303 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10743] == bool(mem[_10743])
                                if not mem[_10743]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8640 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8640] = return_data.size
                                mem[_8640 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8808 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8640 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8808 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9144 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9304 = mem[_9144]
                                if mem[_9144] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9144] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10168] == bool(mem[_10168])
                                if not mem[_10168]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9304 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9304 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10744 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10744] == bool(mem[_10744])
                                if not mem[_10744]:
                                    revert with 0, 'Withdraw failed!'
            else:
                mem[(7 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                require ext_code.size(stor4)
                staticcall stor4.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if msg.sender == ext_call.return_data[12 len 20]:
                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                    mem[(8 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                    if arg2:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg2, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2881 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                        _2893 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2893
                        require return_data.size >= _2881 + (32 * _2893) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2893] = mem[(8 * ceil32(return_data.size)) + _2881 + 224 len 32 * _2893]
                        require 0 < _2893
                        _5749 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5763 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5763] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5763 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5763 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5801 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5801]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5881 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5907 = mem[_5881]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8682 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8682 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9049 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9209 = mem[_9049]
                                    if mem[_9049] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9049] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10105] == bool(mem[_10105])
                                    if not mem[_10105]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9209 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9209 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10681] == bool(mem[_10681])
                                    if not mem[_10681]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8593 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8593] = return_data.size
                                    mem[_8593 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8684 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8593 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8684 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9050 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9210 = mem[_9050]
                                    if mem[_9050] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9050] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10106] == bool(mem[_10106])
                                    if not mem[_10106]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9210 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9210 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10682 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10682] == bool(mem[_10682])
                                    if not mem[_10682]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8778 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8778 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9115 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9289 = mem[_9115]
                                    if mem[_9115] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9115] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10153] == bool(mem[_10153])
                                    if not mem[_10153]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9289 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9289 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10729 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10729] == bool(mem[_10729])
                                    if not mem[_10729]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8633] = return_data.size
                                    mem[_8633 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8780 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8633 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8780 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9116 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9290 = mem[_9116]
                                    if mem[_9116] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9116] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10154] == bool(mem[_10154])
                                    if not mem[_10154]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9290 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9290 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10730 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10730] == bool(mem[_10730])
                                    if not mem[_10730]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5882 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5882] == bool(mem[_5882])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6035 = mem[_5989]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8686 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8686 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9051 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9213 = mem[_9051]
                                    if mem[_9051] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9051] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10107 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10107] == bool(mem[_10107])
                                    if not mem[_10107]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9213 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9213 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10683 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10683] == bool(mem[_10683])
                                    if not mem[_10683]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8595 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8595] = return_data.size
                                    mem[_8595 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8688 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8595 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8688 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9052 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9214 = mem[_9052]
                                    if mem[_9052] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9052] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10108 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10108] == bool(mem[_10108])
                                    if not mem[_10108]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9214 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9214 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10684] == bool(mem[_10684])
                                    if not mem[_10684]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8782 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8782 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9119 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9291 = mem[_9119]
                                    if mem[_9119] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9119] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10155 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10155] == bool(mem[_10155])
                                    if not mem[_10155]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9291 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9291 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10731 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10731] == bool(mem[_10731])
                                    if not mem[_10731]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8634 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8634] = return_data.size
                                    mem[_8634 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8784 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8634 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8784 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9120 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9292 = mem[_9120]
                                    if mem[_9120] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9120] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10156] == bool(mem[_10156])
                                    if not mem[_10156]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9292 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9292 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10732 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10732] == bool(mem[_10732])
                                    if not mem[_10732]:
                                        revert with 0, 'Withdraw failed!'
                    else:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg3
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg3, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2882 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                        _2894 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2894
                        require return_data.size >= _2882 + (32 * _2894) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2894] = mem[(8 * ceil32(return_data.size)) + _2882 + 224 len 32 * _2894]
                        require 0 < _2894
                        _5750 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5764 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5764] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5764 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5764 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5802]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5909 = mem[_5883]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8690 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8690 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9053 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9217 = mem[_9053]
                                    if mem[_9053] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9053] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10109 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10109] == bool(mem[_10109])
                                    if not mem[_10109]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9217 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9217 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10685 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10685] == bool(mem[_10685])
                                    if not mem[_10685]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8597] = return_data.size
                                    mem[_8597 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8692 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8597 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8692 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9054 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9218 = mem[_9054]
                                    if mem[_9054] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9054] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10110 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10110] == bool(mem[_10110])
                                    if not mem[_10110]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9218 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9218 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10686 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10686] == bool(mem[_10686])
                                    if not mem[_10686]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8786 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8786 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9123 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9293 = mem[_9123]
                                    if mem[_9123] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9123] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10157] == bool(mem[_10157])
                                    if not mem[_10157]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9293 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9293 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10733 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10733] == bool(mem[_10733])
                                    if not mem[_10733]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8635 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8635] = return_data.size
                                    mem[_8635 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8788 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8635 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8788 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9124 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9294 = mem[_9124]
                                    if mem[_9124] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9124] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10158] == bool(mem[_10158])
                                    if not mem[_10158]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9294 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9294 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10734 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10734] == bool(mem[_10734])
                                    if not mem[_10734]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5884 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5884] == bool(mem[_5884])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6038 = mem[_5990]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8694 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8694 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9221 = mem[_9055]
                                    if mem[_9055] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9055] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10111 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10111] == bool(mem[_10111])
                                    if not mem[_10111]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9221 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9221 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10687] == bool(mem[_10687])
                                    if not mem[_10687]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8599] = return_data.size
                                    mem[_8599 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8696 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8599 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8696 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9222 = mem[_9056]
                                    if mem[_9056] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9056] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10112 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10112] == bool(mem[_10112])
                                    if not mem[_10112]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9222 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9222 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10688 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10688] == bool(mem[_10688])
                                    if not mem[_10688]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8790 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8790 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9127 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9295 = mem[_9127]
                                    if mem[_9127] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9127] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10159] == bool(mem[_10159])
                                    if not mem[_10159]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9295 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9295 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10735 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10735] == bool(mem[_10735])
                                    if not mem[_10735]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8636 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8636] = return_data.size
                                    mem[_8636 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8792 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8636 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8792 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9128 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9296 = mem[_9128]
                                    if mem[_9128] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9128] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10160] == bool(mem[_10160])
                                    if not mem[_10160]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9296 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9296 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10736 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10736] == bool(mem[_10736])
                                    if not mem[_10736]:
                                        revert with 0, 'Withdraw failed!'
                else:
                    mem[(8 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                    require ext_code.size(stor5)
                    staticcall stor5.getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if msg.sender == ext_call.return_data[12 len 20]:
                        mem[(10 * ceil32(return_data.size)) + 96] = 2
                        mem[(10 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg2
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2879 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2891 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2891
                            require return_data.size >= _2879 + (32 * _2891) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2891] = mem[(10 * ceil32(return_data.size)) + _2879 + 224 len 32 * _2891]
                            require 0 < _2891
                            _5747 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5767 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5767] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5767 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5767 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5807 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5807]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5895 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5921 = mem[_5895]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8666 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8666 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9041 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9193 = mem[_9041]
                                        if mem[_9041] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9041] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10097 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10097] == bool(mem[_10097])
                                        if not mem[_10097]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9193 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9193 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10673 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10673] == bool(mem[_10673])
                                        if not mem[_10673]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8585] = return_data.size
                                        mem[_8585 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8668 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8585 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8668 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9042 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9194 = mem[_9042]
                                        if mem[_9042] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9042] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10098] == bool(mem[_10098])
                                        if not mem[_10098]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9194 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9194 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10674 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10674] == bool(mem[_10674])
                                        if not mem[_10674]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8762 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8762 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9281 = mem[_9099]
                                        if mem[_9099] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9099] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10145 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10145] == bool(mem[_10145])
                                        if not mem[_10145]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9281 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9281 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10721 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10721] == bool(mem[_10721])
                                        if not mem[_10721]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8629 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8629] = return_data.size
                                        mem[_8629 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8764 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8629 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8764 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9282 = mem[_9100]
                                        if mem[_9100] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9100] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10146 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10146] == bool(mem[_10146])
                                        if not mem[_10146]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9282 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9282 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10722 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10722] == bool(mem[_10722])
                                        if not mem[_10722]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5896 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5896] == bool(mem[_5896])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6005 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6069 = mem[_6005]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8670 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8670 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9043 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9197 = mem[_9043]
                                        if mem[_9043] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9043] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10099] == bool(mem[_10099])
                                        if not mem[_10099]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9197 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9197 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10675 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10675] == bool(mem[_10675])
                                        if not mem[_10675]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8587] = return_data.size
                                        mem[_8587 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8672 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8587 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8672 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9198 = mem[_9044]
                                        if mem[_9044] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9044] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10100] == bool(mem[_10100])
                                        if not mem[_10100]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9198 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9198 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10676 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10676] == bool(mem[_10676])
                                        if not mem[_10676]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8766 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8766 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9283 = mem[_9103]
                                        if mem[_9103] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9103] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10147 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10147] == bool(mem[_10147])
                                        if not mem[_10147]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9283 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9283 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10723 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10723] == bool(mem[_10723])
                                        if not mem[_10723]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8630 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8630] = return_data.size
                                        mem[_8630 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8768 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8630 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8768 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9284 = mem[_9104]
                                        if mem[_9104] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9104] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10148 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10148] == bool(mem[_10148])
                                        if not mem[_10148]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9284 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9284 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10724 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10724] == bool(mem[_10724])
                                        if not mem[_10724]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg3
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2880 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2892 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2892
                            require return_data.size >= _2880 + (32 * _2892) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2892] = mem[(10 * ceil32(return_data.size)) + _2880 + 224 len 32 * _2892]
                            require 0 < _2892
                            _5748 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5768 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5768] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5768 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5768 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5808 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5808]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5923 = mem[_5897]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8674 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8674 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9201 = mem[_9045]
                                        if mem[_9045] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9045] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10101 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10101] == bool(mem[_10101])
                                        if not mem[_10101]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9201 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9201 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10677 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10677] == bool(mem[_10677])
                                        if not mem[_10677]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8589] = return_data.size
                                        mem[_8589 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8676 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8589 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8676 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9202 = mem[_9046]
                                        if mem[_9046] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9046] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10102 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10102] == bool(mem[_10102])
                                        if not mem[_10102]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9202 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9202 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10678 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10678] == bool(mem[_10678])
                                        if not mem[_10678]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8770 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8770 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9285 = mem[_9107]
                                        if mem[_9107] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9107] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10149] == bool(mem[_10149])
                                        if not mem[_10149]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9285 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9285 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10725 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10725] == bool(mem[_10725])
                                        if not mem[_10725]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8631 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8631] = return_data.size
                                        mem[_8631 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8772 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8631 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8772 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9286 = mem[_9108]
                                        if mem[_9108] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9108] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10150] == bool(mem[_10150])
                                        if not mem[_10150]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9286 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9286 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10726 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10726] == bool(mem[_10726])
                                        if not mem[_10726]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5898] == bool(mem[_5898])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6006 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6072 = mem[_6006]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8678 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8678 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9205 = mem[_9047]
                                        if mem[_9047] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9047] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10103] == bool(mem[_10103])
                                        if not mem[_10103]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9205 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9205 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10679 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10679] == bool(mem[_10679])
                                        if not mem[_10679]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8591 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8591] = return_data.size
                                        mem[_8591 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8680 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8591 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8680 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9206 = mem[_9048]
                                        if mem[_9048] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9048] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10104] == bool(mem[_10104])
                                        if not mem[_10104]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9206 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9206 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10680 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10680] == bool(mem[_10680])
                                        if not mem[_10680]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8774 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8774 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9111 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9287 = mem[_9111]
                                        if mem[_9111] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9111] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10151 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10151] == bool(mem[_10151])
                                        if not mem[_10151]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9287 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9287 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10727 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10727] == bool(mem[_10727])
                                        if not mem[_10727]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8632] = return_data.size
                                        mem[_8632 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8776 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8632 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8776 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9112 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9288 = mem[_9112]
                                        if mem[_9112] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9112] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10152] == bool(mem[_10152])
                                        if not mem[_10152]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9288 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9288 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10728 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10728] == bool(mem[_10728])
                                        if not mem[_10728]:
                                            revert with 0, 'Withdraw failed!'
                    else:
                        mem[(10 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                        require ext_code.size(stor6)
                        staticcall stor6.getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] != msg.sender:
                            revert with 0, 'Unknown caller!'
                        mem[(11 * ceil32(return_data.size)) + 96] = 2
                        mem[(11 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg2
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2877 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2889 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2889
                            require return_data.size >= _2877 + (32 * _2889) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2889] = mem[(11 * ceil32(return_data.size)) + _2877 + 224 len 32 * _2889]
                            require 0 < _2889
                            _5745 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5765 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5765] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5765 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5765 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5805]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5891 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5917 = mem[_5891]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8650 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8650 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9177 = mem[_9033]
                                        if mem[_9033] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9033] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10089 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10089] == bool(mem[_10089])
                                        if not mem[_10089]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9177 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9177 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10665 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10665] == bool(mem[_10665])
                                        if not mem[_10665]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8577] = return_data.size
                                        mem[_8577 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8652 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8577 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8652 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9178 = mem[_9034]
                                        if mem[_9034] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9034] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10090 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10090] == bool(mem[_10090])
                                        if not mem[_10090]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9178 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9178 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10666 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10666] == bool(mem[_10666])
                                        if not mem[_10666]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8746 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8746 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9083 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9273 = mem[_9083]
                                        if mem[_9083] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9083] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10137 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10137] == bool(mem[_10137])
                                        if not mem[_10137]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9273 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9273 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10713 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10713] == bool(mem[_10713])
                                        if not mem[_10713]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8625 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8625] = return_data.size
                                        mem[_8625 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8748 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8625 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8748 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9084 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9274 = mem[_9084]
                                        if mem[_9084] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9084] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10138 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10138] == bool(mem[_10138])
                                        if not mem[_10138]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9274 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9274 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10714 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10714] == bool(mem[_10714])
                                        if not mem[_10714]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5892] == bool(mem[_5892])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6003 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6063 = mem[_6003]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8654 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8654 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9035 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9181 = mem[_9035]
                                        if mem[_9035] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9035] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10091] == bool(mem[_10091])
                                        if not mem[_10091]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9181 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9181 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10667 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10667] == bool(mem[_10667])
                                        if not mem[_10667]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8579 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8579] = return_data.size
                                        mem[_8579 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8656 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8579 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8656 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9036 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9182 = mem[_9036]
                                        if mem[_9036] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9036] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10092] == bool(mem[_10092])
                                        if not mem[_10092]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9182 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9182 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10668] == bool(mem[_10668])
                                        if not mem[_10668]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8750 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8750 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9087 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9275 = mem[_9087]
                                        if mem[_9087] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9087] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10139 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10139] == bool(mem[_10139])
                                        if not mem[_10139]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9275 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9275 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10715 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10715] == bool(mem[_10715])
                                        if not mem[_10715]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8626 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8626] = return_data.size
                                        mem[_8626 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8752 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8626 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8752 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9088 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9276 = mem[_9088]
                                        if mem[_9088] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9088] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10140 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10140] == bool(mem[_10140])
                                        if not mem[_10140]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9276 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9276 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10716] == bool(mem[_10716])
                                        if not mem[_10716]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg3
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2878 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2890 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2890
                            require return_data.size >= _2878 + (32 * _2890) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2890] = mem[(11 * ceil32(return_data.size)) + _2878 + 224 len 32 * _2890]
                            require 0 < _2890
                            _5746 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5766 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5766] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5766 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5766 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5806 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5806]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5893 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5919 = mem[_5893]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8658 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8658 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9037 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9185 = mem[_9037]
                                        if mem[_9037] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9037] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10093] == bool(mem[_10093])
                                        if not mem[_10093]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9185 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9185 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10669] == bool(mem[_10669])
                                        if not mem[_10669]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8581] = return_data.size
                                        mem[_8581 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8660 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8581 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8660 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9038 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9186 = mem[_9038]
                                        if mem[_9038] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9038] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10094 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10094] == bool(mem[_10094])
                                        if not mem[_10094]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9186 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9186 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10670] == bool(mem[_10670])
                                        if not mem[_10670]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8754 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8754 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9277 = mem[_9091]
                                        if mem[_9091] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9091] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10141 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10141] == bool(mem[_10141])
                                        if not mem[_10141]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9277 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9277 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10717] == bool(mem[_10717])
                                        if not mem[_10717]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8627 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8627] = return_data.size
                                        mem[_8627 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8756 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8627 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8756 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9278 = mem[_9092]
                                        if mem[_9092] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9092] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10142 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10142] == bool(mem[_10142])
                                        if not mem[_10142]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9278 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9278 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10718 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10718] == bool(mem[_10718])
                                        if not mem[_10718]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5894] == bool(mem[_5894])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6004 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6066 = mem[_6004]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8662 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8662 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9039 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9189 = mem[_9039]
                                        if mem[_9039] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9039] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10095] == bool(mem[_10095])
                                        if not mem[_10095]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9189 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9189 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10671] == bool(mem[_10671])
                                        if not mem[_10671]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8583] = return_data.size
                                        mem[_8583 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8664 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8583 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8664 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9040 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9190 = mem[_9040]
                                        if mem[_9040] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9040] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10096] == bool(mem[_10096])
                                        if not mem[_10096]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9190 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9190 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10672 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10672] == bool(mem[_10672])
                                        if not mem[_10672]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8758 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8758 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9279 = mem[_9095]
                                        if mem[_9095] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9095] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10143 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10143] == bool(mem[_10143])
                                        if not mem[_10143]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9279 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9279 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10719 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10719] == bool(mem[_10719])
                                        if not mem[_10719]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8628 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8628] = return_data.size
                                        mem[_8628 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8760 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8628 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8760 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9280 = mem[_9096]
                                        if mem[_9096] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9096] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10144] == bool(mem[_10144])
                                        if not mem[_10144]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9280 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9280 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10720 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10720] == bool(mem[_10720])
                                        if not mem[_10720]:
                                            revert with 0, 'Withdraw failed!'
}

function wakaSwapCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(stor1)
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if msg.sender == ext_call.return_data[12 len 20]:
        mem[(4 * ceil32(return_data.size)) + 96] = 2
        mem[(4 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
        if arg2:
            mem[(4 * ceil32(return_data.size)) + 196] = arg2
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg2, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2887 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
            _2899 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2899
            require return_data.size >= _2887 + (32 * _2899) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2899] = mem[(4 * ceil32(return_data.size)) + _2887 + 224 len 32 * _2899]
            require 0 < _2899
            _5755 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5757 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5757] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5757 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5757 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5787 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5787]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5853 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5877 = mem[_5853]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8730 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8730 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9073 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9257 = mem[_9073]
                        if mem[_9073] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9073] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10129] == bool(mem[_10129])
                        if not mem[_10129]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9257 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9257 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10705] == bool(mem[_10705])
                        if not mem[_10705]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8617 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8617] = return_data.size
                        mem[_8617 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8732 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8617 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8732 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9074 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9258 = mem[_9074]
                        if mem[_9074] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9074] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10130 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10130] == bool(mem[_10130])
                        if not mem[_10130]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9258 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9258 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10706 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10706] == bool(mem[_10706])
                        if not mem[_10706]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8826 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8826 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9163 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9313 = mem[_9163]
                        if mem[_9163] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9163] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10177 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10177] == bool(mem[_10177])
                        if not mem[_10177]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9313 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9313 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10753] == bool(mem[_10753])
                        if not mem[_10753]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8645] = return_data.size
                        mem[_8645 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8828 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8645 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8828 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9164 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9314 = mem[_9164]
                        if mem[_9164] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9164] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10178] == bool(mem[_10178])
                        if not mem[_10178]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9314 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9314 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10754] == bool(mem[_10754])
                        if not mem[_10754]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5854 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5854] == bool(mem[_5854])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5961 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5985 = mem[_5961]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8734 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8734 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9075 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9261 = mem[_9075]
                        if mem[_9075] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9075] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10131] == bool(mem[_10131])
                        if not mem[_10131]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9261 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9261 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10707] == bool(mem[_10707])
                        if not mem[_10707]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8619] = return_data.size
                        mem[_8619 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8736 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8619 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8736 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9076 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9262 = mem[_9076]
                        if mem[_9076] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9076] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10132 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10132] == bool(mem[_10132])
                        if not mem[_10132]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9262 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9262 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10708] == bool(mem[_10708])
                        if not mem[_10708]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8830 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8830 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9315 = mem[_9167]
                        if mem[_9167] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9167] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10179 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10179] == bool(mem[_10179])
                        if not mem[_10179]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9315 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9315 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10755 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10755] == bool(mem[_10755])
                        if not mem[_10755]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8646] = return_data.size
                        mem[_8646 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8832 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8646 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8832 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9316 = mem[_9168]
                        if mem[_9168] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9168] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10180 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10180] == bool(mem[_10180])
                        if not mem[_10180]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9316 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9316 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10756] == bool(mem[_10756])
                        if not mem[_10756]:
                            revert with 0, 'Withdraw failed!'
        else:
            mem[(4 * ceil32(return_data.size)) + 196] = arg3
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg3, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2888 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
            _2900 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2900
            require return_data.size >= _2888 + (32 * _2900) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2900] = mem[(4 * ceil32(return_data.size)) + _2888 + 224 len 32 * _2900]
            require 0 < _2900
            _5756 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5758 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5758] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5758 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5758 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5788 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5788]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5855 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5879 = mem[_5855]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8738 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8738 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9077 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9265 = mem[_9077]
                        if mem[_9077] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9077] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10133] == bool(mem[_10133])
                        if not mem[_10133]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9265 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9265 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10709] == bool(mem[_10709])
                        if not mem[_10709]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8621 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8621] = return_data.size
                        mem[_8621 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8740 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8621 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8740 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9078 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9266 = mem[_9078]
                        if mem[_9078] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9078] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10134] == bool(mem[_10134])
                        if not mem[_10134]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9266 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9266 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10710] == bool(mem[_10710])
                        if not mem[_10710]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8834 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8834 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9317 = mem[_9171]
                        if mem[_9171] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9171] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10181] == bool(mem[_10181])
                        if not mem[_10181]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9317 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9317 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10757] == bool(mem[_10757])
                        if not mem[_10757]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8647] = return_data.size
                        mem[_8647 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8836 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8647 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8836 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9172 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9318 = mem[_9172]
                        if mem[_9172] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9172] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10182] == bool(mem[_10182])
                        if not mem[_10182]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9318 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9318 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10758 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10758] == bool(mem[_10758])
                        if not mem[_10758]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5856] == bool(mem[_5856])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5962 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5988 = mem[_5962]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8742 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8742 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9269 = mem[_9079]
                        if mem[_9079] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9079] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10135] == bool(mem[_10135])
                        if not mem[_10135]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9269 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9269 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10711] == bool(mem[_10711])
                        if not mem[_10711]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8623] = return_data.size
                        mem[_8623 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8744 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8623 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8744 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9270 = mem[_9080]
                        if mem[_9080] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9080] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10136 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10136] == bool(mem[_10136])
                        if not mem[_10136]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9270 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9270 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10712] == bool(mem[_10712])
                        if not mem[_10712]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8838 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8838 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9319 = mem[_9175]
                        if mem[_9175] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9175] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10183] == bool(mem[_10183])
                        if not mem[_10183]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9319 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9319 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10759] == bool(mem[_10759])
                        if not mem[_10759]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8648] = return_data.size
                        mem[_8648 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8840 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8648 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8840 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9176 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9320 = mem[_9176]
                        if mem[_9176] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9176] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10184 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10184] == bool(mem[_10184])
                        if not mem[_10184]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9320 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9320 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10760 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10760] == bool(mem[_10760])
                        if not mem[_10760]:
                            revert with 0, 'Withdraw failed!'
    else:
        mem[(4 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
        require ext_code.size(stor2)
        staticcall stor2.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if msg.sender == ext_call.return_data[12 len 20]:
            mem[(6 * ceil32(return_data.size)) + 96] = 2
            mem[(6 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
            if arg2:
                mem[(6 * ceil32(return_data.size)) + 196] = arg2
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg2, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2885 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                _2897 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require return_data.size >= _2885 + (32 * _2897) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2897] = mem[(6 * ceil32(return_data.size)) + _2885 + 224 len 32 * _2897]
                require 0 < _2897
                _5753 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5759 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5759] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5759 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5759 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5791]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5885 = mem[_5861]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8714 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8714 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9065 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9241 = mem[_9065]
                            if mem[_9065] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9065] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10121] == bool(mem[_10121])
                            if not mem[_10121]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9241 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9241 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10697] == bool(mem[_10697])
                            if not mem[_10697]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8609] = return_data.size
                            mem[_8609 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8716 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8609 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8716 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9066 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9242 = mem[_9066]
                            if mem[_9066] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9066] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10122] == bool(mem[_10122])
                            if not mem[_10122]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9242 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9242 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10698] == bool(mem[_10698])
                            if not mem[_10698]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8810 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8810 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9147 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9305 = mem[_9147]
                            if mem[_9147] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9147] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10169 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10169] == bool(mem[_10169])
                            if not mem[_10169]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9305 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9305 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10745 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10745] == bool(mem[_10745])
                            if not mem[_10745]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8641] = return_data.size
                            mem[_8641 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8812 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8641 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8812 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9148 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9306 = mem[_9148]
                            if mem[_9148] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9148] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10170] == bool(mem[_10170])
                            if not mem[_10170]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9306 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9306 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10746] == bool(mem[_10746])
                            if not mem[_10746]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5862] == bool(mem[_5862])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5995 = mem[_5967]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8718 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8718 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9245 = mem[_9067]
                            if mem[_9067] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9067] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10123 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10123] == bool(mem[_10123])
                            if not mem[_10123]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9245 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9245 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10699] == bool(mem[_10699])
                            if not mem[_10699]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8611 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8611] = return_data.size
                            mem[_8611 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8720 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8611 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8720 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9246 = mem[_9068]
                            if mem[_9068] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9068] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10124 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10124] == bool(mem[_10124])
                            if not mem[_10124]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9246 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9246 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10700] == bool(mem[_10700])
                            if not mem[_10700]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8814 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8814 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9307 = mem[_9151]
                            if mem[_9151] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9151] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10171] == bool(mem[_10171])
                            if not mem[_10171]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9307 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9307 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10747] == bool(mem[_10747])
                            if not mem[_10747]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8642] = return_data.size
                            mem[_8642 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8816 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8642 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8816 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9152 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9308 = mem[_9152]
                            if mem[_9152] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9152] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10172] == bool(mem[_10172])
                            if not mem[_10172]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9308 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9308 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10748] == bool(mem[_10748])
                            if not mem[_10748]:
                                revert with 0, 'Withdraw failed!'
            else:
                mem[(6 * ceil32(return_data.size)) + 196] = arg3
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg3, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2886 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                _2898 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require return_data.size >= _2886 + (32 * _2898) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2898] = mem[(6 * ceil32(return_data.size)) + _2886 + 224 len 32 * _2898]
                require 0 < _2898
                _5754 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5760 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5760] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5760 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5760 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5792 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5792]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5863 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5887 = mem[_5863]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8722 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8722 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9249 = mem[_9069]
                            if mem[_9069] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9069] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10125] == bool(mem[_10125])
                            if not mem[_10125]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9249 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9249 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10701] == bool(mem[_10701])
                            if not mem[_10701]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8613 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8613] = return_data.size
                            mem[_8613 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8724 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8613 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8724 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9250 = mem[_9070]
                            if mem[_9070] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9070] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10126] == bool(mem[_10126])
                            if not mem[_10126]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9250 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9250 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10702] == bool(mem[_10702])
                            if not mem[_10702]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8818 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8818 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9309 = mem[_9155]
                            if mem[_9155] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9155] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10173] == bool(mem[_10173])
                            if not mem[_10173]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9309 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9309 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10749] == bool(mem[_10749])
                            if not mem[_10749]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8643 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8643] = return_data.size
                            mem[_8643 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8820 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8643 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8820 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9156 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9310 = mem[_9156]
                            if mem[_9156] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9156] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10174] == bool(mem[_10174])
                            if not mem[_10174]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9310 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9310 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10750] == bool(mem[_10750])
                            if not mem[_10750]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5864] == bool(mem[_5864])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5968 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5998 = mem[_5968]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8726 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8726 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9253 = mem[_9071]
                            if mem[_9071] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9071] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10127] == bool(mem[_10127])
                            if not mem[_10127]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9253 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9253 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10703] == bool(mem[_10703])
                            if not mem[_10703]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8615 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8615] = return_data.size
                            mem[_8615 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8728 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8615 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8728 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9254 = mem[_9072]
                            if mem[_9072] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9072] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10128 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10128] == bool(mem[_10128])
                            if not mem[_10128]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9254 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9254 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10704] == bool(mem[_10704])
                            if not mem[_10704]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8822 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8822 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9311 = mem[_9159]
                            if mem[_9159] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9159] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10175 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10175] == bool(mem[_10175])
                            if not mem[_10175]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9311 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9311 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10751 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10751] == bool(mem[_10751])
                            if not mem[_10751]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8644 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8644] = return_data.size
                            mem[_8644 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8824 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8644 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8824 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9312 = mem[_9160]
                            if mem[_9160] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9160] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10176 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10176] == bool(mem[_10176])
                            if not mem[_10176]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9312 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9312 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10752] == bool(mem[_10752])
                            if not mem[_10752]:
                                revert with 0, 'Withdraw failed!'
        else:
            mem[(6 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
            require ext_code.size(stor3)
            staticcall stor3.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if msg.sender == ext_call.return_data[12 len 20]:
                mem[(7 * ceil32(return_data.size)) + 96] = 2
                mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                if arg2:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2883 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                    _2895 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2895
                    require return_data.size >= _2883 + (32 * _2895) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2895] = mem[(7 * ceil32(return_data.size)) + _2883 + 224 len 32 * _2895]
                    require 0 < _2895
                    _5751 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5761 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5761] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5761 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5761 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5797 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5797]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5873 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5899 = mem[_5873]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8698 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8698 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9057 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9225 = mem[_9057]
                                if mem[_9057] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9057] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10113 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10113] == bool(mem[_10113])
                                if not mem[_10113]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9225 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9225 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10689 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10689] == bool(mem[_10689])
                                if not mem[_10689]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8601 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8601] = return_data.size
                                mem[_8601 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8700 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8601 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8700 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9058 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9226 = mem[_9058]
                                if mem[_9058] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9058] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10114 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10114] == bool(mem[_10114])
                                if not mem[_10114]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9226 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9226 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10690] == bool(mem[_10690])
                                if not mem[_10690]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8794 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8794 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9131 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9297 = mem[_9131]
                                if mem[_9131] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9131] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10161] == bool(mem[_10161])
                                if not mem[_10161]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9297 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9297 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10737] == bool(mem[_10737])
                                if not mem[_10737]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8637 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8637] = return_data.size
                                mem[_8637 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8796 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8637 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8796 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9132 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9298 = mem[_9132]
                                if mem[_9132] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9132] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10162] == bool(mem[_10162])
                                if not mem[_10162]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9298 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9298 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10738] == bool(mem[_10738])
                                if not mem[_10738]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5874 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5874] == bool(mem[_5874])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6011 = mem[_5979]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8702 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8702 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9059 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9229 = mem[_9059]
                                if mem[_9059] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9059] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10115 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10115] == bool(mem[_10115])
                                if not mem[_10115]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9229 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9229 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10691 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10691] == bool(mem[_10691])
                                if not mem[_10691]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8603 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8603] = return_data.size
                                mem[_8603 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8704 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8603 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8704 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9060 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9230 = mem[_9060]
                                if mem[_9060] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9060] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10116] == bool(mem[_10116])
                                if not mem[_10116]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9230 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9230 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10692 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10692] == bool(mem[_10692])
                                if not mem[_10692]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8798 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8798 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9135 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9299 = mem[_9135]
                                if mem[_9135] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9135] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10163] == bool(mem[_10163])
                                if not mem[_10163]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9299 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9299 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10739] == bool(mem[_10739])
                                if not mem[_10739]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8638] = return_data.size
                                mem[_8638 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8800 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8638 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8800 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9136 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9300 = mem[_9136]
                                if mem[_9136] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9136] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10164 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10164] == bool(mem[_10164])
                                if not mem[_10164]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9300 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9300 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10740 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10740] == bool(mem[_10740])
                                if not mem[_10740]:
                                    revert with 0, 'Withdraw failed!'
                else:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg3
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg3, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2884 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                    _2896 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2896
                    require return_data.size >= _2884 + (32 * _2896) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2896] = mem[(7 * ceil32(return_data.size)) + _2884 + 224 len 32 * _2896]
                    require 0 < _2896
                    _5752 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5762 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5762] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5762 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5762 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5798]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5875 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5901 = mem[_5875]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8706 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8706 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9061 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9233 = mem[_9061]
                                if mem[_9061] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9061] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10117] == bool(mem[_10117])
                                if not mem[_10117]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9233 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9233 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10693 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10693] == bool(mem[_10693])
                                if not mem[_10693]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8605 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8605] = return_data.size
                                mem[_8605 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8708 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8605 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8708 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9062 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9234 = mem[_9062]
                                if mem[_9062] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9062] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10118] == bool(mem[_10118])
                                if not mem[_10118]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9234 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9234 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10694] == bool(mem[_10694])
                                if not mem[_10694]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8802 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8802 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9139 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9301 = mem[_9139]
                                if mem[_9139] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9139] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10165 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10165] == bool(mem[_10165])
                                if not mem[_10165]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9301 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9301 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10741 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10741] == bool(mem[_10741])
                                if not mem[_10741]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8639 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8639] = return_data.size
                                mem[_8639 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8804 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8639 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8804 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9140 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9302 = mem[_9140]
                                if mem[_9140] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9140] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10166] == bool(mem[_10166])
                                if not mem[_10166]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9302 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9302 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10742 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10742] == bool(mem[_10742])
                                if not mem[_10742]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5876 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5876] == bool(mem[_5876])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6014 = mem[_5980]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8710 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8710 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9063 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9237 = mem[_9063]
                                if mem[_9063] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9063] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10119 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10119] == bool(mem[_10119])
                                if not mem[_10119]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9237 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9237 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10695] == bool(mem[_10695])
                                if not mem[_10695]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8607 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8607] = return_data.size
                                mem[_8607 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8712 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8607 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8712 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9064 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9238 = mem[_9064]
                                if mem[_9064] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9064] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10120 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10120] == bool(mem[_10120])
                                if not mem[_10120]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9238 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9238 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10696] == bool(mem[_10696])
                                if not mem[_10696]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8806 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8806 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9303 = mem[_9143]
                                if mem[_9143] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9143] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10167] == bool(mem[_10167])
                                if not mem[_10167]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9303 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9303 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10743] == bool(mem[_10743])
                                if not mem[_10743]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8640 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8640] = return_data.size
                                mem[_8640 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8808 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8640 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8808 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9144 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9304 = mem[_9144]
                                if mem[_9144] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9144] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10168] == bool(mem[_10168])
                                if not mem[_10168]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9304 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9304 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10744 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10744] == bool(mem[_10744])
                                if not mem[_10744]:
                                    revert with 0, 'Withdraw failed!'
            else:
                mem[(7 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                require ext_code.size(stor4)
                staticcall stor4.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if msg.sender == ext_call.return_data[12 len 20]:
                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                    mem[(8 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                    if arg2:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg2, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2881 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                        _2893 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2893
                        require return_data.size >= _2881 + (32 * _2893) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2893] = mem[(8 * ceil32(return_data.size)) + _2881 + 224 len 32 * _2893]
                        require 0 < _2893
                        _5749 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5763 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5763] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5763 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5763 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5801 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5801]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5881 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5907 = mem[_5881]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8682 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8682 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9049 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9209 = mem[_9049]
                                    if mem[_9049] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9049] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10105] == bool(mem[_10105])
                                    if not mem[_10105]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9209 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9209 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10681] == bool(mem[_10681])
                                    if not mem[_10681]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8593 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8593] = return_data.size
                                    mem[_8593 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8684 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8593 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8684 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9050 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9210 = mem[_9050]
                                    if mem[_9050] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9050] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10106] == bool(mem[_10106])
                                    if not mem[_10106]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9210 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9210 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10682 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10682] == bool(mem[_10682])
                                    if not mem[_10682]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8778 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8778 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9115 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9289 = mem[_9115]
                                    if mem[_9115] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9115] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10153] == bool(mem[_10153])
                                    if not mem[_10153]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9289 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9289 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10729 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10729] == bool(mem[_10729])
                                    if not mem[_10729]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8633] = return_data.size
                                    mem[_8633 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8780 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8633 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8780 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9116 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9290 = mem[_9116]
                                    if mem[_9116] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9116] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10154] == bool(mem[_10154])
                                    if not mem[_10154]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9290 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9290 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10730 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10730] == bool(mem[_10730])
                                    if not mem[_10730]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5882 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5882] == bool(mem[_5882])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6035 = mem[_5989]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8686 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8686 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9051 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9213 = mem[_9051]
                                    if mem[_9051] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9051] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10107 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10107] == bool(mem[_10107])
                                    if not mem[_10107]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9213 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9213 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10683 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10683] == bool(mem[_10683])
                                    if not mem[_10683]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8595 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8595] = return_data.size
                                    mem[_8595 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8688 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8595 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8688 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9052 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9214 = mem[_9052]
                                    if mem[_9052] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9052] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10108 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10108] == bool(mem[_10108])
                                    if not mem[_10108]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9214 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9214 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10684] == bool(mem[_10684])
                                    if not mem[_10684]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8782 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8782 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9119 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9291 = mem[_9119]
                                    if mem[_9119] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9119] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10155 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10155] == bool(mem[_10155])
                                    if not mem[_10155]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9291 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9291 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10731 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10731] == bool(mem[_10731])
                                    if not mem[_10731]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8634 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8634] = return_data.size
                                    mem[_8634 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8784 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8634 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8784 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9120 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9292 = mem[_9120]
                                    if mem[_9120] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9120] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10156] == bool(mem[_10156])
                                    if not mem[_10156]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9292 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9292 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10732 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10732] == bool(mem[_10732])
                                    if not mem[_10732]:
                                        revert with 0, 'Withdraw failed!'
                    else:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg3
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg3, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2882 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                        _2894 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2894
                        require return_data.size >= _2882 + (32 * _2894) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2894] = mem[(8 * ceil32(return_data.size)) + _2882 + 224 len 32 * _2894]
                        require 0 < _2894
                        _5750 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5764 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5764] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5764 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5764 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5802]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5909 = mem[_5883]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8690 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8690 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9053 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9217 = mem[_9053]
                                    if mem[_9053] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9053] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10109 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10109] == bool(mem[_10109])
                                    if not mem[_10109]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9217 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9217 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10685 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10685] == bool(mem[_10685])
                                    if not mem[_10685]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8597] = return_data.size
                                    mem[_8597 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8692 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8597 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8692 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9054 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9218 = mem[_9054]
                                    if mem[_9054] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9054] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10110 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10110] == bool(mem[_10110])
                                    if not mem[_10110]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9218 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9218 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10686 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10686] == bool(mem[_10686])
                                    if not mem[_10686]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8786 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8786 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9123 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9293 = mem[_9123]
                                    if mem[_9123] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9123] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10157] == bool(mem[_10157])
                                    if not mem[_10157]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9293 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9293 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10733 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10733] == bool(mem[_10733])
                                    if not mem[_10733]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8635 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8635] = return_data.size
                                    mem[_8635 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8788 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8635 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8788 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9124 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9294 = mem[_9124]
                                    if mem[_9124] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9124] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10158] == bool(mem[_10158])
                                    if not mem[_10158]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9294 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9294 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10734 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10734] == bool(mem[_10734])
                                    if not mem[_10734]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5884 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5884] == bool(mem[_5884])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6038 = mem[_5990]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8694 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8694 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9221 = mem[_9055]
                                    if mem[_9055] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9055] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10111 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10111] == bool(mem[_10111])
                                    if not mem[_10111]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9221 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9221 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10687] == bool(mem[_10687])
                                    if not mem[_10687]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8599] = return_data.size
                                    mem[_8599 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8696 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8599 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8696 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9222 = mem[_9056]
                                    if mem[_9056] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9056] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10112 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10112] == bool(mem[_10112])
                                    if not mem[_10112]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9222 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9222 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10688 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10688] == bool(mem[_10688])
                                    if not mem[_10688]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8790 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8790 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9127 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9295 = mem[_9127]
                                    if mem[_9127] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9127] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10159] == bool(mem[_10159])
                                    if not mem[_10159]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9295 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9295 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10735 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10735] == bool(mem[_10735])
                                    if not mem[_10735]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8636 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8636] = return_data.size
                                    mem[_8636 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8792 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8636 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8792 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9128 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9296 = mem[_9128]
                                    if mem[_9128] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9128] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10160] == bool(mem[_10160])
                                    if not mem[_10160]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9296 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9296 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10736 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10736] == bool(mem[_10736])
                                    if not mem[_10736]:
                                        revert with 0, 'Withdraw failed!'
                else:
                    mem[(8 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                    require ext_code.size(stor5)
                    staticcall stor5.getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if msg.sender == ext_call.return_data[12 len 20]:
                        mem[(10 * ceil32(return_data.size)) + 96] = 2
                        mem[(10 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg2
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2879 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2891 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2891
                            require return_data.size >= _2879 + (32 * _2891) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2891] = mem[(10 * ceil32(return_data.size)) + _2879 + 224 len 32 * _2891]
                            require 0 < _2891
                            _5747 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5767 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5767] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5767 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5767 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5807 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5807]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5895 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5921 = mem[_5895]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8666 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8666 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9041 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9193 = mem[_9041]
                                        if mem[_9041] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9041] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10097 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10097] == bool(mem[_10097])
                                        if not mem[_10097]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9193 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9193 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10673 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10673] == bool(mem[_10673])
                                        if not mem[_10673]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8585] = return_data.size
                                        mem[_8585 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8668 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8585 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8668 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9042 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9194 = mem[_9042]
                                        if mem[_9042] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9042] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10098] == bool(mem[_10098])
                                        if not mem[_10098]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9194 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9194 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10674 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10674] == bool(mem[_10674])
                                        if not mem[_10674]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8762 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8762 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9281 = mem[_9099]
                                        if mem[_9099] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9099] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10145 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10145] == bool(mem[_10145])
                                        if not mem[_10145]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9281 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9281 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10721 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10721] == bool(mem[_10721])
                                        if not mem[_10721]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8629 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8629] = return_data.size
                                        mem[_8629 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8764 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8629 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8764 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9282 = mem[_9100]
                                        if mem[_9100] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9100] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10146 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10146] == bool(mem[_10146])
                                        if not mem[_10146]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9282 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9282 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10722 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10722] == bool(mem[_10722])
                                        if not mem[_10722]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5896 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5896] == bool(mem[_5896])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6005 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6069 = mem[_6005]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8670 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8670 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9043 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9197 = mem[_9043]
                                        if mem[_9043] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9043] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10099] == bool(mem[_10099])
                                        if not mem[_10099]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9197 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9197 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10675 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10675] == bool(mem[_10675])
                                        if not mem[_10675]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8587] = return_data.size
                                        mem[_8587 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8672 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8587 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8672 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9198 = mem[_9044]
                                        if mem[_9044] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9044] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10100] == bool(mem[_10100])
                                        if not mem[_10100]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9198 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9198 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10676 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10676] == bool(mem[_10676])
                                        if not mem[_10676]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8766 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8766 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9283 = mem[_9103]
                                        if mem[_9103] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9103] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10147 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10147] == bool(mem[_10147])
                                        if not mem[_10147]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9283 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9283 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10723 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10723] == bool(mem[_10723])
                                        if not mem[_10723]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8630 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8630] = return_data.size
                                        mem[_8630 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8768 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8630 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8768 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9284 = mem[_9104]
                                        if mem[_9104] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9104] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10148 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10148] == bool(mem[_10148])
                                        if not mem[_10148]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9284 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9284 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10724 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10724] == bool(mem[_10724])
                                        if not mem[_10724]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg3
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2880 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2892 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2892
                            require return_data.size >= _2880 + (32 * _2892) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2892] = mem[(10 * ceil32(return_data.size)) + _2880 + 224 len 32 * _2892]
                            require 0 < _2892
                            _5748 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5768 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5768] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5768 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5768 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5808 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5808]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5923 = mem[_5897]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8674 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8674 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9201 = mem[_9045]
                                        if mem[_9045] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9045] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10101 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10101] == bool(mem[_10101])
                                        if not mem[_10101]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9201 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9201 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10677 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10677] == bool(mem[_10677])
                                        if not mem[_10677]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8589] = return_data.size
                                        mem[_8589 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8676 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8589 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8676 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9202 = mem[_9046]
                                        if mem[_9046] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9046] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10102 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10102] == bool(mem[_10102])
                                        if not mem[_10102]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9202 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9202 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10678 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10678] == bool(mem[_10678])
                                        if not mem[_10678]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8770 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8770 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9285 = mem[_9107]
                                        if mem[_9107] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9107] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10149] == bool(mem[_10149])
                                        if not mem[_10149]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9285 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9285 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10725 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10725] == bool(mem[_10725])
                                        if not mem[_10725]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8631 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8631] = return_data.size
                                        mem[_8631 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8772 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8631 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8772 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9286 = mem[_9108]
                                        if mem[_9108] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9108] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10150] == bool(mem[_10150])
                                        if not mem[_10150]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9286 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9286 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10726 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10726] == bool(mem[_10726])
                                        if not mem[_10726]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5898] == bool(mem[_5898])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6006 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6072 = mem[_6006]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8678 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8678 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9205 = mem[_9047]
                                        if mem[_9047] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9047] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10103] == bool(mem[_10103])
                                        if not mem[_10103]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9205 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9205 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10679 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10679] == bool(mem[_10679])
                                        if not mem[_10679]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8591 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8591] = return_data.size
                                        mem[_8591 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8680 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8591 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8680 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9206 = mem[_9048]
                                        if mem[_9048] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9048] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10104] == bool(mem[_10104])
                                        if not mem[_10104]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9206 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9206 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10680 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10680] == bool(mem[_10680])
                                        if not mem[_10680]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8774 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8774 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9111 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9287 = mem[_9111]
                                        if mem[_9111] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9111] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10151 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10151] == bool(mem[_10151])
                                        if not mem[_10151]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9287 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9287 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10727 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10727] == bool(mem[_10727])
                                        if not mem[_10727]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8632] = return_data.size
                                        mem[_8632 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8776 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8632 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8776 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9112 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9288 = mem[_9112]
                                        if mem[_9112] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9112] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10152] == bool(mem[_10152])
                                        if not mem[_10152]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9288 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9288 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10728 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10728] == bool(mem[_10728])
                                        if not mem[_10728]:
                                            revert with 0, 'Withdraw failed!'
                    else:
                        mem[(10 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                        require ext_code.size(stor6)
                        staticcall stor6.getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] != msg.sender:
                            revert with 0, 'Unknown caller!'
                        mem[(11 * ceil32(return_data.size)) + 96] = 2
                        mem[(11 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg2
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2877 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2889 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2889
                            require return_data.size >= _2877 + (32 * _2889) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2889] = mem[(11 * ceil32(return_data.size)) + _2877 + 224 len 32 * _2889]
                            require 0 < _2889
                            _5745 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5765 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5765] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5765 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5765 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5805]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5891 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5917 = mem[_5891]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8650 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8650 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9177 = mem[_9033]
                                        if mem[_9033] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9033] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10089 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10089] == bool(mem[_10089])
                                        if not mem[_10089]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9177 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9177 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10665 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10665] == bool(mem[_10665])
                                        if not mem[_10665]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8577] = return_data.size
                                        mem[_8577 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8652 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8577 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8652 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9178 = mem[_9034]
                                        if mem[_9034] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9034] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10090 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10090] == bool(mem[_10090])
                                        if not mem[_10090]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9178 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9178 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10666 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10666] == bool(mem[_10666])
                                        if not mem[_10666]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8746 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8746 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9083 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9273 = mem[_9083]
                                        if mem[_9083] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9083] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10137 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10137] == bool(mem[_10137])
                                        if not mem[_10137]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9273 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9273 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10713 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10713] == bool(mem[_10713])
                                        if not mem[_10713]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8625 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8625] = return_data.size
                                        mem[_8625 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8748 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8625 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8748 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9084 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9274 = mem[_9084]
                                        if mem[_9084] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9084] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10138 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10138] == bool(mem[_10138])
                                        if not mem[_10138]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9274 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9274 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10714 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10714] == bool(mem[_10714])
                                        if not mem[_10714]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5892] == bool(mem[_5892])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6003 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6063 = mem[_6003]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8654 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8654 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9035 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9181 = mem[_9035]
                                        if mem[_9035] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9035] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10091] == bool(mem[_10091])
                                        if not mem[_10091]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9181 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9181 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10667 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10667] == bool(mem[_10667])
                                        if not mem[_10667]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8579 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8579] = return_data.size
                                        mem[_8579 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8656 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8579 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8656 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9036 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9182 = mem[_9036]
                                        if mem[_9036] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9036] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10092] == bool(mem[_10092])
                                        if not mem[_10092]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9182 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9182 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10668] == bool(mem[_10668])
                                        if not mem[_10668]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8750 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8750 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9087 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9275 = mem[_9087]
                                        if mem[_9087] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9087] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10139 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10139] == bool(mem[_10139])
                                        if not mem[_10139]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9275 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9275 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10715 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10715] == bool(mem[_10715])
                                        if not mem[_10715]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8626 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8626] = return_data.size
                                        mem[_8626 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8752 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8626 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8752 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9088 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9276 = mem[_9088]
                                        if mem[_9088] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9088] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10140 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10140] == bool(mem[_10140])
                                        if not mem[_10140]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9276 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9276 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10716] == bool(mem[_10716])
                                        if not mem[_10716]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg3
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2878 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2890 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2890
                            require return_data.size >= _2878 + (32 * _2890) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2890] = mem[(11 * ceil32(return_data.size)) + _2878 + 224 len 32 * _2890]
                            require 0 < _2890
                            _5746 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5766 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5766] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5766 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5766 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5806 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5806]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5893 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5919 = mem[_5893]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8658 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8658 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9037 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9185 = mem[_9037]
                                        if mem[_9037] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9037] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10093] == bool(mem[_10093])
                                        if not mem[_10093]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9185 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9185 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10669] == bool(mem[_10669])
                                        if not mem[_10669]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8581] = return_data.size
                                        mem[_8581 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8660 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8581 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8660 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9038 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9186 = mem[_9038]
                                        if mem[_9038] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9038] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10094 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10094] == bool(mem[_10094])
                                        if not mem[_10094]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9186 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9186 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10670] == bool(mem[_10670])
                                        if not mem[_10670]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8754 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8754 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9277 = mem[_9091]
                                        if mem[_9091] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9091] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10141 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10141] == bool(mem[_10141])
                                        if not mem[_10141]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9277 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9277 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10717] == bool(mem[_10717])
                                        if not mem[_10717]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8627 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8627] = return_data.size
                                        mem[_8627 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8756 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8627 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8756 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9278 = mem[_9092]
                                        if mem[_9092] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9092] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10142 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10142] == bool(mem[_10142])
                                        if not mem[_10142]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9278 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9278 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10718 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10718] == bool(mem[_10718])
                                        if not mem[_10718]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5894] == bool(mem[_5894])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6004 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6066 = mem[_6004]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8662 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8662 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9039 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9189 = mem[_9039]
                                        if mem[_9039] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9039] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10095] == bool(mem[_10095])
                                        if not mem[_10095]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9189 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9189 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10671] == bool(mem[_10671])
                                        if not mem[_10671]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8583] = return_data.size
                                        mem[_8583 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8664 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8583 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8664 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9040 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9190 = mem[_9040]
                                        if mem[_9040] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9040] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10096] == bool(mem[_10096])
                                        if not mem[_10096]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9190 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9190 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10672 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10672] == bool(mem[_10672])
                                        if not mem[_10672]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8758 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8758 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9279 = mem[_9095]
                                        if mem[_9095] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9095] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10143 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10143] == bool(mem[_10143])
                                        if not mem[_10143]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9279 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9279 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10719 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10719] == bool(mem[_10719])
                                        if not mem[_10719]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8628 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8628] = return_data.size
                                        mem[_8628 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8760 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8628 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8760 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9280 = mem[_9096]
                                        if mem[_9096] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9096] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10144] == bool(mem[_10144])
                                        if not mem[_10144]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9280 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9280 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10720 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10720] == bool(mem[_10720])
                                        if not mem[_10720]:
                                            revert with 0, 'Withdraw failed!'
}

function uniswapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(stor1)
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if msg.sender == ext_call.return_data[12 len 20]:
        mem[(4 * ceil32(return_data.size)) + 96] = 2
        mem[(4 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
        if arg2:
            mem[(4 * ceil32(return_data.size)) + 196] = arg2
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg2, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2887 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
            _2899 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2899
            require return_data.size >= _2887 + (32 * _2899) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2899] = mem[(4 * ceil32(return_data.size)) + _2887 + 224 len 32 * _2899]
            require 0 < _2899
            _5755 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5757 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5757] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5757 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5757 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5787 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5787]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5853 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5877 = mem[_5853]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8730 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8730 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9073 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9257 = mem[_9073]
                        if mem[_9073] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9073] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10129] == bool(mem[_10129])
                        if not mem[_10129]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9257 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9257 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10705] == bool(mem[_10705])
                        if not mem[_10705]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8617 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8617] = return_data.size
                        mem[_8617 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8732 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8617 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8732 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9074 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9258 = mem[_9074]
                        if mem[_9074] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9074] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10130 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10130] == bool(mem[_10130])
                        if not mem[_10130]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9258 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9258 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10706 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10706] == bool(mem[_10706])
                        if not mem[_10706]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8826 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8826 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9163 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9313 = mem[_9163]
                        if mem[_9163] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9163] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10177 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10177] == bool(mem[_10177])
                        if not mem[_10177]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9313 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9313 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10753] == bool(mem[_10753])
                        if not mem[_10753]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8645] = return_data.size
                        mem[_8645 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8828 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8645 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8828 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9164 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9314 = mem[_9164]
                        if mem[_9164] <= _5877:
                            revert with 0, 'Impossible?!'
                        if mem[_9164] - _5877 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10178] == bool(mem[_10178])
                        if not mem[_10178]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9314 - _5877 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9314 - _5877 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10754] == bool(mem[_10754])
                        if not mem[_10754]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5854 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5854] == bool(mem[_5854])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5961 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5985 = mem[_5961]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5757 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8734 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8734 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9075 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9261 = mem[_9075]
                        if mem[_9075] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9075] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10131] == bool(mem[_10131])
                        if not mem[_10131]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9261 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9261 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10707] == bool(mem[_10707])
                        if not mem[_10707]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8619] = return_data.size
                        mem[_8619 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8736 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8619 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8736 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9076 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9262 = mem[_9076]
                        if mem[_9076] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9076] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10132 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10132] == bool(mem[_10132])
                        if not mem[_10132]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9262 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9262 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10708] == bool(mem[_10708])
                        if not mem[_10708]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8830 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8830 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9315 = mem[_9167]
                        if mem[_9167] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9167] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10179 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10179] == bool(mem[_10179])
                        if not mem[_10179]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9315 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9315 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10755 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10755] == bool(mem[_10755])
                        if not mem[_10755]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8646] = return_data.size
                        mem[_8646 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8832 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8646 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8832 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9316 = mem[_9168]
                        if mem[_9168] <= _5985:
                            revert with 0, 'Impossible?!'
                        if mem[_9168] - _5985 <= _5755:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10180 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10180] == bool(mem[_10180])
                        if not mem[_10180]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9316 - _5985 - _5755
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9316 - _5985 - _5755
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10756] == bool(mem[_10756])
                        if not mem[_10756]:
                            revert with 0, 'Withdraw failed!'
        else:
            mem[(4 * ceil32(return_data.size)) + 196] = arg3
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 292
            t = (4 * ceil32(return_data.size)) + 128
            while idx < 2:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor7)
            staticcall stor7.getAmountsIn(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args arg3, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _2888 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
            require (4 * ceil32(return_data.size)) + return_data.size + 192 > (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
            _2900 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
            require mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
            require (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
            mem[64] = (6 * ceil32(return_data.size)) + (32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
            mem[(6 * ceil32(return_data.size)) + 192] = _2900
            require return_data.size >= _2888 + (32 * _2900) + 32
            mem[(6 * ceil32(return_data.size)) + 224 len 32 * _2900] = mem[(4 * ceil32(return_data.size)) + _2888 + 224 len 32 * _2900]
            require 0 < _2900
            _5756 = mem[(6 * ceil32(return_data.size)) + 224]
            require arg4.length >= 96
            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
            require cd[(arg4 + 100)] <= test266151307()
            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
            _5758 = mem[64]
            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
            mem[_5758] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
            mem[_5758 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5758 + 32] = 0
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[(arg4 + 68)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5788 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_5788]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5855 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5879 = mem[_5855]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8738 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8738 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9077 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9265 = mem[_9077]
                        if mem[_9077] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9077] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10133] == bool(mem[_10133])
                        if not mem[_10133]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9265 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9265 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10709] == bool(mem[_10709])
                        if not mem[_10709]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8621 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8621] = return_data.size
                        mem[_8621 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8740 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8621 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8740 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9078 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9266 = mem[_9078]
                        if mem[_9078] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9078] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10134] == bool(mem[_10134])
                        if not mem[_10134]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9266 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9266 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10710] == bool(mem[_10710])
                        if not mem[_10710]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8834 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8834 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9317 = mem[_9171]
                        if mem[_9171] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9171] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10181] == bool(mem[_10181])
                        if not mem[_10181]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9317 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9317 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10757] == bool(mem[_10757])
                        if not mem[_10757]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8647] = return_data.size
                        mem[_8647 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8836 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8647 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8836 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9172 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9318 = mem[_9172]
                        if mem[_9172] <= _5879:
                            revert with 0, 'Impossible?!'
                        if mem[_9172] - _5879 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10182] == bool(mem[_10182])
                        if not mem[_10182]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9318 - _5879 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9318 - _5879 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10758 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10758] == bool(mem[_10758])
                        if not mem[_10758]:
                            revert with 0, 'Withdraw failed!'
            else:
                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                mem[mem[64] + 36] = -1
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[(arg4 + 68)]), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_5856] == bool(mem[_5856])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5962 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5988 = mem[_5962]
                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5758 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8742 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8742 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9269 = mem[_9079]
                        if mem[_9079] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9079] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10135] == bool(mem[_10135])
                        if not mem[_10135]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9269 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9269 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10711] == bool(mem[_10711])
                        if not mem[_10711]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8623] = return_data.size
                        mem[_8623 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8744 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8623 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8744 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9270 = mem[_9080]
                        if mem[_9080] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9080] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10136 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10136] == bool(mem[_10136])
                        if not mem[_10136]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9270 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9270 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10712] == bool(mem[_10712])
                        if not mem[_10712]:
                            revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            _8838 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = ext_call.return_data[0]
                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(ext_call.return_data[0]) + _8838 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9319 = mem[_9175]
                        if mem[_9175] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9175] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10183] == bool(mem[_10183])
                        if not mem[_10183]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9319 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9319 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10759] == bool(mem[_10759])
                        if not mem[_10759]:
                            revert with 0, 'Withdraw failed!'
                    else:
                        _8648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_8648] = return_data.size
                        mem[_8648 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            _8840 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = return_data.size
                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8648 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                            if ceil32(return_data.size) <= return_data.size:
                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                            mem[mem[64] + return_data.size + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(return_data.size) + _8840 + -mem[64] + 68
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9176 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9320 = mem[_9176]
                        if mem[_9176] <= _5988:
                            revert with 0, 'Impossible?!'
                        if mem[_9176] - _5988 <= _5756:
                            revert with 0, 'Nope aggregator!'
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10184 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10184] == bool(mem[_10184])
                        if not mem[_10184]:
                            revert with 0, 'Payback failed!'
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _9320 - _5988 - _5756
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _9320 - _5988 - _5756
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10760 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10760] == bool(mem[_10760])
                        if not mem[_10760]:
                            revert with 0, 'Withdraw failed!'
    else:
        mem[(4 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
        require ext_code.size(stor2)
        staticcall stor2.getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if msg.sender == ext_call.return_data[12 len 20]:
            mem[(6 * ceil32(return_data.size)) + 96] = 2
            mem[(6 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
            if arg2:
                mem[(6 * ceil32(return_data.size)) + 196] = arg2
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg2, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2885 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                _2897 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                require return_data.size >= _2885 + (32 * _2897) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2897] = mem[(6 * ceil32(return_data.size)) + _2885 + 224 len 32 * _2897]
                require 0 < _2897
                _5753 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5759 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5759] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5759 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5759 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5791]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5885 = mem[_5861]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8714 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8714 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9065 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9241 = mem[_9065]
                            if mem[_9065] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9065] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10121] == bool(mem[_10121])
                            if not mem[_10121]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9241 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9241 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10697] == bool(mem[_10697])
                            if not mem[_10697]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8609] = return_data.size
                            mem[_8609 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8716 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8609 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8716 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9066 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9242 = mem[_9066]
                            if mem[_9066] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9066] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10122] == bool(mem[_10122])
                            if not mem[_10122]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9242 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9242 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10698] == bool(mem[_10698])
                            if not mem[_10698]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8810 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8810 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9147 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9305 = mem[_9147]
                            if mem[_9147] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9147] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10169 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10169] == bool(mem[_10169])
                            if not mem[_10169]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9305 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9305 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10745 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10745] == bool(mem[_10745])
                            if not mem[_10745]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8641] = return_data.size
                            mem[_8641 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8812 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8641 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8812 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9148 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9306 = mem[_9148]
                            if mem[_9148] <= _5885:
                                revert with 0, 'Impossible?!'
                            if mem[_9148] - _5885 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10170] == bool(mem[_10170])
                            if not mem[_10170]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9306 - _5885 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9306 - _5885 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10746] == bool(mem[_10746])
                            if not mem[_10746]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5862] == bool(mem[_5862])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5995 = mem[_5967]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5759 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8718 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8718 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9245 = mem[_9067]
                            if mem[_9067] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9067] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10123 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10123] == bool(mem[_10123])
                            if not mem[_10123]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9245 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9245 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10699] == bool(mem[_10699])
                            if not mem[_10699]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8611 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8611] = return_data.size
                            mem[_8611 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8720 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8611 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8720 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9246 = mem[_9068]
                            if mem[_9068] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9068] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10124 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10124] == bool(mem[_10124])
                            if not mem[_10124]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9246 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9246 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10700] == bool(mem[_10700])
                            if not mem[_10700]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8814 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8814 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9307 = mem[_9151]
                            if mem[_9151] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9151] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10171] == bool(mem[_10171])
                            if not mem[_10171]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9307 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9307 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10747] == bool(mem[_10747])
                            if not mem[_10747]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8642] = return_data.size
                            mem[_8642 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8816 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8642 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8816 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9152 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9308 = mem[_9152]
                            if mem[_9152] <= _5995:
                                revert with 0, 'Impossible?!'
                            if mem[_9152] - _5995 <= _5753:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10172] == bool(mem[_10172])
                            if not mem[_10172]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9308 - _5995 - _5753
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9308 - _5995 - _5753
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10748] == bool(mem[_10748])
                            if not mem[_10748]:
                                revert with 0, 'Withdraw failed!'
            else:
                mem[(6 * ceil32(return_data.size)) + 196] = arg3
                mem[(6 * ceil32(return_data.size)) + 228] = 64
                mem[(6 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (6 * ceil32(return_data.size)) + 292
                t = (6 * ceil32(return_data.size)) + 128
                while idx < 2:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor8)
                staticcall stor8.getAmountsIn(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args arg3, Array(len=2, data=mem[(6 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (7 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2886 = mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                require mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                require (6 * ceil32(return_data.size)) + return_data.size + 192 > (6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                _2898 = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                require (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                mem[64] = (7 * ceil32(return_data.size)) + (32 * mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                mem[(7 * ceil32(return_data.size)) + 192] = mem[(6 * ceil32(return_data.size)) + mem[(6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                require return_data.size >= _2886 + (32 * _2898) + 32
                mem[(7 * ceil32(return_data.size)) + 224 len 32 * _2898] = mem[(6 * ceil32(return_data.size)) + _2886 + 224 len 32 * _2898]
                require 0 < _2898
                _5754 = mem[(7 * ceil32(return_data.size)) + 224]
                require arg4.length >= 96
                require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                require cd[(arg4 + 100)] <= test266151307()
                require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                _5760 = mem[64]
                require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                mem[_5760] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                mem[_5760 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5760 + 32] = 0
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[(arg4 + 68)])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5792 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_5792]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5863 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5887 = mem[_5863]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8722 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8722 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9249 = mem[_9069]
                            if mem[_9069] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9069] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10125] == bool(mem[_10125])
                            if not mem[_10125]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9249 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9249 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10701] == bool(mem[_10701])
                            if not mem[_10701]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8613 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8613] = return_data.size
                            mem[_8613 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8724 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8613 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8724 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9250 = mem[_9070]
                            if mem[_9070] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9070] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10126] == bool(mem[_10126])
                            if not mem[_10126]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9250 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9250 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10702] == bool(mem[_10702])
                            if not mem[_10702]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8818 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8818 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9309 = mem[_9155]
                            if mem[_9155] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9155] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10173] == bool(mem[_10173])
                            if not mem[_10173]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9309 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9309 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10749] == bool(mem[_10749])
                            if not mem[_10749]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8643 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8643] = return_data.size
                            mem[_8643 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8820 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8643 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8820 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9156 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9310 = mem[_9156]
                            if mem[_9156] <= _5887:
                                revert with 0, 'Impossible?!'
                            if mem[_9156] - _5887 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10174] == bool(mem[_10174])
                            if not mem[_10174]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9310 - _5887 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9310 - _5887 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10750] == bool(mem[_10750])
                            if not mem[_10750]:
                                revert with 0, 'Withdraw failed!'
                else:
                    mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5864] == bool(mem[_5864])
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5968 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5998 = mem[_5968]
                    mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5760 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8726 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8726 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9071 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9253 = mem[_9071]
                            if mem[_9071] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9071] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10127] == bool(mem[_10127])
                            if not mem[_10127]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9253 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9253 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10703] == bool(mem[_10703])
                            if not mem[_10703]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8615 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8615] = return_data.size
                            mem[_8615 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8728 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8615 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8728 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9254 = mem[_9072]
                            if mem[_9072] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9072] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10128 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10128] == bool(mem[_10128])
                            if not mem[_10128]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9254 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9254 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10704] == bool(mem[_10704])
                            if not mem[_10704]:
                                revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                        call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                _8822 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = ext_call.return_data[0]
                                mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                    revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(ext_call.return_data[0]) + _8822 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9311 = mem[_9159]
                            if mem[_9159] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9159] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10175 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10175] == bool(mem[_10175])
                            if not mem[_10175]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9311 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9311 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10751 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10751] == bool(mem[_10751])
                            if not mem[_10751]:
                                revert with 0, 'Withdraw failed!'
                        else:
                            _8644 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_8644] = return_data.size
                            mem[_8644 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                _8824 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = return_data.size
                                mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8644 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                if ceil32(return_data.size) <= return_data.size:
                                    revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                mem[mem[64] + return_data.size + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(return_data.size) + _8824 + -mem[64] + 68
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9312 = mem[_9160]
                            if mem[_9160] <= _5998:
                                revert with 0, 'Impossible?!'
                            if mem[_9160] - _5998 <= _5754:
                                revert with 0, 'Nope aggregator!'
                            mem[mem[64] + 4] = msg.sender
                            mem[mem[64] + 36] = _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args msg.sender, _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10176 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10176] == bool(mem[_10176])
                            if not mem[_10176]:
                                revert with 0, 'Payback failed!'
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _9312 - _5998 - _5754
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _9312 - _5998 - _5754
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_10752] == bool(mem[_10752])
                            if not mem[_10752]:
                                revert with 0, 'Withdraw failed!'
        else:
            mem[(6 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
            require ext_code.size(stor3)
            staticcall stor3.getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), address(ext_call.return_data[0])
            mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if msg.sender == ext_call.return_data[12 len 20]:
                mem[(7 * ceil32(return_data.size)) + 96] = 2
                mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                if arg2:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2883 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                    _2895 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2895
                    require return_data.size >= _2883 + (32 * _2895) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2895] = mem[(7 * ceil32(return_data.size)) + _2883 + 224 len 32 * _2895]
                    require 0 < _2895
                    _5751 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5761 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5761] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5761 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5761 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5797 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5797]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5873 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5899 = mem[_5873]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8698 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8698 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9057 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9225 = mem[_9057]
                                if mem[_9057] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9057] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10113 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10113] == bool(mem[_10113])
                                if not mem[_10113]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9225 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9225 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10689 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10689] == bool(mem[_10689])
                                if not mem[_10689]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8601 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8601] = return_data.size
                                mem[_8601 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8700 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8601 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8700 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9058 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9226 = mem[_9058]
                                if mem[_9058] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9058] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10114 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10114] == bool(mem[_10114])
                                if not mem[_10114]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9226 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9226 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10690] == bool(mem[_10690])
                                if not mem[_10690]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8794 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8794 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9131 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9297 = mem[_9131]
                                if mem[_9131] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9131] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10161] == bool(mem[_10161])
                                if not mem[_10161]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9297 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9297 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10737] == bool(mem[_10737])
                                if not mem[_10737]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8637 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8637] = return_data.size
                                mem[_8637 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8796 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8637 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8796 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9132 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9298 = mem[_9132]
                                if mem[_9132] <= _5899:
                                    revert with 0, 'Impossible?!'
                                if mem[_9132] - _5899 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10162] == bool(mem[_10162])
                                if not mem[_10162]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9298 - _5899 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9298 - _5899 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10738] == bool(mem[_10738])
                                if not mem[_10738]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5874 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5874] == bool(mem[_5874])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6011 = mem[_5979]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5761 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8702 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8702 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9059 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9229 = mem[_9059]
                                if mem[_9059] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9059] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10115 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10115] == bool(mem[_10115])
                                if not mem[_10115]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9229 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9229 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10691 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10691] == bool(mem[_10691])
                                if not mem[_10691]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8603 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8603] = return_data.size
                                mem[_8603 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8704 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8603 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8704 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9060 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9230 = mem[_9060]
                                if mem[_9060] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9060] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10116] == bool(mem[_10116])
                                if not mem[_10116]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9230 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9230 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10692 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10692] == bool(mem[_10692])
                                if not mem[_10692]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8798 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8798 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9135 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9299 = mem[_9135]
                                if mem[_9135] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9135] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10163] == bool(mem[_10163])
                                if not mem[_10163]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9299 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9299 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10739] == bool(mem[_10739])
                                if not mem[_10739]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8638] = return_data.size
                                mem[_8638 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8800 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8638 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8800 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9136 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9300 = mem[_9136]
                                if mem[_9136] <= _6011:
                                    revert with 0, 'Impossible?!'
                                if mem[_9136] - _6011 <= _5751:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10164 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10164] == bool(mem[_10164])
                                if not mem[_10164]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9300 - _6011 - _5751
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9300 - _6011 - _5751
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10740 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10740] == bool(mem[_10740])
                                if not mem[_10740]:
                                    revert with 0, 'Withdraw failed!'
                else:
                    mem[(7 * ceil32(return_data.size)) + 196] = arg3
                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (7 * ceil32(return_data.size)) + 292
                    t = (7 * ceil32(return_data.size)) + 128
                    while idx < 2:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(stor9)
                    staticcall stor9.getAmountsIn(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args arg3, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (8 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2884 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                    _2896 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                    require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                    require (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                    mem[64] = (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                    mem[(8 * ceil32(return_data.size)) + 192] = _2896
                    require return_data.size >= _2884 + (32 * _2896) + 32
                    mem[(8 * ceil32(return_data.size)) + 224 len 32 * _2896] = mem[(7 * ceil32(return_data.size)) + _2884 + 224 len 32 * _2896]
                    require 0 < _2896
                    _5752 = mem[(8 * ceil32(return_data.size)) + 224]
                    require arg4.length >= 96
                    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                    require cd[(arg4 + 100)] <= test266151307()
                    require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                    require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                    _5762 = mem[64]
                    require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                    mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                    mem[_5762] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                    require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                    mem[_5762 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                    mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5762 + 32] = 0
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[(arg4 + 68)])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_5798]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5875 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5901 = mem[_5875]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8706 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8706 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9061 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9233 = mem[_9061]
                                if mem[_9061] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9061] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10117] == bool(mem[_10117])
                                if not mem[_10117]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9233 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9233 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10693 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10693] == bool(mem[_10693])
                                if not mem[_10693]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8605 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8605] = return_data.size
                                mem[_8605 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8708 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8605 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8708 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9062 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9234 = mem[_9062]
                                if mem[_9062] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9062] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10118] == bool(mem[_10118])
                                if not mem[_10118]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9234 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9234 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10694] == bool(mem[_10694])
                                if not mem[_10694]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8802 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8802 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9139 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9301 = mem[_9139]
                                if mem[_9139] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9139] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10165 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10165] == bool(mem[_10165])
                                if not mem[_10165]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9301 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9301 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10741 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10741] == bool(mem[_10741])
                                if not mem[_10741]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8639 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8639] = return_data.size
                                mem[_8639 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8804 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8639 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8804 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9140 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9302 = mem[_9140]
                                if mem[_9140] <= _5901:
                                    revert with 0, 'Impossible?!'
                                if mem[_9140] - _5901 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10166] == bool(mem[_10166])
                                if not mem[_10166]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9302 - _5901 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9302 - _5901 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10742 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10742] == bool(mem[_10742])
                                if not mem[_10742]:
                                    revert with 0, 'Withdraw failed!'
                    else:
                        mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(cd[(arg4 + 68)]), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5876 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_5876] == bool(mem[_5876])
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6014 = mem[_5980]
                        mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5762 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8710 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8710 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9063 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9237 = mem[_9063]
                                if mem[_9063] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9063] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10119 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10119] == bool(mem[_10119])
                                if not mem[_10119]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9237 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9237 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10695] == bool(mem[_10695])
                                if not mem[_10695]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8607 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8607] = return_data.size
                                mem[_8607 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8712 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8607 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8712 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9064 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9238 = mem[_9064]
                                if mem[_9064] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9064] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10120 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10120] == bool(mem[_10120])
                                if not mem[_10120]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9238 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9238 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10696] == bool(mem[_10696])
                                if not mem[_10696]:
                                    revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                            call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    _8806 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = ext_call.return_data[0]
                                    mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                    if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                        revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                    mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(ext_call.return_data[0]) + _8806 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9303 = mem[_9143]
                                if mem[_9143] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9143] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10167] == bool(mem[_10167])
                                if not mem[_10167]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9303 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9303 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10743] == bool(mem[_10743])
                                if not mem[_10743]:
                                    revert with 0, 'Withdraw failed!'
                            else:
                                _8640 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_8640] = return_data.size
                                mem[_8640 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    _8808 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = return_data.size
                                    mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8640 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                    if ceil32(return_data.size) <= return_data.size:
                                        revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                    mem[mem[64] + return_data.size + 68] = 0
                                    revert with memory
                                      from mem[64]
                                       len ceil32(return_data.size) + _8808 + -mem[64] + 68
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9144 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9304 = mem[_9144]
                                if mem[_9144] <= _6014:
                                    revert with 0, 'Impossible?!'
                                if mem[_9144] - _6014 <= _5752:
                                    revert with 0, 'Nope aggregator!'
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10168] == bool(mem[_10168])
                                if not mem[_10168]:
                                    revert with 0, 'Payback failed!'
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _9304 - _6014 - _5752
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _9304 - _6014 - _5752
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10744 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10744] == bool(mem[_10744])
                                if not mem[_10744]:
                                    revert with 0, 'Withdraw failed!'
            else:
                mem[(7 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                require ext_code.size(stor4)
                staticcall stor4.getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if msg.sender == ext_call.return_data[12 len 20]:
                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                    mem[(8 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                    if arg2:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg2, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2881 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                        _2893 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2893
                        require return_data.size >= _2881 + (32 * _2893) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2893] = mem[(8 * ceil32(return_data.size)) + _2881 + 224 len 32 * _2893]
                        require 0 < _2893
                        _5749 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5763 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5763] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5763 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5763 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5801 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5801]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5881 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5907 = mem[_5881]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8682 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8682 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9049 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9209 = mem[_9049]
                                    if mem[_9049] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9049] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10105] == bool(mem[_10105])
                                    if not mem[_10105]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9209 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9209 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10681] == bool(mem[_10681])
                                    if not mem[_10681]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8593 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8593] = return_data.size
                                    mem[_8593 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8684 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8593 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8684 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9050 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9210 = mem[_9050]
                                    if mem[_9050] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9050] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10106] == bool(mem[_10106])
                                    if not mem[_10106]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9210 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9210 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10682 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10682] == bool(mem[_10682])
                                    if not mem[_10682]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8778 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8778 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9115 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9289 = mem[_9115]
                                    if mem[_9115] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9115] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10153] == bool(mem[_10153])
                                    if not mem[_10153]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9289 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9289 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10729 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10729] == bool(mem[_10729])
                                    if not mem[_10729]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8633] = return_data.size
                                    mem[_8633 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8780 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8633 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8780 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9116 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9290 = mem[_9116]
                                    if mem[_9116] <= _5907:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9116] - _5907 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10154 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10154] == bool(mem[_10154])
                                    if not mem[_10154]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9290 - _5907 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9290 - _5907 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10730 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10730] == bool(mem[_10730])
                                    if not mem[_10730]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5882 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5882] == bool(mem[_5882])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6035 = mem[_5989]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5763 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8686 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8686 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9051 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9213 = mem[_9051]
                                    if mem[_9051] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9051] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10107 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10107] == bool(mem[_10107])
                                    if not mem[_10107]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9213 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9213 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10683 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10683] == bool(mem[_10683])
                                    if not mem[_10683]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8595 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8595] = return_data.size
                                    mem[_8595 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8688 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8595 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8688 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9052 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9214 = mem[_9052]
                                    if mem[_9052] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9052] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10108 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10108] == bool(mem[_10108])
                                    if not mem[_10108]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9214 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9214 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10684] == bool(mem[_10684])
                                    if not mem[_10684]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8782 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8782 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9119 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9291 = mem[_9119]
                                    if mem[_9119] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9119] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10155 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10155] == bool(mem[_10155])
                                    if not mem[_10155]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9291 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9291 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10731 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10731] == bool(mem[_10731])
                                    if not mem[_10731]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8634 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8634] = return_data.size
                                    mem[_8634 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8784 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8634 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8784 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9120 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9292 = mem[_9120]
                                    if mem[_9120] <= _6035:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9120] - _6035 <= _5749:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10156] == bool(mem[_10156])
                                    if not mem[_10156]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9292 - _6035 - _5749
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9292 - _6035 - _5749
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10732 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10732] == bool(mem[_10732])
                                    if not mem[_10732]:
                                        revert with 0, 'Withdraw failed!'
                    else:
                        mem[(8 * ceil32(return_data.size)) + 196] = arg3
                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                        idx = 0
                        s = (8 * ceil32(return_data.size)) + 292
                        t = (8 * ceil32(return_data.size)) + 128
                        while idx < 2:
                            mem[s] = mem[t + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(stor10)
                        staticcall stor10.getAmountsIn(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args arg3, Array(len=2, data=mem[(8 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = (10 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _2882 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                        _2894 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                        require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                        require (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                        mem[64] = (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                        mem[(10 * ceil32(return_data.size)) + 192] = _2894
                        require return_data.size >= _2882 + (32 * _2894) + 32
                        mem[(10 * ceil32(return_data.size)) + 224 len 32 * _2894] = mem[(8 * ceil32(return_data.size)) + _2882 + 224 len 32 * _2894]
                        require 0 < _2894
                        _5750 = mem[(10 * ceil32(return_data.size)) + 224]
                        require arg4.length >= 96
                        require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                        require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                        require cd[(arg4 + 100)] <= test266151307()
                        require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                        require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                        _5764 = mem[64]
                        require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                        mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                        mem[_5764] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                        require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                        mem[_5764 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                        mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5764 + 32] = 0
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[(arg4 + 68)])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_5802]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5909 = mem[_5883]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8690 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8690 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9053 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9217 = mem[_9053]
                                    if mem[_9053] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9053] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10109 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10109] == bool(mem[_10109])
                                    if not mem[_10109]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9217 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9217 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10685 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10685] == bool(mem[_10685])
                                    if not mem[_10685]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8597] = return_data.size
                                    mem[_8597 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8692 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8597 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8692 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9054 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9218 = mem[_9054]
                                    if mem[_9054] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9054] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10110 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10110] == bool(mem[_10110])
                                    if not mem[_10110]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9218 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9218 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10686 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10686] == bool(mem[_10686])
                                    if not mem[_10686]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8786 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8786 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9123 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9293 = mem[_9123]
                                    if mem[_9123] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9123] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10157] == bool(mem[_10157])
                                    if not mem[_10157]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9293 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9293 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10733 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10733] == bool(mem[_10733])
                                    if not mem[_10733]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8635 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8635] = return_data.size
                                    mem[_8635 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8788 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8635 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8788 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9124 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9294 = mem[_9124]
                                    if mem[_9124] <= _5909:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9124] - _5909 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10158] == bool(mem[_10158])
                                    if not mem[_10158]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9294 - _5909 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9294 - _5909 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10734 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10734] == bool(mem[_10734])
                                    if not mem[_10734]:
                                        revert with 0, 'Withdraw failed!'
                        else:
                            mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[(arg4 + 68)]), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5884 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_5884] == bool(mem[_5884])
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6038 = mem[_5990]
                            mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5764 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8694 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8694 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9221 = mem[_9055]
                                    if mem[_9055] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9055] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10111 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10111] == bool(mem[_10111])
                                    if not mem[_10111]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9221 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9221 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10687] == bool(mem[_10687])
                                    if not mem[_10687]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8599] = return_data.size
                                    mem[_8599 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8696 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8599 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8696 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9222 = mem[_9056]
                                    if mem[_9056] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9056] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10112 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10112] == bool(mem[_10112])
                                    if not mem[_10112]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9222 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9222 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10688 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10688] == bool(mem[_10688])
                                    if not mem[_10688]:
                                        revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        _8790 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = ext_call.return_data[0]
                                        mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                        if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                            revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                        mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(ext_call.return_data[0]) + _8790 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9127 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9295 = mem[_9127]
                                    if mem[_9127] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9127] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10159] == bool(mem[_10159])
                                    if not mem[_10159]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9295 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9295 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10735 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10735] == bool(mem[_10735])
                                    if not mem[_10735]:
                                        revert with 0, 'Withdraw failed!'
                                else:
                                    _8636 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_8636] = return_data.size
                                    mem[_8636 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        _8792 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = return_data.size
                                        mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8636 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                        if ceil32(return_data.size) <= return_data.size:
                                            revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                        mem[mem[64] + return_data.size + 68] = 0
                                        revert with memory
                                          from mem[64]
                                           len ceil32(return_data.size) + _8792 + -mem[64] + 68
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9128 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9296 = mem[_9128]
                                    if mem[_9128] <= _6038:
                                        revert with 0, 'Impossible?!'
                                    if mem[_9128] - _6038 <= _5750:
                                        revert with 0, 'Nope aggregator!'
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10160] == bool(mem[_10160])
                                    if not mem[_10160]:
                                        revert with 0, 'Payback failed!'
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _9296 - _6038 - _5750
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _9296 - _6038 - _5750
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10736 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10736] == bool(mem[_10736])
                                    if not mem[_10736]:
                                        revert with 0, 'Withdraw failed!'
                else:
                    mem[(8 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                    require ext_code.size(stor5)
                    staticcall stor5.getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if msg.sender == ext_call.return_data[12 len 20]:
                        mem[(10 * ceil32(return_data.size)) + 96] = 2
                        mem[(10 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg2
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2879 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2891 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2891
                            require return_data.size >= _2879 + (32 * _2891) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2891] = mem[(10 * ceil32(return_data.size)) + _2879 + 224 len 32 * _2891]
                            require 0 < _2891
                            _5747 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5767 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5767] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5767 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5767 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5807 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5807]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5895 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5921 = mem[_5895]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8666 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8666 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9041 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9193 = mem[_9041]
                                        if mem[_9041] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9041] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10097 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10097] == bool(mem[_10097])
                                        if not mem[_10097]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9193 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9193 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10673 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10673] == bool(mem[_10673])
                                        if not mem[_10673]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8585] = return_data.size
                                        mem[_8585 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8668 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8585 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8668 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9042 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9194 = mem[_9042]
                                        if mem[_9042] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9042] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10098] == bool(mem[_10098])
                                        if not mem[_10098]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9194 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9194 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10674 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10674] == bool(mem[_10674])
                                        if not mem[_10674]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8762 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8762 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9281 = mem[_9099]
                                        if mem[_9099] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9099] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10145 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10145] == bool(mem[_10145])
                                        if not mem[_10145]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9281 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9281 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10721 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10721] == bool(mem[_10721])
                                        if not mem[_10721]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8629 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8629] = return_data.size
                                        mem[_8629 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8764 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8629 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8764 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9282 = mem[_9100]
                                        if mem[_9100] <= _5921:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9100] - _5921 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10146 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10146] == bool(mem[_10146])
                                        if not mem[_10146]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9282 - _5921 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9282 - _5921 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10722 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10722] == bool(mem[_10722])
                                        if not mem[_10722]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5896 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5896] == bool(mem[_5896])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6005 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6069 = mem[_6005]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5767 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8670 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8670 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9043 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9197 = mem[_9043]
                                        if mem[_9043] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9043] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10099] == bool(mem[_10099])
                                        if not mem[_10099]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9197 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9197 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10675 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10675] == bool(mem[_10675])
                                        if not mem[_10675]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8587] = return_data.size
                                        mem[_8587 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8672 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8587 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8672 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9198 = mem[_9044]
                                        if mem[_9044] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9044] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10100] == bool(mem[_10100])
                                        if not mem[_10100]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9198 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9198 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10676 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10676] == bool(mem[_10676])
                                        if not mem[_10676]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8766 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8766 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9283 = mem[_9103]
                                        if mem[_9103] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9103] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10147 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10147] == bool(mem[_10147])
                                        if not mem[_10147]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9283 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9283 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10723 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10723] == bool(mem[_10723])
                                        if not mem[_10723]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8630 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8630] = return_data.size
                                        mem[_8630 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8768 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8630 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8768 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9284 = mem[_9104]
                                        if mem[_9104] <= _6069:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9104] - _6069 <= _5747:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10148 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10148] == bool(mem[_10148])
                                        if not mem[_10148]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9284 - _6069 - _5747
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9284 - _6069 - _5747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10724 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10724] == bool(mem[_10724])
                                        if not mem[_10724]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(10 * ceil32(return_data.size)) + 196] = arg3
                            mem[(10 * ceil32(return_data.size)) + 228] = 64
                            mem[(10 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (10 * ceil32(return_data.size)) + 292
                            t = (10 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor11)
                            staticcall stor11.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (11 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2880 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2892 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(11 * ceil32(return_data.size)) + 192] = _2892
                            require return_data.size >= _2880 + (32 * _2892) + 32
                            mem[(11 * ceil32(return_data.size)) + 224 len 32 * _2892] = mem[(10 * ceil32(return_data.size)) + _2880 + 224 len 32 * _2892]
                            require 0 < _2892
                            _5748 = mem[(11 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5768 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5768] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5768 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5768 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5808 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5808]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5923 = mem[_5897]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8674 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8674 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9201 = mem[_9045]
                                        if mem[_9045] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9045] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10101 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10101] == bool(mem[_10101])
                                        if not mem[_10101]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9201 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9201 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10677 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10677] == bool(mem[_10677])
                                        if not mem[_10677]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8589] = return_data.size
                                        mem[_8589 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8676 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8589 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8676 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9202 = mem[_9046]
                                        if mem[_9046] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9046] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10102 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10102] == bool(mem[_10102])
                                        if not mem[_10102]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9202 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9202 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10678 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10678] == bool(mem[_10678])
                                        if not mem[_10678]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8770 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8770 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9285 = mem[_9107]
                                        if mem[_9107] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9107] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10149] == bool(mem[_10149])
                                        if not mem[_10149]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9285 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9285 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10725 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10725] == bool(mem[_10725])
                                        if not mem[_10725]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8631 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8631] = return_data.size
                                        mem[_8631 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8772 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8631 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8772 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9286 = mem[_9108]
                                        if mem[_9108] <= _5923:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9108] - _5923 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10150] == bool(mem[_10150])
                                        if not mem[_10150]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9286 - _5923 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9286 - _5923 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10726 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10726] == bool(mem[_10726])
                                        if not mem[_10726]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5898] == bool(mem[_5898])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6006 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6072 = mem[_6006]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5768 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8678 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8678 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9205 = mem[_9047]
                                        if mem[_9047] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9047] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10103 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10103] == bool(mem[_10103])
                                        if not mem[_10103]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9205 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9205 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10679 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10679] == bool(mem[_10679])
                                        if not mem[_10679]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8591 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8591] = return_data.size
                                        mem[_8591 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8680 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8591 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8680 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9206 = mem[_9048]
                                        if mem[_9048] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9048] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10104 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10104] == bool(mem[_10104])
                                        if not mem[_10104]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9206 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9206 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10680 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10680] == bool(mem[_10680])
                                        if not mem[_10680]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8774 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8774 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9111 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9287 = mem[_9111]
                                        if mem[_9111] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9111] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10151 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10151] == bool(mem[_10151])
                                        if not mem[_10151]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9287 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9287 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10727 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10727] == bool(mem[_10727])
                                        if not mem[_10727]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8632] = return_data.size
                                        mem[_8632 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8776 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8632 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8776 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9112 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9288 = mem[_9112]
                                        if mem[_9112] <= _6072:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9112] - _6072 <= _5748:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10152] == bool(mem[_10152])
                                        if not mem[_10152]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9288 - _6072 - _5748
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9288 - _6072 - _5748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10728 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10728] == bool(mem[_10728])
                                        if not mem[_10728]:
                                            revert with 0, 'Withdraw failed!'
                    else:
                        mem[(10 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
                        require ext_code.size(stor6)
                        staticcall stor6.getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        mem[(10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] != msg.sender:
                            revert with 0, 'Unknown caller!'
                        mem[(11 * ceil32(return_data.size)) + 96] = 2
                        mem[(11 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 160] = address(ext_call.return_data[0])
                        mem[(11 * ceil32(return_data.size)) + 192] = 0x1f00ca7400000000000000000000000000000000000000000000000000000000
                        if arg2:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg2
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg2, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2877 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                            _2889 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2889
                            require return_data.size >= _2877 + (32 * _2889) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2889] = mem[(11 * ceil32(return_data.size)) + _2877 + 224 len 32 * _2889]
                            require 0 < _2889
                            _5745 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5765 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5765] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5765 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5765 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5805]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5891 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5917 = mem[_5891]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8650 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8650 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9177 = mem[_9033]
                                        if mem[_9033] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9033] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10089 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10089] == bool(mem[_10089])
                                        if not mem[_10089]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9177 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9177 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10665 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10665] == bool(mem[_10665])
                                        if not mem[_10665]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8577] = return_data.size
                                        mem[_8577 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8652 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8577 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8652 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9178 = mem[_9034]
                                        if mem[_9034] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9034] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10090 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10090] == bool(mem[_10090])
                                        if not mem[_10090]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9178 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9178 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10666 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10666] == bool(mem[_10666])
                                        if not mem[_10666]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8746 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8746 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9083 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9273 = mem[_9083]
                                        if mem[_9083] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9083] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10137 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10137] == bool(mem[_10137])
                                        if not mem[_10137]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9273 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9273 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10713 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10713] == bool(mem[_10713])
                                        if not mem[_10713]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8625 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8625] = return_data.size
                                        mem[_8625 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8748 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8625 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8748 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9084 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9274 = mem[_9084]
                                        if mem[_9084] <= _5917:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9084] - _5917 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10138 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10138] == bool(mem[_10138])
                                        if not mem[_10138]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9274 - _5917 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9274 - _5917 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10714 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10714] == bool(mem[_10714])
                                        if not mem[_10714]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5892] == bool(mem[_5892])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6003 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6063 = mem[_6003]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5765 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8654 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8654 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9035 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9181 = mem[_9035]
                                        if mem[_9035] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9035] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10091] == bool(mem[_10091])
                                        if not mem[_10091]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9181 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9181 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10667 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10667] == bool(mem[_10667])
                                        if not mem[_10667]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8579 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8579] = return_data.size
                                        mem[_8579 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8656 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8579 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8656 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9036 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9182 = mem[_9036]
                                        if mem[_9036] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9036] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10092] == bool(mem[_10092])
                                        if not mem[_10092]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9182 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9182 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10668] == bool(mem[_10668])
                                        if not mem[_10668]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8750 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8750 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9087 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9275 = mem[_9087]
                                        if mem[_9087] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9087] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10139 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10139] == bool(mem[_10139])
                                        if not mem[_10139]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9275 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9275 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10715 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10715] == bool(mem[_10715])
                                        if not mem[_10715]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8626 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8626] = return_data.size
                                        mem[_8626 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8752 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8626 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8752 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9088 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9276 = mem[_9088]
                                        if mem[_9088] <= _6063:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9088] - _6063 <= _5745:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10140 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10140] == bool(mem[_10140])
                                        if not mem[_10140]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9276 - _6063 - _5745
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9276 - _6063 - _5745
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10716] == bool(mem[_10716])
                                        if not mem[_10716]:
                                            revert with 0, 'Withdraw failed!'
                        else:
                            mem[(11 * ceil32(return_data.size)) + 196] = arg3
                            mem[(11 * ceil32(return_data.size)) + 228] = 64
                            mem[(11 * ceil32(return_data.size)) + 260] = 2
                            idx = 0
                            s = (11 * ceil32(return_data.size)) + 292
                            t = (11 * ceil32(return_data.size)) + 128
                            while idx < 2:
                                mem[s] = mem[t + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(stor12)
                            staticcall stor12.getAmountsIn(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args arg3, Array(len=2, data=mem[(11 * ceil32(return_data.size)) + 292 len 64])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(11 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (12 * ceil32(return_data.size)) + 192
                            require return_data.size >= 32
                            _2878 = mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32
                            require mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 <= test266151307()
                            require (11 * ceil32(return_data.size)) + return_data.size + 192 > (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 223
                            _2890 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]
                            require mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192] <= test266151307()
                            require (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 32 >= 0 and (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224 <= test266151307()
                            mem[64] = (12 * ceil32(return_data.size)) + (32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg3) >> 32 + 192]) + 224
                            mem[(12 * ceil32(return_data.size)) + 192] = _2890
                            require return_data.size >= _2878 + (32 * _2890) + 32
                            mem[(12 * ceil32(return_data.size)) + 224 len 32 * _2890] = mem[(11 * ceil32(return_data.size)) + _2878 + 224 len 32 * _2890]
                            require 0 < _2890
                            _5746 = mem[(12 * ceil32(return_data.size)) + 224]
                            require arg4.length >= 96
                            require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
                            require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
                            require cd[(arg4 + 100)] <= test266151307()
                            require arg4 + cd[(arg4 + 100)] + 67 < arg4 + arg4.length + 36
                            require cd[(arg4 + cd[(arg4 + 100)] + 36)] <= test266151307()
                            _5766 = mem[64]
                            require mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 >= mem[64] and mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32 <= test266151307()
                            mem[64] = mem[64] + ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) + 32
                            mem[_5766] = cd[(arg4 + cd[(arg4 + 100)] + 36)]
                            require cd[(arg4 + 100)] + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 68 <= arg4.length + 36
                            mem[_5766 + 32 len cd[(arg4 + cd[(arg4 + 100)] + 36)]] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                            mem[cd[(arg4 + cd[(arg4 + 100)] + 36)] + _5766 + 32] = 0
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[(arg4 + 68)])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[(arg4 + 68)])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5806 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_5806]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5893 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5919 = mem[_5893]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8658 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8658 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9037 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9185 = mem[_9037]
                                        if mem[_9037] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9037] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10093] == bool(mem[_10093])
                                        if not mem[_10093]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9185 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9185 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10669] == bool(mem[_10669])
                                        if not mem[_10669]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8581] = return_data.size
                                        mem[_8581 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8660 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8581 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8660 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9038 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9186 = mem[_9038]
                                        if mem[_9038] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9038] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10094 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10094] == bool(mem[_10094])
                                        if not mem[_10094]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9186 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9186 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10670] == bool(mem[_10670])
                                        if not mem[_10670]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8754 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8754 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9277 = mem[_9091]
                                        if mem[_9091] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9091] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10141 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10141] == bool(mem[_10141])
                                        if not mem[_10141]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9277 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9277 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10717] == bool(mem[_10717])
                                        if not mem[_10717]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8627 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8627] = return_data.size
                                        mem[_8627 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8756 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8627 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8756 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9278 = mem[_9092]
                                        if mem[_9092] <= _5919:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9092] - _5919 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10142 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10142] == bool(mem[_10142])
                                        if not mem[_10142]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9278 - _5919 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9278 - _5919 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10718 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10718] == bool(mem[_10718])
                                        if not mem[_10718]:
                                            revert with 0, 'Withdraw failed!'
                            else:
                                mem[mem[64] + 4] = address(cd[(arg4 + 68)])
                                mem[mem[64] + 36] = -1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[(arg4 + 68)]), -1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_5894] == bool(mem[_5894])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6004 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6066 = mem[_6004]
                                mem[mem[64] len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)])] = call.data[arg4 + cd[(arg4 + 100)] + 68 len cd[(arg4 + cd[(arg4 + 100)] + 36)]], mem[_5766 + cd[(arg4 + cd[(arg4 + 100)] + 36)] + 32 len ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) - cd[(arg4 + cd[(arg4 + 100)] + 36)]]
                                if ceil32(cd[(arg4 + cd[(arg4 + 100)] + 36)]) <= cd[(arg4 + cd[(arg4 + 100)] + 36)]:
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8662 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8662 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9039 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9189 = mem[_9039]
                                        if mem[_9039] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9039] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10095] == bool(mem[_10095])
                                        if not mem[_10095]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9189 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9189 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10671] == bool(mem[_10671])
                                        if not mem[_10671]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8583] = return_data.size
                                        mem[_8583 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8664 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8583 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8664 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9040 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9190 = mem[_9040]
                                        if mem[_9040] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9040] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10096] == bool(mem[_10096])
                                        if not mem[_10096]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9190 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9190 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10672 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10672] == bool(mem[_10672])
                                        if not mem[_10672]:
                                            revert with 0, 'Withdraw failed!'
                                else:
                                    mem[mem[64] + cd[(arg4 + cd[(arg4 + 100)] + 36)]] = 0
                                    call address(cd[(arg4 + 36)]).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len cd[(arg4 + cd[(arg4 + 100)] + 36)] - 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            _8758 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = ext_call.return_data[0]
                                            mem[mem[64] + 68 len ceil32(ext_call.return_data[0])] = mem[128 len ceil32(ext_call.return_data[0])]
                                            if ceil32(ext_call.return_data[0]) <= ext_call.return_data[0]:
                                                revert with 0, 32, ext_call.return_data[0], mem[mem[64] + 68 len ceil32(ext_call.return_data[0])]
                                            mem[mem[64] + ext_call.return_data[0] + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(ext_call.return_data[0]) + _8758 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9279 = mem[_9095]
                                        if mem[_9095] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9095] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10143 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10143] == bool(mem[_10143])
                                        if not mem[_10143]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9279 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9279 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10719 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10719] == bool(mem[_10719])
                                        if not mem[_10719]:
                                            revert with 0, 'Withdraw failed!'
                                    else:
                                        _8628 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_8628] = return_data.size
                                        mem[_8628 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            _8760 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = return_data.size
                                            mem[mem[64] + 68 len ceil32(return_data.size)] = ext_call.return_data[0 len return_data.size], mem[_8628 + return_data.size + 32 len ceil32(return_data.size) - return_data.size]
                                            if ceil32(return_data.size) <= return_data.size:
                                                revert with 0, 32, return_data.size, mem[mem[64] + 68 len ceil32(return_data.size)]
                                            mem[mem[64] + return_data.size + 68] = 0
                                            revert with memory
                                              from mem[64]
                                               len ceil32(return_data.size) + _8760 + -mem[64] + 68
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9280 = mem[_9096]
                                        if mem[_9096] <= _6066:
                                            revert with 0, 'Impossible?!'
                                        if mem[_9096] - _6066 <= _5746:
                                            revert with 0, 'Nope aggregator!'
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10144] == bool(mem[_10144])
                                        if not mem[_10144]:
                                            revert with 0, 'Payback failed!'
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _9280 - _6066 - _5746
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _9280 - _6066 - _5746
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10720 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10720] == bool(mem[_10720])
                                        if not mem[_10720]:
                                            revert with 0, 'Withdraw failed!'
}



}
