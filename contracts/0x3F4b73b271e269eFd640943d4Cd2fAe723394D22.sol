contract main {




// =====================  Runtime code  =====================


#
#  - resetApprovals()
#  - approveContracts()
#  - rebalanceCollateral()
#
const sub_2cf4e4ee(?) = ext_call.return_data[0]

const routerAddress = 0xf491e7b69e4244ad4002bc14e878a34207e38c29

const sub_3ad184e4(?) = 0xe45ac34e528907d0a0239ab5db507688070b20bf

const sub_668ecbf2(?) = 0x30872e4fc4edbfd7a352bfc2463eb4fae9c09086

const comptrollerAddress = 0x260e596dabe3afc463e75b6cc05d8c46acacfb09

const sub_6c1a35be(?) = 0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c

const farmPid = 2

const sub_b2ad2f0f(?) = 0x5aa53f03197e08c4851cad8c92c7922da5857e5d

const sub_c1e32a3d(?) = 0xec7178f4c41f346b2721907f5cf7628e388a7a58

const farmToken = 0x841fad6eae12c286d1fd18d1d525dffa75c7effe

const sub_e43e7b94(?) = 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475

const sub_eb61c72a(?) = ext_call.return_data[0]

const farmAddress = 0x2b2929e785374c651a81a63878ab22742656dcdd


uint256 stor0;
address owner;
mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of uint256 name;
array of uint256 symbol;
uint8 decimals;
address stor7; offset 8
address stor8;
address stor9;
address stor12;
address strategistAddress;
address keeperAddress;
uint256 sub_1a55f6eb;
uint256 sub_1fa98a80;
uint256 sub_f8c1e75e;
uint256 sub_a9b0ca38;
uint256 sub_c089f572;
uint256 sub_0e04c946;
uint256 lastHarvest;
uint256 withdrawalFee;
uint256 reserveAllocation;
uint256 depositLimit;

function name() payable {
    return name[0 len name.length]
}

function sub_0e04c946(?) payable {
    return sub_0e04c946
}

function totalSupply() payable {
    return totalSupply
}

function sub_1a55f6eb(?) payable {
    return sub_1a55f6eb
}

function sub_1fa98a80(?) payable {
    return sub_1fa98a80
}

function strategist() payable {
    return strategistAddress
}

function decimals() payable {
    return decimals
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    return balanceOf[address(arg1)]
}

function withdrawalFee() payable {
    return withdrawalFee
}

function owner() payable {
    return owner
}

function symbol() payable {
    return symbol[0 len symbol.length]
}

function sub_a9b0ca38(?) payable {
    return sub_a9b0ca38
}

function keeper() payable {
    return keeperAddress
}

function sub_c089f572(?) payable {
    return sub_c089f572
}

function allowance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    return allowance[address(arg1)][address(arg2)]
}

function depositLimit() payable {
    return depositLimit
}

function lastHarvest() payable {
    return lastHarvest
}

function sub_f8c1e75e(?) payable {
    return sub_f8c1e75e
}

function reserveAllocation() payable {
    return reserveAllocation
}

function _fallback() payable {
    revert
}

function isOwner() payable {
    return (msg.sender == owner)
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sub_d2d9a69d(?) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    idx = 0
    while idx < 10:
        idx = idx + 1
        continue 
}

function setKeeper(address arg1) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1
    keeperAddress = arg1
    emit UpdatedKeeper(arg1);
}

function setStrategist(address arg1) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1
    strategistAddress = arg1
    emit UpdatedStrategist(arg1);
}

function sub_94c04ced(?) payable {
    require calldata.size - 4 >= 96
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require 750000 > arg2
    require arg2 >= arg3
    require arg3 >= arg1
    sub_f8c1e75e = arg2
    sub_a9b0ca38 = arg1
}

function setFees(uint256 arg1, uint256 arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1 <= 5000
    require arg2 <= 50000
    require arg3 <= 100000
    sub_c089f572 = arg2
    withdrawalFee = arg1
}

function sub_8ad56bff(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_c3b49f3d(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_feb6848a(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_5627f7b5(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args 0xe45ac34e528907d0a0239ab5db507688070b20bf
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x654f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    36,
                    0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                    mem[200 len 28]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                    mem[198 len 30]
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function sub_b574d287(?) payable {
    require calldata.size - 4 >= 64
    if strategistAddress != msg.sender:
        require msg.sender == owner
    if arg2 > 10^6:
        revert with 0, 'SafeMath: subtraction overflow'
    if not -arg2 + 10^6:
        if not arg2:
            revert with 0, 'SafeMath: division by zero'
        require arg1 <= 50000
        require 0 / arg2 <= 750000
    else:
        if (-1 * 10^6 * arg2) + 10^12 / -arg2 + 10^6 != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not arg2:
            revert with 0, 'SafeMath: division by zero'
        require arg1 <= 50000
        require (-1 * 10^6 * arg2) + 10^12 / arg2 <= 750000
    reserveAllocation = arg1
    sub_1a55f6eb = arg2
    sub_1fa98a80 = -arg2 + 10^6
}

function decreaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 > allowance[address(msg.sender)][address(arg1)]:
        revert with 0, 
                    32,
                    37,
                    0x6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572,
                    mem[165 len 27],
                    mem[219 len 5]
    if not msg.sender:
        revert with 0, 32, 36, 0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
    if not arg1:
        revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
    allowance[address(msg.sender)][address(arg1)] -= arg2
    emit Approval((allowance[address(msg.sender)][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function increaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 + allowance[address(msg.sender)][address(arg1)] < allowance[address(msg.sender)][address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    36,
                    0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                    mem[200 len 28]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                    mem[198 len 30]
    allowance[address(msg.sender)][address(arg1)] += arg2
    emit Approval((arg2 + allowance[address(msg.sender)][address(arg1)]), msg.sender, arg1);
    return 1
}

function sub_a9c19c66(?) payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        return 0
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    return (ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
}

function transfer(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    37,
                    0x7345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                    mem[201 len 27]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                    mem[199 len 29]
    if arg2 > balanceOf[address(msg.sender)]:
        revert with 0, 
                    32,
                    38,
                    0x7345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63,
                    mem[166 len 26],
                    mem[218 len 6]
    balanceOf[address(msg.sender)] -= arg2
    if arg2 + balanceOf[arg1] < balanceOf[arg1]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] = arg2 + balanceOf[arg1]
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}

function sub_7845790c(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
}

function sub_cad20a29(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    37,
                    0x7345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                    mem[201 len 27]
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                    mem[199 len 29]
    if arg3 > balanceOf[address(arg1)]:
        revert with 0, 
                    32,
                    38,
                    0x7345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63,
                    mem[166 len 26],
                    mem[218 len 6]
    balanceOf[address(arg1)] -= arg3
    if arg3 + balanceOf[arg2] < balanceOf[arg2]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg2)] = arg3 + balanceOf[arg2]
    emit Transfer(arg3, arg1, arg2);
    if arg3 > allowance[address(arg1)][address(msg.sender)]:
        revert with 0, 
                    32,
                    40,
                    0x7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63,
                    mem[264 len 24],
                    mem[312 len 8]
    if not arg1:
        revert with 0, 32, 36, 0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
    if not msg.sender:
        revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
    allowance[address(arg1)][address(msg.sender)] -= arg3
    emit Approval((allowance[address(arg1)][address(msg.sender)] - arg3), arg1, msg.sender);
    return 1
}

function sub_e6e7114b(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor12)
        staticcall stor12.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
        staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if 0 / ext_call.return_data[0]:
                if 10^6 * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            revert with 0, 'SafeMath: division by zero'
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not 0 / ext_call.return_data[0]:
            if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: division by zero'
            return (0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
        if 10^6 * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * 0 / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
            if 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        revert with 0, 'SafeMath: division by zero'
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
        if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
    if 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
        revert with 0, 'SafeMath: division by zero'
    return (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
}

function calcPoolValueInToken() payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return ext_call.return_data[0]
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ext_call.return_data[0]
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
}

function getPricePerFullShare() payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    return (0 / totalSupply)
                if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (10^6 * ext_call.return_data[0] / totalSupply)
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return (0 / totalSupply)
    if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero'
    return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / totalSupply)
}

function sub_11d1a392(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    return (0 / ext_call.return_data[0])
                if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return (10^6 * ext_call.return_data[0] / ext_call.return_data[0])
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    revert with 0, 'SafeMath: division by zero'
                return (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    revert with 0, 'SafeMath: division by zero'
                return (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (0 / ext_call.return_data[0])
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not ext_call.return_data[0]:
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
    if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
}

function deposit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    stor0++
    if not arg1:
        revert with 0, 'deposit must be greater than 0'
    require arg1 <= depositLimit
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0]
                        if (totalSupply * arg1 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0]
                        if (totalSupply * arg1 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0]), 0, msg.sender);
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function depositAll() payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    stor0++
    if not ext_call.return_data[0]:
        revert with 0, 'deposit must be greater than 0'
    require ext_call.return_data[0] <= depositLimit
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0]), 0, msg.sender);
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function withdraw(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    stor0++
    if not arg1:
        revert with 0, 'withdraw must be greater than 0'
    if arg1 > balanceOf[address(msg.sender)]:
        revert with 0, 'insufficient balance'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function withdrawAll() payable {
    stor0++
    if not balanceOf[address(msg.sender)]:
        revert with 0, 'withdraw must be greater than 0'
    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
        revert with 0, 'insufficient balance'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if ext_code.hash(stor7) == 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470:
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function sub_ae263a1d(?) payable {
    if msg.sender == keeperAddress:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor12)
        staticcall stor12.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
        staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
            staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17736 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17736] = 30
                                mem[_17736 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17894 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17894 + 68] = mem[idx + _17736 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17894 + 68] = mem[_17894 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17894 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18776 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18776] = 26
                                    mem[_18776 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19672 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19672] = 26
                                    mem[_19672 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19672 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24088 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24088] = 26
                                        mem[_24088 + 32] = 'SafeMath: division by zero'
                                        _24776 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24776] = 26
                                        mem[_24776 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24776 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27317 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27317]
                                        mem[_27317 + 32] = stor8
                                        require 1 < mem[_27317]
                                        mem[_27317 + 64] = stor7
                                        mem[_27317 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27317 + 100] = ext_call.return_data[0]
                                        mem[_27317 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27317 + 196] = this.address
                                        mem[_27317 + 228] = block.timestamp + 120
                                        mem[_27317 + 164] = 160
                                        mem[_27317 + 260] = mem[_27317]
                                        s = 0
                                        while s < 32 * mem[_27317]:
                                            mem[s + _27317 + 292] = mem[s + _27317 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27317 + 260 len (32 * mem[_27317]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24248 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24248] = 26
                                            mem[_24248 + 32] = 'SafeMath: division by zero'
                                            _24840 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24840] = 26
                                            mem[_24840 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24840 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28259 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28259]
                                            mem[_28259 + 32] = stor8
                                            require 1 < mem[_28259]
                                            mem[_28259 + 64] = stor7
                                            mem[_28259 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28259 + 100] = ext_call.return_data[0]
                                            mem[_28259 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28259 + 196] = this.address
                                            mem[_28259 + 228] = block.timestamp + 120
                                            mem[_28259 + 164] = 160
                                            mem[_28259 + 260] = mem[_28259]
                                            s = 0
                                            while s < 32 * mem[_28259]:
                                                mem[s + _28259 + 292] = mem[s + _28259 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28259 + 260 len (32 * mem[_28259]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24456 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24456] = 26
                                            mem[_24456 + 32] = 'SafeMath: division by zero'
                                            _24997 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24997] = 26
                                            mem[_24997 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24997 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29283 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29283]
                                            mem[_29283 + 32] = stor8
                                            require 1 < mem[_29283]
                                            mem[_29283 + 64] = stor7
                                            mem[_29283 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29283 + 100] = ext_call.return_data[0]
                                            mem[_29283 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29283 + 196] = this.address
                                            mem[_29283 + 228] = block.timestamp + 120
                                            mem[_29283 + 164] = 160
                                            mem[_29283 + 260] = mem[_29283]
                                            s = 0
                                            while s < 32 * mem[_29283]:
                                                mem[s + _29283 + 292] = mem[s + _29283 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29283 + 260 len (32 * mem[_29283]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18824 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18824] = 26
                                    mem[_18824 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19784 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19784] = 26
                                        mem[_19784 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19784 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24247 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24247] = 26
                                            mem[_24247 + 32] = 'SafeMath: division by zero'
                                            _24839 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24839] = 26
                                            mem[_24839 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24839 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28253 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28253]
                                            mem[_28253 + 32] = stor8
                                            require 1 < mem[_28253]
                                            mem[_28253 + 64] = stor7
                                            mem[_28253 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28253 + 100] = ext_call.return_data[0]
                                            mem[_28253 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28253 + 196] = this.address
                                            mem[_28253 + 228] = block.timestamp + 120
                                            mem[_28253 + 164] = 160
                                            mem[_28253 + 260] = mem[_28253]
                                            s = 0
                                            while s < 32 * mem[_28253]:
                                                mem[s + _28253 + 292] = mem[s + _28253 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28253 + 260 len (32 * mem[_28253]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24455 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24455] = 26
                                            mem[_24455 + 32] = 'SafeMath: division by zero'
                                            _24996 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24996] = 26
                                            mem[_24996 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24996 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29277 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29277]
                                            mem[_29277 + 32] = stor8
                                            require 1 < mem[_29277]
                                            mem[_29277 + 64] = stor7
                                            mem[_29277 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29277 + 100] = ext_call.return_data[0]
                                            mem[_29277 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29277 + 196] = this.address
                                            mem[_29277 + 228] = block.timestamp + 120
                                            mem[_29277 + 164] = 160
                                            mem[_29277 + 260] = mem[_29277]
                                            s = 0
                                            while s < 32 * mem[_29277]:
                                                mem[s + _29277 + 292] = mem[s + _29277 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29277 + 260 len (32 * mem[_29277]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24648 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24648] = 26
                                        mem[_24648 + 32] = 'SafeMath: division by zero'
                                        _25329 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25329] = 26
                                        mem[_25329 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25329 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30241 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30241]
                                        mem[_30241 + 32] = stor8
                                        require 1 < mem[_30241]
                                        mem[_30241 + 64] = stor7
                                        mem[_30241 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30241 + 100] = ext_call.return_data[0]
                                        mem[_30241 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30241 + 196] = this.address
                                        mem[_30241 + 228] = block.timestamp + 120
                                        mem[_30241 + 164] = 160
                                        mem[_30241 + 260] = mem[_30241]
                                        s = 0
                                        while s < 32 * mem[_30241]:
                                            mem[s + _30241 + 292] = mem[s + _30241 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30241 + 260 len (32 * mem[_30241]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30241]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19877 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19877] = 26
                                    mem[_19877 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19877 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24454 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24454] = 26
                                        mem[_24454 + 32] = 'SafeMath: division by zero'
                                        _24995 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24995] = 26
                                        mem[_24995 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24995 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29271 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29271]
                                        mem[_29271 + 32] = stor8
                                        require 1 < mem[_29271]
                                        mem[_29271 + 64] = stor7
                                        mem[_29271 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29271 + 100] = ext_call.return_data[0]
                                        mem[_29271 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29271 + 196] = this.address
                                        mem[_29271 + 228] = block.timestamp + 120
                                        mem[_29271 + 164] = 160
                                        mem[_29271 + 260] = mem[_29271]
                                        s = 0
                                        while s < 32 * mem[_29271]:
                                            mem[s + _29271 + 292] = mem[s + _29271 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29271 + 260 len (32 * mem[_29271]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24647 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24647] = 26
                                            mem[_24647 + 32] = 'SafeMath: division by zero'
                                            _25328 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25328] = 26
                                            mem[_25328 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25328 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30235 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30235]
                                            mem[_30235 + 32] = stor8
                                            require 1 < mem[_30235]
                                            mem[_30235 + 64] = stor7
                                            mem[_30235 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30235 + 100] = ext_call.return_data[0]
                                            mem[_30235 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30235 + 196] = this.address
                                            mem[_30235 + 228] = block.timestamp + 120
                                            mem[_30235 + 164] = 160
                                            mem[_30235 + 260] = mem[_30235]
                                            s = 0
                                            while s < 32 * mem[_30235]:
                                                mem[s + _30235 + 292] = mem[s + _30235 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30235 + 260 len (32 * mem[_30235]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30235]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24728 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24728] = 26
                                        mem[_24728 + 32] = 'SafeMath: division by zero'
                                        _25835 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25835] = 26
                                        mem[_25835 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25835 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30881 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30881]
                                        mem[_30881 + 32] = stor8
                                        require 1 < mem[_30881]
                                        mem[_30881 + 64] = stor7
                                        mem[_30881 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30881 + 100] = ext_call.return_data[0]
                                        mem[_30881 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30881 + 196] = this.address
                                        mem[_30881 + 228] = block.timestamp + 120
                                        mem[_30881 + 164] = 160
                                        mem[_30881 + 260] = mem[_30881]
                                        s = 0
                                        while s < 32 * mem[_30881]:
                                            mem[s + _30881 + 292] = mem[s + _30881 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30881 + 260 len (32 * mem[_30881]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17734 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17734] = 30
                                mem[_17734 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17888 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17888 + 68] = mem[idx + _17734 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17888 + 68] = mem[_17888 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17888 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18775 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18775] = 26
                                    mem[_18775 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19669 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19669] = 26
                                    mem[_19669 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19669 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24085 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24085] = 26
                                        mem[_24085 + 32] = 'SafeMath: division by zero'
                                        _24775 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24775] = 26
                                        mem[_24775 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24775 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27298 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27298]
                                        mem[_27298 + 32] = stor8
                                        require 1 < mem[_27298]
                                        mem[_27298 + 64] = stor7
                                        mem[_27298 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27298 + 100] = ext_call.return_data[0]
                                        mem[_27298 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27298 + 196] = this.address
                                        mem[_27298 + 228] = block.timestamp + 120
                                        mem[_27298 + 164] = 160
                                        mem[_27298 + 260] = mem[_27298]
                                        s = 0
                                        while s < 32 * mem[_27298]:
                                            mem[s + _27298 + 292] = mem[s + _27298 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27298 + 260 len (32 * mem[_27298]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24244 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24244] = 26
                                            mem[_24244 + 32] = 'SafeMath: division by zero'
                                            _24838 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24838] = 26
                                            mem[_24838 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24838 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28238 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28238]
                                            mem[_28238 + 32] = stor8
                                            require 1 < mem[_28238]
                                            mem[_28238 + 64] = stor7
                                            mem[_28238 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28238 + 100] = ext_call.return_data[0]
                                            mem[_28238 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28238 + 196] = this.address
                                            mem[_28238 + 228] = block.timestamp + 120
                                            mem[_28238 + 164] = 160
                                            mem[_28238 + 260] = mem[_28238]
                                            s = 0
                                            while s < 32 * mem[_28238]:
                                                mem[s + _28238 + 292] = mem[s + _28238 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28238 + 260 len (32 * mem[_28238]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24451 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24451] = 26
                                            mem[_24451 + 32] = 'SafeMath: division by zero'
                                            _24991 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24991] = 26
                                            mem[_24991 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24991 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29261 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29261]
                                            mem[_29261 + 32] = stor8
                                            require 1 < mem[_29261]
                                            mem[_29261 + 64] = stor7
                                            mem[_29261 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29261 + 100] = ext_call.return_data[0]
                                            mem[_29261 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29261 + 196] = this.address
                                            mem[_29261 + 228] = block.timestamp + 120
                                            mem[_29261 + 164] = 160
                                            mem[_29261 + 260] = mem[_29261]
                                            s = 0
                                            while s < 32 * mem[_29261]:
                                                mem[s + _29261 + 292] = mem[s + _29261 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29261 + 260 len (32 * mem[_29261]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18823 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18823] = 26
                                    mem[_18823 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19783 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19783] = 26
                                        mem[_19783 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19783 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24243 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24243] = 26
                                            mem[_24243 + 32] = 'SafeMath: division by zero'
                                            _24837 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24837] = 26
                                            mem[_24837 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24837 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28232 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28232]
                                            mem[_28232 + 32] = stor8
                                            require 1 < mem[_28232]
                                            mem[_28232 + 64] = stor7
                                            mem[_28232 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28232 + 100] = ext_call.return_data[0]
                                            mem[_28232 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28232 + 196] = this.address
                                            mem[_28232 + 228] = block.timestamp + 120
                                            mem[_28232 + 164] = 160
                                            mem[_28232 + 260] = mem[_28232]
                                            s = 0
                                            while s < 32 * mem[_28232]:
                                                mem[s + _28232 + 292] = mem[s + _28232 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28232 + 260 len (32 * mem[_28232]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24450 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24450] = 26
                                            mem[_24450 + 32] = 'SafeMath: division by zero'
                                            _24990 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24990] = 26
                                            mem[_24990 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24990 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29255 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29255]
                                            mem[_29255 + 32] = stor8
                                            require 1 < mem[_29255]
                                            mem[_29255 + 64] = stor7
                                            mem[_29255 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29255 + 100] = ext_call.return_data[0]
                                            mem[_29255 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29255 + 196] = this.address
                                            mem[_29255 + 228] = block.timestamp + 120
                                            mem[_29255 + 164] = 160
                                            mem[_29255 + 260] = mem[_29255]
                                            s = 0
                                            while s < 32 * mem[_29255]:
                                                mem[s + _29255 + 292] = mem[s + _29255 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29255 + 260 len (32 * mem[_29255]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24646 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24646] = 26
                                        mem[_24646 + 32] = 'SafeMath: division by zero'
                                        _25320 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25320] = 26
                                        mem[_25320 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25320 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30225 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30225]
                                        mem[_30225 + 32] = stor8
                                        require 1 < mem[_30225]
                                        mem[_30225 + 64] = stor7
                                        mem[_30225 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30225 + 100] = ext_call.return_data[0]
                                        mem[_30225 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30225 + 196] = this.address
                                        mem[_30225 + 228] = block.timestamp + 120
                                        mem[_30225 + 164] = 160
                                        mem[_30225 + 260] = mem[_30225]
                                        s = 0
                                        while s < 32 * mem[_30225]:
                                            mem[s + _30225 + 292] = mem[s + _30225 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30225 + 260 len (32 * mem[_30225]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30225]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19873 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19873] = 26
                                    mem[_19873 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19873 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24449 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24449] = 26
                                        mem[_24449 + 32] = 'SafeMath: division by zero'
                                        _24989 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24989] = 26
                                        mem[_24989 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24989 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29249 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29249]
                                        mem[_29249 + 32] = stor8
                                        require 1 < mem[_29249]
                                        mem[_29249 + 64] = stor7
                                        mem[_29249 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29249 + 100] = ext_call.return_data[0]
                                        mem[_29249 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29249 + 196] = this.address
                                        mem[_29249 + 228] = block.timestamp + 120
                                        mem[_29249 + 164] = 160
                                        mem[_29249 + 260] = mem[_29249]
                                        s = 0
                                        while s < 32 * mem[_29249]:
                                            mem[s + _29249 + 292] = mem[s + _29249 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29249 + 260 len (32 * mem[_29249]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24645 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24645] = 26
                                            mem[_24645 + 32] = 'SafeMath: division by zero'
                                            _25319 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25319] = 26
                                            mem[_25319 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25319 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30219 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30219]
                                            mem[_30219 + 32] = stor8
                                            require 1 < mem[_30219]
                                            mem[_30219 + 64] = stor7
                                            mem[_30219 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30219 + 100] = ext_call.return_data[0]
                                            mem[_30219 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30219 + 196] = this.address
                                            mem[_30219 + 228] = block.timestamp + 120
                                            mem[_30219 + 164] = 160
                                            mem[_30219 + 260] = mem[_30219]
                                            s = 0
                                            while s < 32 * mem[_30219]:
                                                mem[s + _30219 + 292] = mem[s + _30219 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30219 + 260 len (32 * mem[_30219]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30219]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24727 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24727] = 26
                                        mem[_24727 + 32] = 'SafeMath: division by zero'
                                        _25821 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25821] = 26
                                        mem[_25821 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25821 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30873 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30873]
                                        mem[_30873 + 32] = stor8
                                        require 1 < mem[_30873]
                                        mem[_30873 + 64] = stor7
                                        mem[_30873 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30873 + 100] = ext_call.return_data[0]
                                        mem[_30873 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30873 + 196] = this.address
                                        mem[_30873 + 228] = block.timestamp + 120
                                        mem[_30873 + 164] = 160
                                        mem[_30873 + 260] = mem[_30873]
                                        s = 0
                                        while s < 32 * mem[_30873]:
                                            mem[s + _30873 + 292] = mem[s + _30873 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30873 + 260 len (32 * mem[_30873]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17732 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17732] = 30
                                mem[_17732 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17882 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17882 + 68] = mem[idx + _17732 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17882 + 68] = mem[_17882 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17882 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18774 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18774] = 26
                                    mem[_18774 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19666 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19666] = 26
                                    mem[_19666 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19666 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24082 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24082] = 26
                                        mem[_24082 + 32] = 'SafeMath: division by zero'
                                        _24774 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24774] = 26
                                        mem[_24774 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24774 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27279 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27279]
                                        mem[_27279 + 32] = stor8
                                        require 1 < mem[_27279]
                                        mem[_27279 + 64] = stor7
                                        mem[_27279 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27279 + 100] = ext_call.return_data[0]
                                        mem[_27279 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27279 + 196] = this.address
                                        mem[_27279 + 228] = block.timestamp + 120
                                        mem[_27279 + 164] = 160
                                        mem[_27279 + 260] = mem[_27279]
                                        s = 0
                                        while s < 32 * mem[_27279]:
                                            mem[s + _27279 + 292] = mem[s + _27279 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27279 + 260 len (32 * mem[_27279]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24240 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24240] = 26
                                            mem[_24240 + 32] = 'SafeMath: division by zero'
                                            _24836 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24836] = 26
                                            mem[_24836 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24836 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28217 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28217]
                                            mem[_28217 + 32] = stor8
                                            require 1 < mem[_28217]
                                            mem[_28217 + 64] = stor7
                                            mem[_28217 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28217 + 100] = ext_call.return_data[0]
                                            mem[_28217 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28217 + 196] = this.address
                                            mem[_28217 + 228] = block.timestamp + 120
                                            mem[_28217 + 164] = 160
                                            mem[_28217 + 260] = mem[_28217]
                                            s = 0
                                            while s < 32 * mem[_28217]:
                                                mem[s + _28217 + 292] = mem[s + _28217 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28217 + 260 len (32 * mem[_28217]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24446 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24446] = 26
                                            mem[_24446 + 32] = 'SafeMath: division by zero'
                                            _24985 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24985] = 26
                                            mem[_24985 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24985 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29239 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29239]
                                            mem[_29239 + 32] = stor8
                                            require 1 < mem[_29239]
                                            mem[_29239 + 64] = stor7
                                            mem[_29239 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29239 + 100] = ext_call.return_data[0]
                                            mem[_29239 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29239 + 196] = this.address
                                            mem[_29239 + 228] = block.timestamp + 120
                                            mem[_29239 + 164] = 160
                                            mem[_29239 + 260] = mem[_29239]
                                            s = 0
                                            while s < 32 * mem[_29239]:
                                                mem[s + _29239 + 292] = mem[s + _29239 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29239 + 260 len (32 * mem[_29239]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18822 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18822] = 26
                                    mem[_18822 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19782 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19782] = 26
                                        mem[_19782 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19782 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24239 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24239] = 26
                                            mem[_24239 + 32] = 'SafeMath: division by zero'
                                            _24835 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24835] = 26
                                            mem[_24835 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24835 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28211 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28211]
                                            mem[_28211 + 32] = stor8
                                            require 1 < mem[_28211]
                                            mem[_28211 + 64] = stor7
                                            mem[_28211 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28211 + 100] = ext_call.return_data[0]
                                            mem[_28211 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28211 + 196] = this.address
                                            mem[_28211 + 228] = block.timestamp + 120
                                            mem[_28211 + 164] = 160
                                            mem[_28211 + 260] = mem[_28211]
                                            s = 0
                                            while s < 32 * mem[_28211]:
                                                mem[s + _28211 + 292] = mem[s + _28211 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28211 + 260 len (32 * mem[_28211]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24445 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24445] = 26
                                            mem[_24445 + 32] = 'SafeMath: division by zero'
                                            _24984 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24984] = 26
                                            mem[_24984 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24984 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29233 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29233]
                                            mem[_29233 + 32] = stor8
                                            require 1 < mem[_29233]
                                            mem[_29233 + 64] = stor7
                                            mem[_29233 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29233 + 100] = ext_call.return_data[0]
                                            mem[_29233 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29233 + 196] = this.address
                                            mem[_29233 + 228] = block.timestamp + 120
                                            mem[_29233 + 164] = 160
                                            mem[_29233 + 260] = mem[_29233]
                                            s = 0
                                            while s < 32 * mem[_29233]:
                                                mem[s + _29233 + 292] = mem[s + _29233 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29233 + 260 len (32 * mem[_29233]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24644 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24644] = 26
                                        mem[_24644 + 32] = 'SafeMath: division by zero'
                                        _25311 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25311] = 26
                                        mem[_25311 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25311 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30209 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30209]
                                        mem[_30209 + 32] = stor8
                                        require 1 < mem[_30209]
                                        mem[_30209 + 64] = stor7
                                        mem[_30209 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30209 + 100] = ext_call.return_data[0]
                                        mem[_30209 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30209 + 196] = this.address
                                        mem[_30209 + 228] = block.timestamp + 120
                                        mem[_30209 + 164] = 160
                                        mem[_30209 + 260] = mem[_30209]
                                        s = 0
                                        while s < 32 * mem[_30209]:
                                            mem[s + _30209 + 292] = mem[s + _30209 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30209 + 260 len (32 * mem[_30209]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30209]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19869 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19869] = 26
                                    mem[_19869 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19869 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24444 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24444] = 26
                                        mem[_24444 + 32] = 'SafeMath: division by zero'
                                        _24983 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24983] = 26
                                        mem[_24983 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24983 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29227 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29227]
                                        mem[_29227 + 32] = stor8
                                        require 1 < mem[_29227]
                                        mem[_29227 + 64] = stor7
                                        mem[_29227 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29227 + 100] = ext_call.return_data[0]
                                        mem[_29227 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29227 + 196] = this.address
                                        mem[_29227 + 228] = block.timestamp + 120
                                        mem[_29227 + 164] = 160
                                        mem[_29227 + 260] = mem[_29227]
                                        s = 0
                                        while s < 32 * mem[_29227]:
                                            mem[s + _29227 + 292] = mem[s + _29227 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29227 + 260 len (32 * mem[_29227]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24643 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24643] = 26
                                            mem[_24643 + 32] = 'SafeMath: division by zero'
                                            _25310 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25310] = 26
                                            mem[_25310 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25310 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30203 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30203]
                                            mem[_30203 + 32] = stor8
                                            require 1 < mem[_30203]
                                            mem[_30203 + 64] = stor7
                                            mem[_30203 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30203 + 100] = ext_call.return_data[0]
                                            mem[_30203 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30203 + 196] = this.address
                                            mem[_30203 + 228] = block.timestamp + 120
                                            mem[_30203 + 164] = 160
                                            mem[_30203 + 260] = mem[_30203]
                                            s = 0
                                            while s < 32 * mem[_30203]:
                                                mem[s + _30203 + 292] = mem[s + _30203 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30203 + 260 len (32 * mem[_30203]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30203]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24726 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24726] = 26
                                        mem[_24726 + 32] = 'SafeMath: division by zero'
                                        _25807 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25807] = 26
                                        mem[_25807 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25807 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30865 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30865]
                                        mem[_30865 + 32] = stor8
                                        require 1 < mem[_30865]
                                        mem[_30865 + 64] = stor7
                                        mem[_30865 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30865 + 100] = ext_call.return_data[0]
                                        mem[_30865 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30865 + 196] = this.address
                                        mem[_30865 + 228] = block.timestamp + 120
                                        mem[_30865 + 164] = 160
                                        mem[_30865 + 260] = mem[_30865]
                                        s = 0
                                        while s < 32 * mem[_30865]:
                                            mem[s + _30865 + 292] = mem[s + _30865 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30865 + 260 len (32 * mem[_30865]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17730 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17730] = 30
                                mem[_17730 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17876 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17876 + 68] = mem[idx + _17730 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17876 + 68] = mem[_17876 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17876 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18773 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18773] = 26
                                    mem[_18773 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19663 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19663] = 26
                                    mem[_19663 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19663 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24079 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24079] = 26
                                        mem[_24079 + 32] = 'SafeMath: division by zero'
                                        _24773 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24773] = 26
                                        mem[_24773 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24773 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27260 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27260]
                                        mem[_27260 + 32] = stor8
                                        require 1 < mem[_27260]
                                        mem[_27260 + 64] = stor7
                                        mem[_27260 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27260 + 100] = ext_call.return_data[0]
                                        mem[_27260 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27260 + 196] = this.address
                                        mem[_27260 + 228] = block.timestamp + 120
                                        mem[_27260 + 164] = 160
                                        mem[_27260 + 260] = mem[_27260]
                                        s = 0
                                        while s < 32 * mem[_27260]:
                                            mem[s + _27260 + 292] = mem[s + _27260 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27260 + 260 len (32 * mem[_27260]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24236 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24236] = 26
                                            mem[_24236 + 32] = 'SafeMath: division by zero'
                                            _24834 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24834] = 26
                                            mem[_24834 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24834 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28196 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28196]
                                            mem[_28196 + 32] = stor8
                                            require 1 < mem[_28196]
                                            mem[_28196 + 64] = stor7
                                            mem[_28196 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28196 + 100] = ext_call.return_data[0]
                                            mem[_28196 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28196 + 196] = this.address
                                            mem[_28196 + 228] = block.timestamp + 120
                                            mem[_28196 + 164] = 160
                                            mem[_28196 + 260] = mem[_28196]
                                            s = 0
                                            while s < 32 * mem[_28196]:
                                                mem[s + _28196 + 292] = mem[s + _28196 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28196 + 260 len (32 * mem[_28196]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24441 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24441] = 26
                                            mem[_24441 + 32] = 'SafeMath: division by zero'
                                            _24979 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24979] = 26
                                            mem[_24979 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24979 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29217 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29217]
                                            mem[_29217 + 32] = stor8
                                            require 1 < mem[_29217]
                                            mem[_29217 + 64] = stor7
                                            mem[_29217 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29217 + 100] = ext_call.return_data[0]
                                            mem[_29217 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29217 + 196] = this.address
                                            mem[_29217 + 228] = block.timestamp + 120
                                            mem[_29217 + 164] = 160
                                            mem[_29217 + 260] = mem[_29217]
                                            s = 0
                                            while s < 32 * mem[_29217]:
                                                mem[s + _29217 + 292] = mem[s + _29217 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29217 + 260 len (32 * mem[_29217]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18821 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18821] = 26
                                    mem[_18821 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19781 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19781] = 26
                                        mem[_19781 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19781 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24235 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24235] = 26
                                            mem[_24235 + 32] = 'SafeMath: division by zero'
                                            _24833 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24833] = 26
                                            mem[_24833 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24833 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28190 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28190]
                                            mem[_28190 + 32] = stor8
                                            require 1 < mem[_28190]
                                            mem[_28190 + 64] = stor7
                                            mem[_28190 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28190 + 100] = ext_call.return_data[0]
                                            mem[_28190 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28190 + 196] = this.address
                                            mem[_28190 + 228] = block.timestamp + 120
                                            mem[_28190 + 164] = 160
                                            mem[_28190 + 260] = mem[_28190]
                                            s = 0
                                            while s < 32 * mem[_28190]:
                                                mem[s + _28190 + 292] = mem[s + _28190 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28190 + 260 len (32 * mem[_28190]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24440 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24440] = 26
                                            mem[_24440 + 32] = 'SafeMath: division by zero'
                                            _24978 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24978] = 26
                                            mem[_24978 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24978 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29211 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29211]
                                            mem[_29211 + 32] = stor8
                                            require 1 < mem[_29211]
                                            mem[_29211 + 64] = stor7
                                            mem[_29211 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29211 + 100] = ext_call.return_data[0]
                                            mem[_29211 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29211 + 196] = this.address
                                            mem[_29211 + 228] = block.timestamp + 120
                                            mem[_29211 + 164] = 160
                                            mem[_29211 + 260] = mem[_29211]
                                            s = 0
                                            while s < 32 * mem[_29211]:
                                                mem[s + _29211 + 292] = mem[s + _29211 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29211 + 260 len (32 * mem[_29211]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24642 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24642] = 26
                                        mem[_24642 + 32] = 'SafeMath: division by zero'
                                        _25302 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25302] = 26
                                        mem[_25302 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25302 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30193 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30193]
                                        mem[_30193 + 32] = stor8
                                        require 1 < mem[_30193]
                                        mem[_30193 + 64] = stor7
                                        mem[_30193 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30193 + 100] = ext_call.return_data[0]
                                        mem[_30193 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30193 + 196] = this.address
                                        mem[_30193 + 228] = block.timestamp + 120
                                        mem[_30193 + 164] = 160
                                        mem[_30193 + 260] = mem[_30193]
                                        s = 0
                                        while s < 32 * mem[_30193]:
                                            mem[s + _30193 + 292] = mem[s + _30193 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30193 + 260 len (32 * mem[_30193]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30193]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19865] = 26
                                    mem[_19865 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19865 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24439 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24439] = 26
                                        mem[_24439 + 32] = 'SafeMath: division by zero'
                                        _24977 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24977] = 26
                                        mem[_24977 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24977 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29205 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29205]
                                        mem[_29205 + 32] = stor8
                                        require 1 < mem[_29205]
                                        mem[_29205 + 64] = stor7
                                        mem[_29205 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29205 + 100] = ext_call.return_data[0]
                                        mem[_29205 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29205 + 196] = this.address
                                        mem[_29205 + 228] = block.timestamp + 120
                                        mem[_29205 + 164] = 160
                                        mem[_29205 + 260] = mem[_29205]
                                        s = 0
                                        while s < 32 * mem[_29205]:
                                            mem[s + _29205 + 292] = mem[s + _29205 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29205 + 260 len (32 * mem[_29205]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24641 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24641] = 26
                                            mem[_24641 + 32] = 'SafeMath: division by zero'
                                            _25301 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25301] = 26
                                            mem[_25301 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25301 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30187 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30187]
                                            mem[_30187 + 32] = stor8
                                            require 1 < mem[_30187]
                                            mem[_30187 + 64] = stor7
                                            mem[_30187 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30187 + 100] = ext_call.return_data[0]
                                            mem[_30187 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30187 + 196] = this.address
                                            mem[_30187 + 228] = block.timestamp + 120
                                            mem[_30187 + 164] = 160
                                            mem[_30187 + 260] = mem[_30187]
                                            s = 0
                                            while s < 32 * mem[_30187]:
                                                mem[s + _30187 + 292] = mem[s + _30187 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30187 + 260 len (32 * mem[_30187]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30187]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24725 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24725] = 26
                                        mem[_24725 + 32] = 'SafeMath: division by zero'
                                        _25793 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25793] = 26
                                        mem[_25793 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25793 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30857 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30857]
                                        mem[_30857 + 32] = stor8
                                        require 1 < mem[_30857]
                                        mem[_30857 + 64] = stor7
                                        mem[_30857 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30857 + 100] = ext_call.return_data[0]
                                        mem[_30857 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30857 + 196] = this.address
                                        mem[_30857 + 228] = block.timestamp + 120
                                        mem[_30857 + 164] = 160
                                        mem[_30857 + 260] = mem[_30857]
                                        s = 0
                                        while s < 32 * mem[_30857]:
                                            mem[s + _30857 + 292] = mem[s + _30857 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30857 + 260 len (32 * mem[_30857]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17728 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17728] = 30
                                mem[_17728 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17870 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17870 + 68] = mem[idx + _17728 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17870 + 68] = mem[_17870 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17870 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18772 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18772] = 26
                                    mem[_18772 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19660 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19660] = 26
                                    mem[_19660 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19660 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24076 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24076] = 26
                                        mem[_24076 + 32] = 'SafeMath: division by zero'
                                        _24772 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24772] = 26
                                        mem[_24772 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24772 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27241 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27241]
                                        mem[_27241 + 32] = stor8
                                        require 1 < mem[_27241]
                                        mem[_27241 + 64] = stor7
                                        mem[_27241 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27241 + 100] = ext_call.return_data[0]
                                        mem[_27241 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27241 + 196] = this.address
                                        mem[_27241 + 228] = block.timestamp + 120
                                        mem[_27241 + 164] = 160
                                        mem[_27241 + 260] = mem[_27241]
                                        s = 0
                                        while s < 32 * mem[_27241]:
                                            mem[s + _27241 + 292] = mem[s + _27241 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27241 + 260 len (32 * mem[_27241]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24232 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24232] = 26
                                            mem[_24232 + 32] = 'SafeMath: division by zero'
                                            _24832 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24832] = 26
                                            mem[_24832 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24832 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28175 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28175]
                                            mem[_28175 + 32] = stor8
                                            require 1 < mem[_28175]
                                            mem[_28175 + 64] = stor7
                                            mem[_28175 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28175 + 100] = ext_call.return_data[0]
                                            mem[_28175 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28175 + 196] = this.address
                                            mem[_28175 + 228] = block.timestamp + 120
                                            mem[_28175 + 164] = 160
                                            mem[_28175 + 260] = mem[_28175]
                                            s = 0
                                            while s < 32 * mem[_28175]:
                                                mem[s + _28175 + 292] = mem[s + _28175 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28175 + 260 len (32 * mem[_28175]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24436 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24436] = 26
                                            mem[_24436 + 32] = 'SafeMath: division by zero'
                                            _24973 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24973] = 26
                                            mem[_24973 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24973 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29195 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29195]
                                            mem[_29195 + 32] = stor8
                                            require 1 < mem[_29195]
                                            mem[_29195 + 64] = stor7
                                            mem[_29195 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29195 + 100] = ext_call.return_data[0]
                                            mem[_29195 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29195 + 196] = this.address
                                            mem[_29195 + 228] = block.timestamp + 120
                                            mem[_29195 + 164] = 160
                                            mem[_29195 + 260] = mem[_29195]
                                            s = 0
                                            while s < 32 * mem[_29195]:
                                                mem[s + _29195 + 292] = mem[s + _29195 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29195 + 260 len (32 * mem[_29195]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18820 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18820] = 26
                                    mem[_18820 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19780 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19780] = 26
                                        mem[_19780 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19780 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24231 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24231] = 26
                                            mem[_24231 + 32] = 'SafeMath: division by zero'
                                            _24831 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24831] = 26
                                            mem[_24831 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24831 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28169 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28169]
                                            mem[_28169 + 32] = stor8
                                            require 1 < mem[_28169]
                                            mem[_28169 + 64] = stor7
                                            mem[_28169 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28169 + 100] = ext_call.return_data[0]
                                            mem[_28169 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28169 + 196] = this.address
                                            mem[_28169 + 228] = block.timestamp + 120
                                            mem[_28169 + 164] = 160
                                            mem[_28169 + 260] = mem[_28169]
                                            s = 0
                                            while s < 32 * mem[_28169]:
                                                mem[s + _28169 + 292] = mem[s + _28169 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28169 + 260 len (32 * mem[_28169]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24435 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24435] = 26
                                            mem[_24435 + 32] = 'SafeMath: division by zero'
                                            _24972 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24972] = 26
                                            mem[_24972 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24972 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29189 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29189]
                                            mem[_29189 + 32] = stor8
                                            require 1 < mem[_29189]
                                            mem[_29189 + 64] = stor7
                                            mem[_29189 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29189 + 100] = ext_call.return_data[0]
                                            mem[_29189 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29189 + 196] = this.address
                                            mem[_29189 + 228] = block.timestamp + 120
                                            mem[_29189 + 164] = 160
                                            mem[_29189 + 260] = mem[_29189]
                                            s = 0
                                            while s < 32 * mem[_29189]:
                                                mem[s + _29189 + 292] = mem[s + _29189 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29189 + 260 len (32 * mem[_29189]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24640 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24640] = 26
                                        mem[_24640 + 32] = 'SafeMath: division by zero'
                                        _25293 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25293] = 26
                                        mem[_25293 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25293 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30177 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30177]
                                        mem[_30177 + 32] = stor8
                                        require 1 < mem[_30177]
                                        mem[_30177 + 64] = stor7
                                        mem[_30177 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30177 + 100] = ext_call.return_data[0]
                                        mem[_30177 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30177 + 196] = this.address
                                        mem[_30177 + 228] = block.timestamp + 120
                                        mem[_30177 + 164] = 160
                                        mem[_30177 + 260] = mem[_30177]
                                        s = 0
                                        while s < 32 * mem[_30177]:
                                            mem[s + _30177 + 292] = mem[s + _30177 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30177 + 260 len (32 * mem[_30177]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30177]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19861 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19861] = 26
                                    mem[_19861 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19861 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24434 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24434] = 26
                                        mem[_24434 + 32] = 'SafeMath: division by zero'
                                        _24971 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24971] = 26
                                        mem[_24971 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24971 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29183 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29183]
                                        mem[_29183 + 32] = stor8
                                        require 1 < mem[_29183]
                                        mem[_29183 + 64] = stor7
                                        mem[_29183 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29183 + 100] = ext_call.return_data[0]
                                        mem[_29183 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29183 + 196] = this.address
                                        mem[_29183 + 228] = block.timestamp + 120
                                        mem[_29183 + 164] = 160
                                        mem[_29183 + 260] = mem[_29183]
                                        s = 0
                                        while s < 32 * mem[_29183]:
                                            mem[s + _29183 + 292] = mem[s + _29183 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29183 + 260 len (32 * mem[_29183]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24639 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24639] = 26
                                            mem[_24639 + 32] = 'SafeMath: division by zero'
                                            _25292 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25292] = 26
                                            mem[_25292 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25292 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30171 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30171]
                                            mem[_30171 + 32] = stor8
                                            require 1 < mem[_30171]
                                            mem[_30171 + 64] = stor7
                                            mem[_30171 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30171 + 100] = ext_call.return_data[0]
                                            mem[_30171 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30171 + 196] = this.address
                                            mem[_30171 + 228] = block.timestamp + 120
                                            mem[_30171 + 164] = 160
                                            mem[_30171 + 260] = mem[_30171]
                                            s = 0
                                            while s < 32 * mem[_30171]:
                                                mem[s + _30171 + 292] = mem[s + _30171 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30171 + 260 len (32 * mem[_30171]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30171]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24724 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24724] = 26
                                        mem[_24724 + 32] = 'SafeMath: division by zero'
                                        _25779 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25779] = 26
                                        mem[_25779 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25779 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30849 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30849]
                                        mem[_30849 + 32] = stor8
                                        require 1 < mem[_30849]
                                        mem[_30849 + 64] = stor7
                                        mem[_30849 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30849 + 100] = ext_call.return_data[0]
                                        mem[_30849 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30849 + 196] = this.address
                                        mem[_30849 + 228] = block.timestamp + 120
                                        mem[_30849 + 164] = 160
                                        mem[_30849 + 260] = mem[_30849]
                                        s = 0
                                        while s < 32 * mem[_30849]:
                                            mem[s + _30849 + 292] = mem[s + _30849 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30849 + 260 len (32 * mem[_30849]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17726 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17726] = 30
                                mem[_17726 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17864 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17864 + 68] = mem[idx + _17726 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17864 + 68] = mem[_17864 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17864 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18771 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18771] = 26
                                    mem[_18771 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19657 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19657] = 26
                                    mem[_19657 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19657 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24073 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24073] = 26
                                        mem[_24073 + 32] = 'SafeMath: division by zero'
                                        _24771 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24771] = 26
                                        mem[_24771 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24771 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27222 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27222]
                                        mem[_27222 + 32] = stor8
                                        require 1 < mem[_27222]
                                        mem[_27222 + 64] = stor7
                                        mem[_27222 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27222 + 100] = ext_call.return_data[0]
                                        mem[_27222 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27222 + 196] = this.address
                                        mem[_27222 + 228] = block.timestamp + 120
                                        mem[_27222 + 164] = 160
                                        mem[_27222 + 260] = mem[_27222]
                                        s = 0
                                        while s < 32 * mem[_27222]:
                                            mem[s + _27222 + 292] = mem[s + _27222 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27222 + 260 len (32 * mem[_27222]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24228 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24228] = 26
                                            mem[_24228 + 32] = 'SafeMath: division by zero'
                                            _24830 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24830] = 26
                                            mem[_24830 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24830 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28154 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28154]
                                            mem[_28154 + 32] = stor8
                                            require 1 < mem[_28154]
                                            mem[_28154 + 64] = stor7
                                            mem[_28154 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28154 + 100] = ext_call.return_data[0]
                                            mem[_28154 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28154 + 196] = this.address
                                            mem[_28154 + 228] = block.timestamp + 120
                                            mem[_28154 + 164] = 160
                                            mem[_28154 + 260] = mem[_28154]
                                            s = 0
                                            while s < 32 * mem[_28154]:
                                                mem[s + _28154 + 292] = mem[s + _28154 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28154 + 260 len (32 * mem[_28154]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24431 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24431] = 26
                                            mem[_24431 + 32] = 'SafeMath: division by zero'
                                            _24967 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24967] = 26
                                            mem[_24967 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24967 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29173 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29173]
                                            mem[_29173 + 32] = stor8
                                            require 1 < mem[_29173]
                                            mem[_29173 + 64] = stor7
                                            mem[_29173 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29173 + 100] = ext_call.return_data[0]
                                            mem[_29173 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29173 + 196] = this.address
                                            mem[_29173 + 228] = block.timestamp + 120
                                            mem[_29173 + 164] = 160
                                            mem[_29173 + 260] = mem[_29173]
                                            s = 0
                                            while s < 32 * mem[_29173]:
                                                mem[s + _29173 + 292] = mem[s + _29173 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29173 + 260 len (32 * mem[_29173]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18819 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18819] = 26
                                    mem[_18819 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19779 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19779] = 26
                                        mem[_19779 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19779 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24227 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24227] = 26
                                            mem[_24227 + 32] = 'SafeMath: division by zero'
                                            _24829 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24829] = 26
                                            mem[_24829 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24829 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28148 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28148]
                                            mem[_28148 + 32] = stor8
                                            require 1 < mem[_28148]
                                            mem[_28148 + 64] = stor7
                                            mem[_28148 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28148 + 100] = ext_call.return_data[0]
                                            mem[_28148 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28148 + 196] = this.address
                                            mem[_28148 + 228] = block.timestamp + 120
                                            mem[_28148 + 164] = 160
                                            mem[_28148 + 260] = mem[_28148]
                                            s = 0
                                            while s < 32 * mem[_28148]:
                                                mem[s + _28148 + 292] = mem[s + _28148 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28148 + 260 len (32 * mem[_28148]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24430 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24430] = 26
                                            mem[_24430 + 32] = 'SafeMath: division by zero'
                                            _24966 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24966] = 26
                                            mem[_24966 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24966 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29167 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29167]
                                            mem[_29167 + 32] = stor8
                                            require 1 < mem[_29167]
                                            mem[_29167 + 64] = stor7
                                            mem[_29167 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29167 + 100] = ext_call.return_data[0]
                                            mem[_29167 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29167 + 196] = this.address
                                            mem[_29167 + 228] = block.timestamp + 120
                                            mem[_29167 + 164] = 160
                                            mem[_29167 + 260] = mem[_29167]
                                            s = 0
                                            while s < 32 * mem[_29167]:
                                                mem[s + _29167 + 292] = mem[s + _29167 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29167 + 260 len (32 * mem[_29167]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24638 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24638] = 26
                                        mem[_24638 + 32] = 'SafeMath: division by zero'
                                        _25284 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25284] = 26
                                        mem[_25284 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25284 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30161 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30161]
                                        mem[_30161 + 32] = stor8
                                        require 1 < mem[_30161]
                                        mem[_30161 + 64] = stor7
                                        mem[_30161 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30161 + 100] = ext_call.return_data[0]
                                        mem[_30161 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30161 + 196] = this.address
                                        mem[_30161 + 228] = block.timestamp + 120
                                        mem[_30161 + 164] = 160
                                        mem[_30161 + 260] = mem[_30161]
                                        s = 0
                                        while s < 32 * mem[_30161]:
                                            mem[s + _30161 + 292] = mem[s + _30161 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30161 + 260 len (32 * mem[_30161]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30161]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19857 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19857] = 26
                                    mem[_19857 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19857 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24429 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24429] = 26
                                        mem[_24429 + 32] = 'SafeMath: division by zero'
                                        _24965 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24965] = 26
                                        mem[_24965 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24965 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29161 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29161]
                                        mem[_29161 + 32] = stor8
                                        require 1 < mem[_29161]
                                        mem[_29161 + 64] = stor7
                                        mem[_29161 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29161 + 100] = ext_call.return_data[0]
                                        mem[_29161 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29161 + 196] = this.address
                                        mem[_29161 + 228] = block.timestamp + 120
                                        mem[_29161 + 164] = 160
                                        mem[_29161 + 260] = mem[_29161]
                                        s = 0
                                        while s < 32 * mem[_29161]:
                                            mem[s + _29161 + 292] = mem[s + _29161 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29161 + 260 len (32 * mem[_29161]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24637 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24637] = 26
                                            mem[_24637 + 32] = 'SafeMath: division by zero'
                                            _25283 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25283] = 26
                                            mem[_25283 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25283 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30155 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30155]
                                            mem[_30155 + 32] = stor8
                                            require 1 < mem[_30155]
                                            mem[_30155 + 64] = stor7
                                            mem[_30155 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30155 + 100] = ext_call.return_data[0]
                                            mem[_30155 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30155 + 196] = this.address
                                            mem[_30155 + 228] = block.timestamp + 120
                                            mem[_30155 + 164] = 160
                                            mem[_30155 + 260] = mem[_30155]
                                            s = 0
                                            while s < 32 * mem[_30155]:
                                                mem[s + _30155 + 292] = mem[s + _30155 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30155 + 260 len (32 * mem[_30155]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30155]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24723 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24723] = 26
                                        mem[_24723 + 32] = 'SafeMath: division by zero'
                                        _25765 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25765] = 26
                                        mem[_25765 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25765 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30841 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30841]
                                        mem[_30841 + 32] = stor8
                                        require 1 < mem[_30841]
                                        mem[_30841 + 64] = stor7
                                        mem[_30841 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30841 + 100] = ext_call.return_data[0]
                                        mem[_30841 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30841 + 196] = this.address
                                        mem[_30841 + 228] = block.timestamp + 120
                                        mem[_30841 + 164] = 160
                                        mem[_30841 + 260] = mem[_30841]
                                        s = 0
                                        while s < 32 * mem[_30841]:
                                            mem[s + _30841 + 292] = mem[s + _30841 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30841 + 260 len (32 * mem[_30841]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17724 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17724] = 30
                                mem[_17724 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17858 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17858 + 68] = mem[idx + _17724 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17858 + 68] = mem[_17858 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17858 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18770 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18770] = 26
                                    mem[_18770 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19654 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19654] = 26
                                    mem[_19654 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19654 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24070 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24070] = 26
                                        mem[_24070 + 32] = 'SafeMath: division by zero'
                                        _24770 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24770] = 26
                                        mem[_24770 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24770 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27203 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27203]
                                        mem[_27203 + 32] = stor8
                                        require 1 < mem[_27203]
                                        mem[_27203 + 64] = stor7
                                        mem[_27203 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27203 + 100] = ext_call.return_data[0]
                                        mem[_27203 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27203 + 196] = this.address
                                        mem[_27203 + 228] = block.timestamp + 120
                                        mem[_27203 + 164] = 160
                                        mem[_27203 + 260] = mem[_27203]
                                        s = 0
                                        while s < 32 * mem[_27203]:
                                            mem[s + _27203 + 292] = mem[s + _27203 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27203 + 260 len (32 * mem[_27203]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24224 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24224] = 26
                                            mem[_24224 + 32] = 'SafeMath: division by zero'
                                            _24828 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24828] = 26
                                            mem[_24828 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24828 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28133 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28133]
                                            mem[_28133 + 32] = stor8
                                            require 1 < mem[_28133]
                                            mem[_28133 + 64] = stor7
                                            mem[_28133 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28133 + 100] = ext_call.return_data[0]
                                            mem[_28133 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28133 + 196] = this.address
                                            mem[_28133 + 228] = block.timestamp + 120
                                            mem[_28133 + 164] = 160
                                            mem[_28133 + 260] = mem[_28133]
                                            s = 0
                                            while s < 32 * mem[_28133]:
                                                mem[s + _28133 + 292] = mem[s + _28133 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28133 + 260 len (32 * mem[_28133]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24426 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24426] = 26
                                            mem[_24426 + 32] = 'SafeMath: division by zero'
                                            _24961 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24961] = 26
                                            mem[_24961 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24961 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29151 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29151]
                                            mem[_29151 + 32] = stor8
                                            require 1 < mem[_29151]
                                            mem[_29151 + 64] = stor7
                                            mem[_29151 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29151 + 100] = ext_call.return_data[0]
                                            mem[_29151 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29151 + 196] = this.address
                                            mem[_29151 + 228] = block.timestamp + 120
                                            mem[_29151 + 164] = 160
                                            mem[_29151 + 260] = mem[_29151]
                                            s = 0
                                            while s < 32 * mem[_29151]:
                                                mem[s + _29151 + 292] = mem[s + _29151 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29151 + 260 len (32 * mem[_29151]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18818 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18818] = 26
                                    mem[_18818 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19778 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19778] = 26
                                        mem[_19778 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19778 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24223 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24223] = 26
                                            mem[_24223 + 32] = 'SafeMath: division by zero'
                                            _24827 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24827] = 26
                                            mem[_24827 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24827 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28127 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28127]
                                            mem[_28127 + 32] = stor8
                                            require 1 < mem[_28127]
                                            mem[_28127 + 64] = stor7
                                            mem[_28127 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28127 + 100] = ext_call.return_data[0]
                                            mem[_28127 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28127 + 196] = this.address
                                            mem[_28127 + 228] = block.timestamp + 120
                                            mem[_28127 + 164] = 160
                                            mem[_28127 + 260] = mem[_28127]
                                            s = 0
                                            while s < 32 * mem[_28127]:
                                                mem[s + _28127 + 292] = mem[s + _28127 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28127 + 260 len (32 * mem[_28127]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24425 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24425] = 26
                                            mem[_24425 + 32] = 'SafeMath: division by zero'
                                            _24960 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24960] = 26
                                            mem[_24960 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24960 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29145 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29145]
                                            mem[_29145 + 32] = stor8
                                            require 1 < mem[_29145]
                                            mem[_29145 + 64] = stor7
                                            mem[_29145 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29145 + 100] = ext_call.return_data[0]
                                            mem[_29145 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29145 + 196] = this.address
                                            mem[_29145 + 228] = block.timestamp + 120
                                            mem[_29145 + 164] = 160
                                            mem[_29145 + 260] = mem[_29145]
                                            s = 0
                                            while s < 32 * mem[_29145]:
                                                mem[s + _29145 + 292] = mem[s + _29145 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29145 + 260 len (32 * mem[_29145]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24636 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24636] = 26
                                        mem[_24636 + 32] = 'SafeMath: division by zero'
                                        _25275 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25275] = 26
                                        mem[_25275 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25275 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30145 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30145]
                                        mem[_30145 + 32] = stor8
                                        require 1 < mem[_30145]
                                        mem[_30145 + 64] = stor7
                                        mem[_30145 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30145 + 100] = ext_call.return_data[0]
                                        mem[_30145 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30145 + 196] = this.address
                                        mem[_30145 + 228] = block.timestamp + 120
                                        mem[_30145 + 164] = 160
                                        mem[_30145 + 260] = mem[_30145]
                                        s = 0
                                        while s < 32 * mem[_30145]:
                                            mem[s + _30145 + 292] = mem[s + _30145 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30145 + 260 len (32 * mem[_30145]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30145]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19853 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19853] = 26
                                    mem[_19853 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19853 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24424 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24424] = 26
                                        mem[_24424 + 32] = 'SafeMath: division by zero'
                                        _24959 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24959] = 26
                                        mem[_24959 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24959 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29139 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29139]
                                        mem[_29139 + 32] = stor8
                                        require 1 < mem[_29139]
                                        mem[_29139 + 64] = stor7
                                        mem[_29139 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29139 + 100] = ext_call.return_data[0]
                                        mem[_29139 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29139 + 196] = this.address
                                        mem[_29139 + 228] = block.timestamp + 120
                                        mem[_29139 + 164] = 160
                                        mem[_29139 + 260] = mem[_29139]
                                        s = 0
                                        while s < 32 * mem[_29139]:
                                            mem[s + _29139 + 292] = mem[s + _29139 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29139 + 260 len (32 * mem[_29139]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24635 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24635] = 26
                                            mem[_24635 + 32] = 'SafeMath: division by zero'
                                            _25274 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25274] = 26
                                            mem[_25274 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25274 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30139 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30139]
                                            mem[_30139 + 32] = stor8
                                            require 1 < mem[_30139]
                                            mem[_30139 + 64] = stor7
                                            mem[_30139 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30139 + 100] = ext_call.return_data[0]
                                            mem[_30139 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30139 + 196] = this.address
                                            mem[_30139 + 228] = block.timestamp + 120
                                            mem[_30139 + 164] = 160
                                            mem[_30139 + 260] = mem[_30139]
                                            s = 0
                                            while s < 32 * mem[_30139]:
                                                mem[s + _30139 + 292] = mem[s + _30139 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30139 + 260 len (32 * mem[_30139]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30139]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24722 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24722] = 26
                                        mem[_24722 + 32] = 'SafeMath: division by zero'
                                        _25751 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25751] = 26
                                        mem[_25751 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25751 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30833 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30833]
                                        mem[_30833 + 32] = stor8
                                        require 1 < mem[_30833]
                                        mem[_30833 + 64] = stor7
                                        mem[_30833 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30833 + 100] = ext_call.return_data[0]
                                        mem[_30833 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30833 + 196] = this.address
                                        mem[_30833 + 228] = block.timestamp + 120
                                        mem[_30833 + 164] = 160
                                        mem[_30833 + 260] = mem[_30833]
                                        s = 0
                                        while s < 32 * mem[_30833]:
                                            mem[s + _30833 + 292] = mem[s + _30833 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30833 + 260 len (32 * mem[_30833]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17722 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17722] = 30
                                mem[_17722 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17852 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17852 + 68] = mem[idx + _17722 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17852 + 68] = mem[_17852 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17852 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18769 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18769] = 26
                                    mem[_18769 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19651 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19651] = 26
                                    mem[_19651 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19651 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24067 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24067] = 26
                                        mem[_24067 + 32] = 'SafeMath: division by zero'
                                        _24769 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24769] = 26
                                        mem[_24769 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24769 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27184 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27184]
                                        mem[_27184 + 32] = stor8
                                        require 1 < mem[_27184]
                                        mem[_27184 + 64] = stor7
                                        mem[_27184 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27184 + 100] = ext_call.return_data[0]
                                        mem[_27184 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27184 + 196] = this.address
                                        mem[_27184 + 228] = block.timestamp + 120
                                        mem[_27184 + 164] = 160
                                        mem[_27184 + 260] = mem[_27184]
                                        s = 0
                                        while s < 32 * mem[_27184]:
                                            mem[s + _27184 + 292] = mem[s + _27184 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27184 + 260 len (32 * mem[_27184]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24220 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24220] = 26
                                            mem[_24220 + 32] = 'SafeMath: division by zero'
                                            _24826 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24826] = 26
                                            mem[_24826 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24826 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28112 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28112]
                                            mem[_28112 + 32] = stor8
                                            require 1 < mem[_28112]
                                            mem[_28112 + 64] = stor7
                                            mem[_28112 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28112 + 100] = ext_call.return_data[0]
                                            mem[_28112 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28112 + 196] = this.address
                                            mem[_28112 + 228] = block.timestamp + 120
                                            mem[_28112 + 164] = 160
                                            mem[_28112 + 260] = mem[_28112]
                                            s = 0
                                            while s < 32 * mem[_28112]:
                                                mem[s + _28112 + 292] = mem[s + _28112 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28112 + 260 len (32 * mem[_28112]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24421 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24421] = 26
                                            mem[_24421 + 32] = 'SafeMath: division by zero'
                                            _24955 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24955] = 26
                                            mem[_24955 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24955 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29129 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29129]
                                            mem[_29129 + 32] = stor8
                                            require 1 < mem[_29129]
                                            mem[_29129 + 64] = stor7
                                            mem[_29129 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29129 + 100] = ext_call.return_data[0]
                                            mem[_29129 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29129 + 196] = this.address
                                            mem[_29129 + 228] = block.timestamp + 120
                                            mem[_29129 + 164] = 160
                                            mem[_29129 + 260] = mem[_29129]
                                            s = 0
                                            while s < 32 * mem[_29129]:
                                                mem[s + _29129 + 292] = mem[s + _29129 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29129 + 260 len (32 * mem[_29129]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18817 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18817] = 26
                                    mem[_18817 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19777 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19777] = 26
                                        mem[_19777 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19777 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24219 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24219] = 26
                                            mem[_24219 + 32] = 'SafeMath: division by zero'
                                            _24825 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24825] = 26
                                            mem[_24825 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24825 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28106 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28106]
                                            mem[_28106 + 32] = stor8
                                            require 1 < mem[_28106]
                                            mem[_28106 + 64] = stor7
                                            mem[_28106 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28106 + 100] = ext_call.return_data[0]
                                            mem[_28106 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28106 + 196] = this.address
                                            mem[_28106 + 228] = block.timestamp + 120
                                            mem[_28106 + 164] = 160
                                            mem[_28106 + 260] = mem[_28106]
                                            s = 0
                                            while s < 32 * mem[_28106]:
                                                mem[s + _28106 + 292] = mem[s + _28106 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28106 + 260 len (32 * mem[_28106]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24420 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24420] = 26
                                            mem[_24420 + 32] = 'SafeMath: division by zero'
                                            _24954 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24954] = 26
                                            mem[_24954 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24954 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29123 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29123]
                                            mem[_29123 + 32] = stor8
                                            require 1 < mem[_29123]
                                            mem[_29123 + 64] = stor7
                                            mem[_29123 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29123 + 100] = ext_call.return_data[0]
                                            mem[_29123 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29123 + 196] = this.address
                                            mem[_29123 + 228] = block.timestamp + 120
                                            mem[_29123 + 164] = 160
                                            mem[_29123 + 260] = mem[_29123]
                                            s = 0
                                            while s < 32 * mem[_29123]:
                                                mem[s + _29123 + 292] = mem[s + _29123 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29123 + 260 len (32 * mem[_29123]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24634 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24634] = 26
                                        mem[_24634 + 32] = 'SafeMath: division by zero'
                                        _25266 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25266] = 26
                                        mem[_25266 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25266 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30129 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30129]
                                        mem[_30129 + 32] = stor8
                                        require 1 < mem[_30129]
                                        mem[_30129 + 64] = stor7
                                        mem[_30129 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30129 + 100] = ext_call.return_data[0]
                                        mem[_30129 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30129 + 196] = this.address
                                        mem[_30129 + 228] = block.timestamp + 120
                                        mem[_30129 + 164] = 160
                                        mem[_30129 + 260] = mem[_30129]
                                        s = 0
                                        while s < 32 * mem[_30129]:
                                            mem[s + _30129 + 292] = mem[s + _30129 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30129 + 260 len (32 * mem[_30129]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30129]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19849 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19849] = 26
                                    mem[_19849 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19849 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24419 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24419] = 26
                                        mem[_24419 + 32] = 'SafeMath: division by zero'
                                        _24953 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24953] = 26
                                        mem[_24953 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24953 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29117 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29117]
                                        mem[_29117 + 32] = stor8
                                        require 1 < mem[_29117]
                                        mem[_29117 + 64] = stor7
                                        mem[_29117 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29117 + 100] = ext_call.return_data[0]
                                        mem[_29117 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29117 + 196] = this.address
                                        mem[_29117 + 228] = block.timestamp + 120
                                        mem[_29117 + 164] = 160
                                        mem[_29117 + 260] = mem[_29117]
                                        s = 0
                                        while s < 32 * mem[_29117]:
                                            mem[s + _29117 + 292] = mem[s + _29117 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29117 + 260 len (32 * mem[_29117]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24633 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24633] = 26
                                            mem[_24633 + 32] = 'SafeMath: division by zero'
                                            _25265 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25265] = 26
                                            mem[_25265 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25265 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30123 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30123]
                                            mem[_30123 + 32] = stor8
                                            require 1 < mem[_30123]
                                            mem[_30123 + 64] = stor7
                                            mem[_30123 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30123 + 100] = ext_call.return_data[0]
                                            mem[_30123 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30123 + 196] = this.address
                                            mem[_30123 + 228] = block.timestamp + 120
                                            mem[_30123 + 164] = 160
                                            mem[_30123 + 260] = mem[_30123]
                                            s = 0
                                            while s < 32 * mem[_30123]:
                                                mem[s + _30123 + 292] = mem[s + _30123 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30123 + 260 len (32 * mem[_30123]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30123]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24721 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24721] = 26
                                        mem[_24721 + 32] = 'SafeMath: division by zero'
                                        _25737 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25737] = 26
                                        mem[_25737 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25737 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30825 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30825]
                                        mem[_30825 + 32] = stor8
                                        require 1 < mem[_30825]
                                        mem[_30825 + 64] = stor7
                                        mem[_30825 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30825 + 100] = ext_call.return_data[0]
                                        mem[_30825 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30825 + 196] = this.address
                                        mem[_30825 + 228] = block.timestamp + 120
                                        mem[_30825 + 164] = 160
                                        mem[_30825 + 260] = mem[_30825]
                                        s = 0
                                        while s < 32 * mem[_30825]:
                                            mem[s + _30825 + 292] = mem[s + _30825 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30825 + 260 len (32 * mem[_30825]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
            staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17720 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17720] = 30
                                mem[_17720 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17846 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17846 + 68] = mem[idx + _17720 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17846 + 68] = mem[_17846 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17846 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18768 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18768] = 26
                                    mem[_18768 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19648 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19648] = 26
                                    mem[_19648 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19648 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24064 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24064] = 26
                                        mem[_24064 + 32] = 'SafeMath: division by zero'
                                        _24768 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24768] = 26
                                        mem[_24768 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24768 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27165 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27165]
                                        mem[_27165 + 32] = stor8
                                        require 1 < mem[_27165]
                                        mem[_27165 + 64] = stor7
                                        mem[_27165 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27165 + 100] = ext_call.return_data[0]
                                        mem[_27165 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27165 + 196] = this.address
                                        mem[_27165 + 228] = block.timestamp + 120
                                        mem[_27165 + 164] = 160
                                        mem[_27165 + 260] = mem[_27165]
                                        s = 0
                                        while s < 32 * mem[_27165]:
                                            mem[s + _27165 + 292] = mem[s + _27165 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27165 + 260 len (32 * mem[_27165]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24216 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24216] = 26
                                            mem[_24216 + 32] = 'SafeMath: division by zero'
                                            _24824 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24824] = 26
                                            mem[_24824 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24824 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28091 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28091]
                                            mem[_28091 + 32] = stor8
                                            require 1 < mem[_28091]
                                            mem[_28091 + 64] = stor7
                                            mem[_28091 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28091 + 100] = ext_call.return_data[0]
                                            mem[_28091 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28091 + 196] = this.address
                                            mem[_28091 + 228] = block.timestamp + 120
                                            mem[_28091 + 164] = 160
                                            mem[_28091 + 260] = mem[_28091]
                                            s = 0
                                            while s < 32 * mem[_28091]:
                                                mem[s + _28091 + 292] = mem[s + _28091 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28091 + 260 len (32 * mem[_28091]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24416 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24416] = 26
                                            mem[_24416 + 32] = 'SafeMath: division by zero'
                                            _24949 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24949] = 26
                                            mem[_24949 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24949 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29107 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29107]
                                            mem[_29107 + 32] = stor8
                                            require 1 < mem[_29107]
                                            mem[_29107 + 64] = stor7
                                            mem[_29107 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29107 + 100] = ext_call.return_data[0]
                                            mem[_29107 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29107 + 196] = this.address
                                            mem[_29107 + 228] = block.timestamp + 120
                                            mem[_29107 + 164] = 160
                                            mem[_29107 + 260] = mem[_29107]
                                            s = 0
                                            while s < 32 * mem[_29107]:
                                                mem[s + _29107 + 292] = mem[s + _29107 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29107 + 260 len (32 * mem[_29107]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18816 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18816] = 26
                                    mem[_18816 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19776 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19776] = 26
                                        mem[_19776 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19776 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24215 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24215] = 26
                                            mem[_24215 + 32] = 'SafeMath: division by zero'
                                            _24823 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24823] = 26
                                            mem[_24823 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24823 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28085 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28085]
                                            mem[_28085 + 32] = stor8
                                            require 1 < mem[_28085]
                                            mem[_28085 + 64] = stor7
                                            mem[_28085 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28085 + 100] = ext_call.return_data[0]
                                            mem[_28085 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28085 + 196] = this.address
                                            mem[_28085 + 228] = block.timestamp + 120
                                            mem[_28085 + 164] = 160
                                            mem[_28085 + 260] = mem[_28085]
                                            s = 0
                                            while s < 32 * mem[_28085]:
                                                mem[s + _28085 + 292] = mem[s + _28085 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28085 + 260 len (32 * mem[_28085]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24415 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24415] = 26
                                            mem[_24415 + 32] = 'SafeMath: division by zero'
                                            _24948 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24948] = 26
                                            mem[_24948 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24948 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29101 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29101]
                                            mem[_29101 + 32] = stor8
                                            require 1 < mem[_29101]
                                            mem[_29101 + 64] = stor7
                                            mem[_29101 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29101 + 100] = ext_call.return_data[0]
                                            mem[_29101 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29101 + 196] = this.address
                                            mem[_29101 + 228] = block.timestamp + 120
                                            mem[_29101 + 164] = 160
                                            mem[_29101 + 260] = mem[_29101]
                                            s = 0
                                            while s < 32 * mem[_29101]:
                                                mem[s + _29101 + 292] = mem[s + _29101 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29101 + 260 len (32 * mem[_29101]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24632 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24632] = 26
                                        mem[_24632 + 32] = 'SafeMath: division by zero'
                                        _25257 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25257] = 26
                                        mem[_25257 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25257 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30113 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30113]
                                        mem[_30113 + 32] = stor8
                                        require 1 < mem[_30113]
                                        mem[_30113 + 64] = stor7
                                        mem[_30113 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30113 + 100] = ext_call.return_data[0]
                                        mem[_30113 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30113 + 196] = this.address
                                        mem[_30113 + 228] = block.timestamp + 120
                                        mem[_30113 + 164] = 160
                                        mem[_30113 + 260] = mem[_30113]
                                        s = 0
                                        while s < 32 * mem[_30113]:
                                            mem[s + _30113 + 292] = mem[s + _30113 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30113 + 260 len (32 * mem[_30113]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30113]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19845 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19845] = 26
                                    mem[_19845 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19845 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24414 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24414] = 26
                                        mem[_24414 + 32] = 'SafeMath: division by zero'
                                        _24947 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24947] = 26
                                        mem[_24947 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24947 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29095 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29095]
                                        mem[_29095 + 32] = stor8
                                        require 1 < mem[_29095]
                                        mem[_29095 + 64] = stor7
                                        mem[_29095 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29095 + 100] = ext_call.return_data[0]
                                        mem[_29095 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29095 + 196] = this.address
                                        mem[_29095 + 228] = block.timestamp + 120
                                        mem[_29095 + 164] = 160
                                        mem[_29095 + 260] = mem[_29095]
                                        s = 0
                                        while s < 32 * mem[_29095]:
                                            mem[s + _29095 + 292] = mem[s + _29095 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29095 + 260 len (32 * mem[_29095]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24631 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24631] = 26
                                            mem[_24631 + 32] = 'SafeMath: division by zero'
                                            _25256 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25256] = 26
                                            mem[_25256 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25256 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30107 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30107]
                                            mem[_30107 + 32] = stor8
                                            require 1 < mem[_30107]
                                            mem[_30107 + 64] = stor7
                                            mem[_30107 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30107 + 100] = ext_call.return_data[0]
                                            mem[_30107 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30107 + 196] = this.address
                                            mem[_30107 + 228] = block.timestamp + 120
                                            mem[_30107 + 164] = 160
                                            mem[_30107 + 260] = mem[_30107]
                                            s = 0
                                            while s < 32 * mem[_30107]:
                                                mem[s + _30107 + 292] = mem[s + _30107 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30107 + 260 len (32 * mem[_30107]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30107]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24720 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24720] = 26
                                        mem[_24720 + 32] = 'SafeMath: division by zero'
                                        _25723 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25723] = 26
                                        mem[_25723 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25723 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30817 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30817]
                                        mem[_30817 + 32] = stor8
                                        require 1 < mem[_30817]
                                        mem[_30817 + 64] = stor7
                                        mem[_30817 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30817 + 100] = ext_call.return_data[0]
                                        mem[_30817 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30817 + 196] = this.address
                                        mem[_30817 + 228] = block.timestamp + 120
                                        mem[_30817 + 164] = 160
                                        mem[_30817 + 260] = mem[_30817]
                                        s = 0
                                        while s < 32 * mem[_30817]:
                                            mem[s + _30817 + 292] = mem[s + _30817 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30817 + 260 len (32 * mem[_30817]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17718 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17718] = 30
                                mem[_17718 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17840 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17840 + 68] = mem[idx + _17718 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17840 + 68] = mem[_17840 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17840 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18767 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18767] = 26
                                    mem[_18767 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19645 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19645] = 26
                                    mem[_19645 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19645 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24061 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24061] = 26
                                        mem[_24061 + 32] = 'SafeMath: division by zero'
                                        _24767 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24767] = 26
                                        mem[_24767 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24767 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27146 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27146]
                                        mem[_27146 + 32] = stor8
                                        require 1 < mem[_27146]
                                        mem[_27146 + 64] = stor7
                                        mem[_27146 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27146 + 100] = ext_call.return_data[0]
                                        mem[_27146 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27146 + 196] = this.address
                                        mem[_27146 + 228] = block.timestamp + 120
                                        mem[_27146 + 164] = 160
                                        mem[_27146 + 260] = mem[_27146]
                                        s = 0
                                        while s < 32 * mem[_27146]:
                                            mem[s + _27146 + 292] = mem[s + _27146 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27146 + 260 len (32 * mem[_27146]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24212 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24212] = 26
                                            mem[_24212 + 32] = 'SafeMath: division by zero'
                                            _24822 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24822] = 26
                                            mem[_24822 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24822 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28070 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28070]
                                            mem[_28070 + 32] = stor8
                                            require 1 < mem[_28070]
                                            mem[_28070 + 64] = stor7
                                            mem[_28070 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28070 + 100] = ext_call.return_data[0]
                                            mem[_28070 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28070 + 196] = this.address
                                            mem[_28070 + 228] = block.timestamp + 120
                                            mem[_28070 + 164] = 160
                                            mem[_28070 + 260] = mem[_28070]
                                            s = 0
                                            while s < 32 * mem[_28070]:
                                                mem[s + _28070 + 292] = mem[s + _28070 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28070 + 260 len (32 * mem[_28070]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24411 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24411] = 26
                                            mem[_24411 + 32] = 'SafeMath: division by zero'
                                            _24943 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24943] = 26
                                            mem[_24943 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24943 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29085 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29085]
                                            mem[_29085 + 32] = stor8
                                            require 1 < mem[_29085]
                                            mem[_29085 + 64] = stor7
                                            mem[_29085 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29085 + 100] = ext_call.return_data[0]
                                            mem[_29085 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29085 + 196] = this.address
                                            mem[_29085 + 228] = block.timestamp + 120
                                            mem[_29085 + 164] = 160
                                            mem[_29085 + 260] = mem[_29085]
                                            s = 0
                                            while s < 32 * mem[_29085]:
                                                mem[s + _29085 + 292] = mem[s + _29085 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29085 + 260 len (32 * mem[_29085]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18815 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18815] = 26
                                    mem[_18815 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19775 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19775] = 26
                                        mem[_19775 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19775 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24211 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24211] = 26
                                            mem[_24211 + 32] = 'SafeMath: division by zero'
                                            _24821 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24821] = 26
                                            mem[_24821 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24821 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28064 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28064]
                                            mem[_28064 + 32] = stor8
                                            require 1 < mem[_28064]
                                            mem[_28064 + 64] = stor7
                                            mem[_28064 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28064 + 100] = ext_call.return_data[0]
                                            mem[_28064 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28064 + 196] = this.address
                                            mem[_28064 + 228] = block.timestamp + 120
                                            mem[_28064 + 164] = 160
                                            mem[_28064 + 260] = mem[_28064]
                                            s = 0
                                            while s < 32 * mem[_28064]:
                                                mem[s + _28064 + 292] = mem[s + _28064 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28064 + 260 len (32 * mem[_28064]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24410 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24410] = 26
                                            mem[_24410 + 32] = 'SafeMath: division by zero'
                                            _24942 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24942] = 26
                                            mem[_24942 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24942 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29079 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29079]
                                            mem[_29079 + 32] = stor8
                                            require 1 < mem[_29079]
                                            mem[_29079 + 64] = stor7
                                            mem[_29079 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29079 + 100] = ext_call.return_data[0]
                                            mem[_29079 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29079 + 196] = this.address
                                            mem[_29079 + 228] = block.timestamp + 120
                                            mem[_29079 + 164] = 160
                                            mem[_29079 + 260] = mem[_29079]
                                            s = 0
                                            while s < 32 * mem[_29079]:
                                                mem[s + _29079 + 292] = mem[s + _29079 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29079 + 260 len (32 * mem[_29079]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24630 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24630] = 26
                                        mem[_24630 + 32] = 'SafeMath: division by zero'
                                        _25248 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25248] = 26
                                        mem[_25248 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25248 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30097 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30097]
                                        mem[_30097 + 32] = stor8
                                        require 1 < mem[_30097]
                                        mem[_30097 + 64] = stor7
                                        mem[_30097 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30097 + 100] = ext_call.return_data[0]
                                        mem[_30097 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30097 + 196] = this.address
                                        mem[_30097 + 228] = block.timestamp + 120
                                        mem[_30097 + 164] = 160
                                        mem[_30097 + 260] = mem[_30097]
                                        s = 0
                                        while s < 32 * mem[_30097]:
                                            mem[s + _30097 + 292] = mem[s + _30097 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30097 + 260 len (32 * mem[_30097]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30097]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19841 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19841] = 26
                                    mem[_19841 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19841 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24409 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24409] = 26
                                        mem[_24409 + 32] = 'SafeMath: division by zero'
                                        _24941 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24941] = 26
                                        mem[_24941 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24941 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29073 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29073]
                                        mem[_29073 + 32] = stor8
                                        require 1 < mem[_29073]
                                        mem[_29073 + 64] = stor7
                                        mem[_29073 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29073 + 100] = ext_call.return_data[0]
                                        mem[_29073 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29073 + 196] = this.address
                                        mem[_29073 + 228] = block.timestamp + 120
                                        mem[_29073 + 164] = 160
                                        mem[_29073 + 260] = mem[_29073]
                                        s = 0
                                        while s < 32 * mem[_29073]:
                                            mem[s + _29073 + 292] = mem[s + _29073 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29073 + 260 len (32 * mem[_29073]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24629 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24629] = 26
                                            mem[_24629 + 32] = 'SafeMath: division by zero'
                                            _25247 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25247] = 26
                                            mem[_25247 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25247 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30091 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30091]
                                            mem[_30091 + 32] = stor8
                                            require 1 < mem[_30091]
                                            mem[_30091 + 64] = stor7
                                            mem[_30091 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30091 + 100] = ext_call.return_data[0]
                                            mem[_30091 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30091 + 196] = this.address
                                            mem[_30091 + 228] = block.timestamp + 120
                                            mem[_30091 + 164] = 160
                                            mem[_30091 + 260] = mem[_30091]
                                            s = 0
                                            while s < 32 * mem[_30091]:
                                                mem[s + _30091 + 292] = mem[s + _30091 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30091 + 260 len (32 * mem[_30091]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30091]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24719 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24719] = 26
                                        mem[_24719 + 32] = 'SafeMath: division by zero'
                                        _25709 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25709] = 26
                                        mem[_25709 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25709 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30809 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30809]
                                        mem[_30809 + 32] = stor8
                                        require 1 < mem[_30809]
                                        mem[_30809 + 64] = stor7
                                        mem[_30809 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30809 + 100] = ext_call.return_data[0]
                                        mem[_30809 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30809 + 196] = this.address
                                        mem[_30809 + 228] = block.timestamp + 120
                                        mem[_30809 + 164] = 160
                                        mem[_30809 + 260] = mem[_30809]
                                        s = 0
                                        while s < 32 * mem[_30809]:
                                            mem[s + _30809 + 292] = mem[s + _30809 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30809 + 260 len (32 * mem[_30809]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17716 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17716] = 30
                                mem[_17716 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17834 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17834 + 68] = mem[idx + _17716 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17834 + 68] = mem[_17834 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17834 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18766 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18766] = 26
                                    mem[_18766 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19642 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19642] = 26
                                    mem[_19642 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19642 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24058 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24058] = 26
                                        mem[_24058 + 32] = 'SafeMath: division by zero'
                                        _24766 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24766] = 26
                                        mem[_24766 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24766 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27127 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27127]
                                        mem[_27127 + 32] = stor8
                                        require 1 < mem[_27127]
                                        mem[_27127 + 64] = stor7
                                        mem[_27127 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27127 + 100] = ext_call.return_data[0]
                                        mem[_27127 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27127 + 196] = this.address
                                        mem[_27127 + 228] = block.timestamp + 120
                                        mem[_27127 + 164] = 160
                                        mem[_27127 + 260] = mem[_27127]
                                        s = 0
                                        while s < 32 * mem[_27127]:
                                            mem[s + _27127 + 292] = mem[s + _27127 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27127 + 260 len (32 * mem[_27127]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24208 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24208] = 26
                                            mem[_24208 + 32] = 'SafeMath: division by zero'
                                            _24820 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24820] = 26
                                            mem[_24820 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24820 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28049 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28049]
                                            mem[_28049 + 32] = stor8
                                            require 1 < mem[_28049]
                                            mem[_28049 + 64] = stor7
                                            mem[_28049 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28049 + 100] = ext_call.return_data[0]
                                            mem[_28049 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28049 + 196] = this.address
                                            mem[_28049 + 228] = block.timestamp + 120
                                            mem[_28049 + 164] = 160
                                            mem[_28049 + 260] = mem[_28049]
                                            s = 0
                                            while s < 32 * mem[_28049]:
                                                mem[s + _28049 + 292] = mem[s + _28049 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28049 + 260 len (32 * mem[_28049]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24406 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24406] = 26
                                            mem[_24406 + 32] = 'SafeMath: division by zero'
                                            _24937 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24937] = 26
                                            mem[_24937 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24937 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29063 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29063]
                                            mem[_29063 + 32] = stor8
                                            require 1 < mem[_29063]
                                            mem[_29063 + 64] = stor7
                                            mem[_29063 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29063 + 100] = ext_call.return_data[0]
                                            mem[_29063 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29063 + 196] = this.address
                                            mem[_29063 + 228] = block.timestamp + 120
                                            mem[_29063 + 164] = 160
                                            mem[_29063 + 260] = mem[_29063]
                                            s = 0
                                            while s < 32 * mem[_29063]:
                                                mem[s + _29063 + 292] = mem[s + _29063 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29063 + 260 len (32 * mem[_29063]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18814 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18814] = 26
                                    mem[_18814 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19774 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19774] = 26
                                        mem[_19774 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19774 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24207 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24207] = 26
                                            mem[_24207 + 32] = 'SafeMath: division by zero'
                                            _24819 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24819] = 26
                                            mem[_24819 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24819 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28043 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28043]
                                            mem[_28043 + 32] = stor8
                                            require 1 < mem[_28043]
                                            mem[_28043 + 64] = stor7
                                            mem[_28043 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28043 + 100] = ext_call.return_data[0]
                                            mem[_28043 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28043 + 196] = this.address
                                            mem[_28043 + 228] = block.timestamp + 120
                                            mem[_28043 + 164] = 160
                                            mem[_28043 + 260] = mem[_28043]
                                            s = 0
                                            while s < 32 * mem[_28043]:
                                                mem[s + _28043 + 292] = mem[s + _28043 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28043 + 260 len (32 * mem[_28043]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24405 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24405] = 26
                                            mem[_24405 + 32] = 'SafeMath: division by zero'
                                            _24936 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24936] = 26
                                            mem[_24936 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24936 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29057 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29057]
                                            mem[_29057 + 32] = stor8
                                            require 1 < mem[_29057]
                                            mem[_29057 + 64] = stor7
                                            mem[_29057 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29057 + 100] = ext_call.return_data[0]
                                            mem[_29057 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29057 + 196] = this.address
                                            mem[_29057 + 228] = block.timestamp + 120
                                            mem[_29057 + 164] = 160
                                            mem[_29057 + 260] = mem[_29057]
                                            s = 0
                                            while s < 32 * mem[_29057]:
                                                mem[s + _29057 + 292] = mem[s + _29057 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29057 + 260 len (32 * mem[_29057]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24628 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24628] = 26
                                        mem[_24628 + 32] = 'SafeMath: division by zero'
                                        _25239 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25239] = 26
                                        mem[_25239 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25239 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30081 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30081]
                                        mem[_30081 + 32] = stor8
                                        require 1 < mem[_30081]
                                        mem[_30081 + 64] = stor7
                                        mem[_30081 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30081 + 100] = ext_call.return_data[0]
                                        mem[_30081 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30081 + 196] = this.address
                                        mem[_30081 + 228] = block.timestamp + 120
                                        mem[_30081 + 164] = 160
                                        mem[_30081 + 260] = mem[_30081]
                                        s = 0
                                        while s < 32 * mem[_30081]:
                                            mem[s + _30081 + 292] = mem[s + _30081 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30081 + 260 len (32 * mem[_30081]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30081]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19837 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19837] = 26
                                    mem[_19837 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19837 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24404 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24404] = 26
                                        mem[_24404 + 32] = 'SafeMath: division by zero'
                                        _24935 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24935] = 26
                                        mem[_24935 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24935 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29051 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29051]
                                        mem[_29051 + 32] = stor8
                                        require 1 < mem[_29051]
                                        mem[_29051 + 64] = stor7
                                        mem[_29051 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29051 + 100] = ext_call.return_data[0]
                                        mem[_29051 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29051 + 196] = this.address
                                        mem[_29051 + 228] = block.timestamp + 120
                                        mem[_29051 + 164] = 160
                                        mem[_29051 + 260] = mem[_29051]
                                        s = 0
                                        while s < 32 * mem[_29051]:
                                            mem[s + _29051 + 292] = mem[s + _29051 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29051 + 260 len (32 * mem[_29051]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24627 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24627] = 26
                                            mem[_24627 + 32] = 'SafeMath: division by zero'
                                            _25238 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25238] = 26
                                            mem[_25238 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25238 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30075 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30075]
                                            mem[_30075 + 32] = stor8
                                            require 1 < mem[_30075]
                                            mem[_30075 + 64] = stor7
                                            mem[_30075 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30075 + 100] = ext_call.return_data[0]
                                            mem[_30075 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30075 + 196] = this.address
                                            mem[_30075 + 228] = block.timestamp + 120
                                            mem[_30075 + 164] = 160
                                            mem[_30075 + 260] = mem[_30075]
                                            s = 0
                                            while s < 32 * mem[_30075]:
                                                mem[s + _30075 + 292] = mem[s + _30075 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30075 + 260 len (32 * mem[_30075]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30075]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24718 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24718] = 26
                                        mem[_24718 + 32] = 'SafeMath: division by zero'
                                        _25695 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25695] = 26
                                        mem[_25695 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25695 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30801 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30801]
                                        mem[_30801 + 32] = stor8
                                        require 1 < mem[_30801]
                                        mem[_30801 + 64] = stor7
                                        mem[_30801 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30801 + 100] = ext_call.return_data[0]
                                        mem[_30801 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30801 + 196] = this.address
                                        mem[_30801 + 228] = block.timestamp + 120
                                        mem[_30801 + 164] = 160
                                        mem[_30801 + 260] = mem[_30801]
                                        s = 0
                                        while s < 32 * mem[_30801]:
                                            mem[s + _30801 + 292] = mem[s + _30801 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30801 + 260 len (32 * mem[_30801]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17714 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17714] = 30
                                mem[_17714 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17828 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17828 + 68] = mem[idx + _17714 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17828 + 68] = mem[_17828 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17828 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18765 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18765] = 26
                                    mem[_18765 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19639 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19639] = 26
                                    mem[_19639 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19639 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24055 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24055] = 26
                                        mem[_24055 + 32] = 'SafeMath: division by zero'
                                        _24765 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24765] = 26
                                        mem[_24765 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24765 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27108 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27108]
                                        mem[_27108 + 32] = stor8
                                        require 1 < mem[_27108]
                                        mem[_27108 + 64] = stor7
                                        mem[_27108 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27108 + 100] = ext_call.return_data[0]
                                        mem[_27108 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27108 + 196] = this.address
                                        mem[_27108 + 228] = block.timestamp + 120
                                        mem[_27108 + 164] = 160
                                        mem[_27108 + 260] = mem[_27108]
                                        s = 0
                                        while s < 32 * mem[_27108]:
                                            mem[s + _27108 + 292] = mem[s + _27108 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27108 + 260 len (32 * mem[_27108]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24204 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24204] = 26
                                            mem[_24204 + 32] = 'SafeMath: division by zero'
                                            _24818 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24818] = 26
                                            mem[_24818 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24818 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28028 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28028]
                                            mem[_28028 + 32] = stor8
                                            require 1 < mem[_28028]
                                            mem[_28028 + 64] = stor7
                                            mem[_28028 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28028 + 100] = ext_call.return_data[0]
                                            mem[_28028 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28028 + 196] = this.address
                                            mem[_28028 + 228] = block.timestamp + 120
                                            mem[_28028 + 164] = 160
                                            mem[_28028 + 260] = mem[_28028]
                                            s = 0
                                            while s < 32 * mem[_28028]:
                                                mem[s + _28028 + 292] = mem[s + _28028 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28028 + 260 len (32 * mem[_28028]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24401 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24401] = 26
                                            mem[_24401 + 32] = 'SafeMath: division by zero'
                                            _24931 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24931] = 26
                                            mem[_24931 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24931 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29041 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29041]
                                            mem[_29041 + 32] = stor8
                                            require 1 < mem[_29041]
                                            mem[_29041 + 64] = stor7
                                            mem[_29041 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29041 + 100] = ext_call.return_data[0]
                                            mem[_29041 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29041 + 196] = this.address
                                            mem[_29041 + 228] = block.timestamp + 120
                                            mem[_29041 + 164] = 160
                                            mem[_29041 + 260] = mem[_29041]
                                            s = 0
                                            while s < 32 * mem[_29041]:
                                                mem[s + _29041 + 292] = mem[s + _29041 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29041 + 260 len (32 * mem[_29041]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18813 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18813] = 26
                                    mem[_18813 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19773 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19773] = 26
                                        mem[_19773 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19773 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24203 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24203] = 26
                                            mem[_24203 + 32] = 'SafeMath: division by zero'
                                            _24817 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24817] = 26
                                            mem[_24817 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24817 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28022 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28022]
                                            mem[_28022 + 32] = stor8
                                            require 1 < mem[_28022]
                                            mem[_28022 + 64] = stor7
                                            mem[_28022 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28022 + 100] = ext_call.return_data[0]
                                            mem[_28022 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28022 + 196] = this.address
                                            mem[_28022 + 228] = block.timestamp + 120
                                            mem[_28022 + 164] = 160
                                            mem[_28022 + 260] = mem[_28022]
                                            s = 0
                                            while s < 32 * mem[_28022]:
                                                mem[s + _28022 + 292] = mem[s + _28022 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28022 + 260 len (32 * mem[_28022]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24400 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24400] = 26
                                            mem[_24400 + 32] = 'SafeMath: division by zero'
                                            _24930 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24930] = 26
                                            mem[_24930 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24930 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29035 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29035]
                                            mem[_29035 + 32] = stor8
                                            require 1 < mem[_29035]
                                            mem[_29035 + 64] = stor7
                                            mem[_29035 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29035 + 100] = ext_call.return_data[0]
                                            mem[_29035 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29035 + 196] = this.address
                                            mem[_29035 + 228] = block.timestamp + 120
                                            mem[_29035 + 164] = 160
                                            mem[_29035 + 260] = mem[_29035]
                                            s = 0
                                            while s < 32 * mem[_29035]:
                                                mem[s + _29035 + 292] = mem[s + _29035 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29035 + 260 len (32 * mem[_29035]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24626 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24626] = 26
                                        mem[_24626 + 32] = 'SafeMath: division by zero'
                                        _25230 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25230] = 26
                                        mem[_25230 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25230 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30065 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30065]
                                        mem[_30065 + 32] = stor8
                                        require 1 < mem[_30065]
                                        mem[_30065 + 64] = stor7
                                        mem[_30065 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30065 + 100] = ext_call.return_data[0]
                                        mem[_30065 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30065 + 196] = this.address
                                        mem[_30065 + 228] = block.timestamp + 120
                                        mem[_30065 + 164] = 160
                                        mem[_30065 + 260] = mem[_30065]
                                        s = 0
                                        while s < 32 * mem[_30065]:
                                            mem[s + _30065 + 292] = mem[s + _30065 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30065 + 260 len (32 * mem[_30065]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30065]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19833 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19833] = 26
                                    mem[_19833 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19833 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24399 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24399] = 26
                                        mem[_24399 + 32] = 'SafeMath: division by zero'
                                        _24929 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24929] = 26
                                        mem[_24929 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24929 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29029 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29029]
                                        mem[_29029 + 32] = stor8
                                        require 1 < mem[_29029]
                                        mem[_29029 + 64] = stor7
                                        mem[_29029 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29029 + 100] = ext_call.return_data[0]
                                        mem[_29029 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29029 + 196] = this.address
                                        mem[_29029 + 228] = block.timestamp + 120
                                        mem[_29029 + 164] = 160
                                        mem[_29029 + 260] = mem[_29029]
                                        s = 0
                                        while s < 32 * mem[_29029]:
                                            mem[s + _29029 + 292] = mem[s + _29029 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29029 + 260 len (32 * mem[_29029]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24625 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24625] = 26
                                            mem[_24625 + 32] = 'SafeMath: division by zero'
                                            _25229 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25229] = 26
                                            mem[_25229 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25229 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30059 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30059]
                                            mem[_30059 + 32] = stor8
                                            require 1 < mem[_30059]
                                            mem[_30059 + 64] = stor7
                                            mem[_30059 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30059 + 100] = ext_call.return_data[0]
                                            mem[_30059 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30059 + 196] = this.address
                                            mem[_30059 + 228] = block.timestamp + 120
                                            mem[_30059 + 164] = 160
                                            mem[_30059 + 260] = mem[_30059]
                                            s = 0
                                            while s < 32 * mem[_30059]:
                                                mem[s + _30059 + 292] = mem[s + _30059 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30059 + 260 len (32 * mem[_30059]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30059]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24717 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24717] = 26
                                        mem[_24717 + 32] = 'SafeMath: division by zero'
                                        _25681 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25681] = 26
                                        mem[_25681 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25681 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30793 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30793]
                                        mem[_30793 + 32] = stor8
                                        require 1 < mem[_30793]
                                        mem[_30793 + 64] = stor7
                                        mem[_30793 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30793 + 100] = ext_call.return_data[0]
                                        mem[_30793 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30793 + 196] = this.address
                                        mem[_30793 + 228] = block.timestamp + 120
                                        mem[_30793 + 164] = 160
                                        mem[_30793 + 260] = mem[_30793]
                                        s = 0
                                        while s < 32 * mem[_30793]:
                                            mem[s + _30793 + 292] = mem[s + _30793 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30793 + 260 len (32 * mem[_30793]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17712 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17712] = 30
                                mem[_17712 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17822 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17822 + 68] = mem[idx + _17712 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17822 + 68] = mem[_17822 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17822 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18764 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18764] = 26
                                    mem[_18764 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19636 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19636] = 26
                                    mem[_19636 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19636 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24052 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24052] = 26
                                        mem[_24052 + 32] = 'SafeMath: division by zero'
                                        _24764 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24764] = 26
                                        mem[_24764 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24764 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27089 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27089]
                                        mem[_27089 + 32] = stor8
                                        require 1 < mem[_27089]
                                        mem[_27089 + 64] = stor7
                                        mem[_27089 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27089 + 100] = ext_call.return_data[0]
                                        mem[_27089 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27089 + 196] = this.address
                                        mem[_27089 + 228] = block.timestamp + 120
                                        mem[_27089 + 164] = 160
                                        mem[_27089 + 260] = mem[_27089]
                                        s = 0
                                        while s < 32 * mem[_27089]:
                                            mem[s + _27089 + 292] = mem[s + _27089 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27089 + 260 len (32 * mem[_27089]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24200 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24200] = 26
                                            mem[_24200 + 32] = 'SafeMath: division by zero'
                                            _24816 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24816] = 26
                                            mem[_24816 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24816 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28007 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28007]
                                            mem[_28007 + 32] = stor8
                                            require 1 < mem[_28007]
                                            mem[_28007 + 64] = stor7
                                            mem[_28007 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28007 + 100] = ext_call.return_data[0]
                                            mem[_28007 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28007 + 196] = this.address
                                            mem[_28007 + 228] = block.timestamp + 120
                                            mem[_28007 + 164] = 160
                                            mem[_28007 + 260] = mem[_28007]
                                            s = 0
                                            while s < 32 * mem[_28007]:
                                                mem[s + _28007 + 292] = mem[s + _28007 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28007 + 260 len (32 * mem[_28007]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24396 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24396] = 26
                                            mem[_24396 + 32] = 'SafeMath: division by zero'
                                            _24925 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24925] = 26
                                            mem[_24925 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24925 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29019 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29019]
                                            mem[_29019 + 32] = stor8
                                            require 1 < mem[_29019]
                                            mem[_29019 + 64] = stor7
                                            mem[_29019 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29019 + 100] = ext_call.return_data[0]
                                            mem[_29019 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29019 + 196] = this.address
                                            mem[_29019 + 228] = block.timestamp + 120
                                            mem[_29019 + 164] = 160
                                            mem[_29019 + 260] = mem[_29019]
                                            s = 0
                                            while s < 32 * mem[_29019]:
                                                mem[s + _29019 + 292] = mem[s + _29019 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29019 + 260 len (32 * mem[_29019]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18812 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18812] = 26
                                    mem[_18812 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19772 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19772] = 26
                                        mem[_19772 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19772 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24199 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24199] = 26
                                            mem[_24199 + 32] = 'SafeMath: division by zero'
                                            _24815 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24815] = 26
                                            mem[_24815 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24815 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28001 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28001]
                                            mem[_28001 + 32] = stor8
                                            require 1 < mem[_28001]
                                            mem[_28001 + 64] = stor7
                                            mem[_28001 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28001 + 100] = ext_call.return_data[0]
                                            mem[_28001 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28001 + 196] = this.address
                                            mem[_28001 + 228] = block.timestamp + 120
                                            mem[_28001 + 164] = 160
                                            mem[_28001 + 260] = mem[_28001]
                                            s = 0
                                            while s < 32 * mem[_28001]:
                                                mem[s + _28001 + 292] = mem[s + _28001 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28001 + 260 len (32 * mem[_28001]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24395 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24395] = 26
                                            mem[_24395 + 32] = 'SafeMath: division by zero'
                                            _24924 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24924] = 26
                                            mem[_24924 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24924 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29013 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29013]
                                            mem[_29013 + 32] = stor8
                                            require 1 < mem[_29013]
                                            mem[_29013 + 64] = stor7
                                            mem[_29013 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29013 + 100] = ext_call.return_data[0]
                                            mem[_29013 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29013 + 196] = this.address
                                            mem[_29013 + 228] = block.timestamp + 120
                                            mem[_29013 + 164] = 160
                                            mem[_29013 + 260] = mem[_29013]
                                            s = 0
                                            while s < 32 * mem[_29013]:
                                                mem[s + _29013 + 292] = mem[s + _29013 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29013 + 260 len (32 * mem[_29013]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24624 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24624] = 26
                                        mem[_24624 + 32] = 'SafeMath: division by zero'
                                        _25221 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25221] = 26
                                        mem[_25221 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25221 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30049 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30049]
                                        mem[_30049 + 32] = stor8
                                        require 1 < mem[_30049]
                                        mem[_30049 + 64] = stor7
                                        mem[_30049 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30049 + 100] = ext_call.return_data[0]
                                        mem[_30049 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30049 + 196] = this.address
                                        mem[_30049 + 228] = block.timestamp + 120
                                        mem[_30049 + 164] = 160
                                        mem[_30049 + 260] = mem[_30049]
                                        s = 0
                                        while s < 32 * mem[_30049]:
                                            mem[s + _30049 + 292] = mem[s + _30049 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30049 + 260 len (32 * mem[_30049]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30049]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19829 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19829] = 26
                                    mem[_19829 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19829 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24394 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24394] = 26
                                        mem[_24394 + 32] = 'SafeMath: division by zero'
                                        _24923 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24923] = 26
                                        mem[_24923 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24923 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29007 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29007]
                                        mem[_29007 + 32] = stor8
                                        require 1 < mem[_29007]
                                        mem[_29007 + 64] = stor7
                                        mem[_29007 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29007 + 100] = ext_call.return_data[0]
                                        mem[_29007 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29007 + 196] = this.address
                                        mem[_29007 + 228] = block.timestamp + 120
                                        mem[_29007 + 164] = 160
                                        mem[_29007 + 260] = mem[_29007]
                                        s = 0
                                        while s < 32 * mem[_29007]:
                                            mem[s + _29007 + 292] = mem[s + _29007 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29007 + 260 len (32 * mem[_29007]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24623 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24623] = 26
                                            mem[_24623 + 32] = 'SafeMath: division by zero'
                                            _25220 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25220] = 26
                                            mem[_25220 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25220 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30043 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30043]
                                            mem[_30043 + 32] = stor8
                                            require 1 < mem[_30043]
                                            mem[_30043 + 64] = stor7
                                            mem[_30043 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30043 + 100] = ext_call.return_data[0]
                                            mem[_30043 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30043 + 196] = this.address
                                            mem[_30043 + 228] = block.timestamp + 120
                                            mem[_30043 + 164] = 160
                                            mem[_30043 + 260] = mem[_30043]
                                            s = 0
                                            while s < 32 * mem[_30043]:
                                                mem[s + _30043 + 292] = mem[s + _30043 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30043 + 260 len (32 * mem[_30043]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30043]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24716 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24716] = 26
                                        mem[_24716 + 32] = 'SafeMath: division by zero'
                                        _25667 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25667] = 26
                                        mem[_25667 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25667 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30785 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30785]
                                        mem[_30785 + 32] = stor8
                                        require 1 < mem[_30785]
                                        mem[_30785 + 64] = stor7
                                        mem[_30785 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30785 + 100] = ext_call.return_data[0]
                                        mem[_30785 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30785 + 196] = this.address
                                        mem[_30785 + 228] = block.timestamp + 120
                                        mem[_30785 + 164] = 160
                                        mem[_30785 + 260] = mem[_30785]
                                        s = 0
                                        while s < 32 * mem[_30785]:
                                            mem[s + _30785 + 292] = mem[s + _30785 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30785 + 260 len (32 * mem[_30785]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17710 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17710] = 30
                                mem[_17710 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17816 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17816 + 68] = mem[idx + _17710 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17816 + 68] = mem[_17816 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17816 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18763 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18763] = 26
                                    mem[_18763 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19633 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19633] = 26
                                    mem[_19633 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19633 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24049 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24049] = 26
                                        mem[_24049 + 32] = 'SafeMath: division by zero'
                                        _24763 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24763] = 26
                                        mem[_24763 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24763 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27070 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27070]
                                        mem[_27070 + 32] = stor8
                                        require 1 < mem[_27070]
                                        mem[_27070 + 64] = stor7
                                        mem[_27070 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27070 + 100] = ext_call.return_data[0]
                                        mem[_27070 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27070 + 196] = this.address
                                        mem[_27070 + 228] = block.timestamp + 120
                                        mem[_27070 + 164] = 160
                                        mem[_27070 + 260] = mem[_27070]
                                        s = 0
                                        while s < 32 * mem[_27070]:
                                            mem[s + _27070 + 292] = mem[s + _27070 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27070 + 260 len (32 * mem[_27070]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24196 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24196] = 26
                                            mem[_24196 + 32] = 'SafeMath: division by zero'
                                            _24814 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24814] = 26
                                            mem[_24814 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24814 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27986 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27986]
                                            mem[_27986 + 32] = stor8
                                            require 1 < mem[_27986]
                                            mem[_27986 + 64] = stor7
                                            mem[_27986 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27986 + 100] = ext_call.return_data[0]
                                            mem[_27986 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27986 + 196] = this.address
                                            mem[_27986 + 228] = block.timestamp + 120
                                            mem[_27986 + 164] = 160
                                            mem[_27986 + 260] = mem[_27986]
                                            s = 0
                                            while s < 32 * mem[_27986]:
                                                mem[s + _27986 + 292] = mem[s + _27986 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27986 + 260 len (32 * mem[_27986]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24391 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24391] = 26
                                            mem[_24391 + 32] = 'SafeMath: division by zero'
                                            _24919 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24919] = 26
                                            mem[_24919 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24919 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28997 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28997]
                                            mem[_28997 + 32] = stor8
                                            require 1 < mem[_28997]
                                            mem[_28997 + 64] = stor7
                                            mem[_28997 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28997 + 100] = ext_call.return_data[0]
                                            mem[_28997 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28997 + 196] = this.address
                                            mem[_28997 + 228] = block.timestamp + 120
                                            mem[_28997 + 164] = 160
                                            mem[_28997 + 260] = mem[_28997]
                                            s = 0
                                            while s < 32 * mem[_28997]:
                                                mem[s + _28997 + 292] = mem[s + _28997 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28997 + 260 len (32 * mem[_28997]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18811 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18811] = 26
                                    mem[_18811 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19771 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19771] = 26
                                        mem[_19771 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19771 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24195 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24195] = 26
                                            mem[_24195 + 32] = 'SafeMath: division by zero'
                                            _24813 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24813] = 26
                                            mem[_24813 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24813 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27980 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27980]
                                            mem[_27980 + 32] = stor8
                                            require 1 < mem[_27980]
                                            mem[_27980 + 64] = stor7
                                            mem[_27980 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27980 + 100] = ext_call.return_data[0]
                                            mem[_27980 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27980 + 196] = this.address
                                            mem[_27980 + 228] = block.timestamp + 120
                                            mem[_27980 + 164] = 160
                                            mem[_27980 + 260] = mem[_27980]
                                            s = 0
                                            while s < 32 * mem[_27980]:
                                                mem[s + _27980 + 292] = mem[s + _27980 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27980 + 260 len (32 * mem[_27980]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24390 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24390] = 26
                                            mem[_24390 + 32] = 'SafeMath: division by zero'
                                            _24918 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24918] = 26
                                            mem[_24918 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24918 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28991 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28991]
                                            mem[_28991 + 32] = stor8
                                            require 1 < mem[_28991]
                                            mem[_28991 + 64] = stor7
                                            mem[_28991 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28991 + 100] = ext_call.return_data[0]
                                            mem[_28991 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28991 + 196] = this.address
                                            mem[_28991 + 228] = block.timestamp + 120
                                            mem[_28991 + 164] = 160
                                            mem[_28991 + 260] = mem[_28991]
                                            s = 0
                                            while s < 32 * mem[_28991]:
                                                mem[s + _28991 + 292] = mem[s + _28991 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28991 + 260 len (32 * mem[_28991]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24622 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24622] = 26
                                        mem[_24622 + 32] = 'SafeMath: division by zero'
                                        _25212 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25212] = 26
                                        mem[_25212 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25212 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30033 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30033]
                                        mem[_30033 + 32] = stor8
                                        require 1 < mem[_30033]
                                        mem[_30033 + 64] = stor7
                                        mem[_30033 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30033 + 100] = ext_call.return_data[0]
                                        mem[_30033 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30033 + 196] = this.address
                                        mem[_30033 + 228] = block.timestamp + 120
                                        mem[_30033 + 164] = 160
                                        mem[_30033 + 260] = mem[_30033]
                                        s = 0
                                        while s < 32 * mem[_30033]:
                                            mem[s + _30033 + 292] = mem[s + _30033 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30033 + 260 len (32 * mem[_30033]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30033]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19825 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19825] = 26
                                    mem[_19825 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19825 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24389 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24389] = 26
                                        mem[_24389 + 32] = 'SafeMath: division by zero'
                                        _24917 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24917] = 26
                                        mem[_24917 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24917 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28985 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28985]
                                        mem[_28985 + 32] = stor8
                                        require 1 < mem[_28985]
                                        mem[_28985 + 64] = stor7
                                        mem[_28985 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28985 + 100] = ext_call.return_data[0]
                                        mem[_28985 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28985 + 196] = this.address
                                        mem[_28985 + 228] = block.timestamp + 120
                                        mem[_28985 + 164] = 160
                                        mem[_28985 + 260] = mem[_28985]
                                        s = 0
                                        while s < 32 * mem[_28985]:
                                            mem[s + _28985 + 292] = mem[s + _28985 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28985 + 260 len (32 * mem[_28985]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24621 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24621] = 26
                                            mem[_24621 + 32] = 'SafeMath: division by zero'
                                            _25211 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25211] = 26
                                            mem[_25211 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25211 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30027 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30027]
                                            mem[_30027 + 32] = stor8
                                            require 1 < mem[_30027]
                                            mem[_30027 + 64] = stor7
                                            mem[_30027 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30027 + 100] = ext_call.return_data[0]
                                            mem[_30027 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30027 + 196] = this.address
                                            mem[_30027 + 228] = block.timestamp + 120
                                            mem[_30027 + 164] = 160
                                            mem[_30027 + 260] = mem[_30027]
                                            s = 0
                                            while s < 32 * mem[_30027]:
                                                mem[s + _30027 + 292] = mem[s + _30027 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30027 + 260 len (32 * mem[_30027]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30027]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24715 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24715] = 26
                                        mem[_24715 + 32] = 'SafeMath: division by zero'
                                        _25653 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25653] = 26
                                        mem[_25653 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25653 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30777 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30777]
                                        mem[_30777 + 32] = stor8
                                        require 1 < mem[_30777]
                                        mem[_30777 + 64] = stor7
                                        mem[_30777 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30777 + 100] = ext_call.return_data[0]
                                        mem[_30777 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30777 + 196] = this.address
                                        mem[_30777 + 228] = block.timestamp + 120
                                        mem[_30777 + 164] = 160
                                        mem[_30777 + 260] = mem[_30777]
                                        s = 0
                                        while s < 32 * mem[_30777]:
                                            mem[s + _30777 + 292] = mem[s + _30777 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30777 + 260 len (32 * mem[_30777]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17708 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17708] = 30
                                mem[_17708 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17810 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17810 + 68] = mem[idx + _17708 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17810 + 68] = mem[_17810 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17810 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18762 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18762] = 26
                                    mem[_18762 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19630 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19630] = 26
                                    mem[_19630 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19630 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24046 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24046] = 26
                                        mem[_24046 + 32] = 'SafeMath: division by zero'
                                        _24762 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24762] = 26
                                        mem[_24762 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24762 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27051 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27051]
                                        mem[_27051 + 32] = stor8
                                        require 1 < mem[_27051]
                                        mem[_27051 + 64] = stor7
                                        mem[_27051 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27051 + 100] = ext_call.return_data[0]
                                        mem[_27051 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27051 + 196] = this.address
                                        mem[_27051 + 228] = block.timestamp + 120
                                        mem[_27051 + 164] = 160
                                        mem[_27051 + 260] = mem[_27051]
                                        s = 0
                                        while s < 32 * mem[_27051]:
                                            mem[s + _27051 + 292] = mem[s + _27051 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27051 + 260 len (32 * mem[_27051]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24192 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24192] = 26
                                            mem[_24192 + 32] = 'SafeMath: division by zero'
                                            _24812 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24812] = 26
                                            mem[_24812 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24812 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27965 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27965]
                                            mem[_27965 + 32] = stor8
                                            require 1 < mem[_27965]
                                            mem[_27965 + 64] = stor7
                                            mem[_27965 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27965 + 100] = ext_call.return_data[0]
                                            mem[_27965 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27965 + 196] = this.address
                                            mem[_27965 + 228] = block.timestamp + 120
                                            mem[_27965 + 164] = 160
                                            mem[_27965 + 260] = mem[_27965]
                                            s = 0
                                            while s < 32 * mem[_27965]:
                                                mem[s + _27965 + 292] = mem[s + _27965 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27965 + 260 len (32 * mem[_27965]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24386 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24386] = 26
                                            mem[_24386 + 32] = 'SafeMath: division by zero'
                                            _24913 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24913] = 26
                                            mem[_24913 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24913 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28975 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28975]
                                            mem[_28975 + 32] = stor8
                                            require 1 < mem[_28975]
                                            mem[_28975 + 64] = stor7
                                            mem[_28975 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28975 + 100] = ext_call.return_data[0]
                                            mem[_28975 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28975 + 196] = this.address
                                            mem[_28975 + 228] = block.timestamp + 120
                                            mem[_28975 + 164] = 160
                                            mem[_28975 + 260] = mem[_28975]
                                            s = 0
                                            while s < 32 * mem[_28975]:
                                                mem[s + _28975 + 292] = mem[s + _28975 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28975 + 260 len (32 * mem[_28975]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18810 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18810] = 26
                                    mem[_18810 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19770 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19770] = 26
                                        mem[_19770 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19770 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24191 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24191] = 26
                                            mem[_24191 + 32] = 'SafeMath: division by zero'
                                            _24811 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24811] = 26
                                            mem[_24811 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24811 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27959 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27959]
                                            mem[_27959 + 32] = stor8
                                            require 1 < mem[_27959]
                                            mem[_27959 + 64] = stor7
                                            mem[_27959 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27959 + 100] = ext_call.return_data[0]
                                            mem[_27959 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27959 + 196] = this.address
                                            mem[_27959 + 228] = block.timestamp + 120
                                            mem[_27959 + 164] = 160
                                            mem[_27959 + 260] = mem[_27959]
                                            s = 0
                                            while s < 32 * mem[_27959]:
                                                mem[s + _27959 + 292] = mem[s + _27959 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27959 + 260 len (32 * mem[_27959]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24385 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24385] = 26
                                            mem[_24385 + 32] = 'SafeMath: division by zero'
                                            _24912 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24912] = 26
                                            mem[_24912 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24912 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28969 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28969]
                                            mem[_28969 + 32] = stor8
                                            require 1 < mem[_28969]
                                            mem[_28969 + 64] = stor7
                                            mem[_28969 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28969 + 100] = ext_call.return_data[0]
                                            mem[_28969 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28969 + 196] = this.address
                                            mem[_28969 + 228] = block.timestamp + 120
                                            mem[_28969 + 164] = 160
                                            mem[_28969 + 260] = mem[_28969]
                                            s = 0
                                            while s < 32 * mem[_28969]:
                                                mem[s + _28969 + 292] = mem[s + _28969 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28969 + 260 len (32 * mem[_28969]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24620 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24620] = 26
                                        mem[_24620 + 32] = 'SafeMath: division by zero'
                                        _25203 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25203] = 26
                                        mem[_25203 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25203 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30017 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30017]
                                        mem[_30017 + 32] = stor8
                                        require 1 < mem[_30017]
                                        mem[_30017 + 64] = stor7
                                        mem[_30017 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30017 + 100] = ext_call.return_data[0]
                                        mem[_30017 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30017 + 196] = this.address
                                        mem[_30017 + 228] = block.timestamp + 120
                                        mem[_30017 + 164] = 160
                                        mem[_30017 + 260] = mem[_30017]
                                        s = 0
                                        while s < 32 * mem[_30017]:
                                            mem[s + _30017 + 292] = mem[s + _30017 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30017 + 260 len (32 * mem[_30017]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30017]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19821 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19821] = 26
                                    mem[_19821 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19821 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24384 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24384] = 26
                                        mem[_24384 + 32] = 'SafeMath: division by zero'
                                        _24911 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24911] = 26
                                        mem[_24911 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24911 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28963 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28963]
                                        mem[_28963 + 32] = stor8
                                        require 1 < mem[_28963]
                                        mem[_28963 + 64] = stor7
                                        mem[_28963 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28963 + 100] = ext_call.return_data[0]
                                        mem[_28963 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28963 + 196] = this.address
                                        mem[_28963 + 228] = block.timestamp + 120
                                        mem[_28963 + 164] = 160
                                        mem[_28963 + 260] = mem[_28963]
                                        s = 0
                                        while s < 32 * mem[_28963]:
                                            mem[s + _28963 + 292] = mem[s + _28963 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28963 + 260 len (32 * mem[_28963]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24619 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24619] = 26
                                            mem[_24619 + 32] = 'SafeMath: division by zero'
                                            _25202 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25202] = 26
                                            mem[_25202 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25202 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30011 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30011]
                                            mem[_30011 + 32] = stor8
                                            require 1 < mem[_30011]
                                            mem[_30011 + 64] = stor7
                                            mem[_30011 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30011 + 100] = ext_call.return_data[0]
                                            mem[_30011 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30011 + 196] = this.address
                                            mem[_30011 + 228] = block.timestamp + 120
                                            mem[_30011 + 164] = 160
                                            mem[_30011 + 260] = mem[_30011]
                                            s = 0
                                            while s < 32 * mem[_30011]:
                                                mem[s + _30011 + 292] = mem[s + _30011 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30011 + 260 len (32 * mem[_30011]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30011]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24714 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24714] = 26
                                        mem[_24714 + 32] = 'SafeMath: division by zero'
                                        _25639 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25639] = 26
                                        mem[_25639 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25639 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30769 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30769]
                                        mem[_30769 + 32] = stor8
                                        require 1 < mem[_30769]
                                        mem[_30769 + 64] = stor7
                                        mem[_30769 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30769 + 100] = ext_call.return_data[0]
                                        mem[_30769 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30769 + 196] = this.address
                                        mem[_30769 + 228] = block.timestamp + 120
                                        mem[_30769 + 164] = 160
                                        mem[_30769 + 260] = mem[_30769]
                                        s = 0
                                        while s < 32 * mem[_30769]:
                                            mem[s + _30769 + 292] = mem[s + _30769 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30769 + 260 len (32 * mem[_30769]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17706 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17706] = 30
                                mem[_17706 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17804 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17804 + 68] = mem[idx + _17706 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17804 + 68] = mem[_17804 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17804 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18761 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18761] = 26
                                    mem[_18761 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19627 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19627] = 26
                                    mem[_19627 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19627 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24043 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24043] = 26
                                        mem[_24043 + 32] = 'SafeMath: division by zero'
                                        _24761 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24761] = 26
                                        mem[_24761 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24761 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27032 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27032]
                                        mem[_27032 + 32] = stor8
                                        require 1 < mem[_27032]
                                        mem[_27032 + 64] = stor7
                                        mem[_27032 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27032 + 100] = ext_call.return_data[0]
                                        mem[_27032 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27032 + 196] = this.address
                                        mem[_27032 + 228] = block.timestamp + 120
                                        mem[_27032 + 164] = 160
                                        mem[_27032 + 260] = mem[_27032]
                                        s = 0
                                        while s < 32 * mem[_27032]:
                                            mem[s + _27032 + 292] = mem[s + _27032 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27032 + 260 len (32 * mem[_27032]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24188 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24188] = 26
                                            mem[_24188 + 32] = 'SafeMath: division by zero'
                                            _24810 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24810] = 26
                                            mem[_24810 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24810 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27944 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27944]
                                            mem[_27944 + 32] = stor8
                                            require 1 < mem[_27944]
                                            mem[_27944 + 64] = stor7
                                            mem[_27944 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27944 + 100] = ext_call.return_data[0]
                                            mem[_27944 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27944 + 196] = this.address
                                            mem[_27944 + 228] = block.timestamp + 120
                                            mem[_27944 + 164] = 160
                                            mem[_27944 + 260] = mem[_27944]
                                            s = 0
                                            while s < 32 * mem[_27944]:
                                                mem[s + _27944 + 292] = mem[s + _27944 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27944 + 260 len (32 * mem[_27944]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24381 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24381] = 26
                                            mem[_24381 + 32] = 'SafeMath: division by zero'
                                            _24907 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24907] = 26
                                            mem[_24907 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24907 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28953 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28953]
                                            mem[_28953 + 32] = stor8
                                            require 1 < mem[_28953]
                                            mem[_28953 + 64] = stor7
                                            mem[_28953 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28953 + 100] = ext_call.return_data[0]
                                            mem[_28953 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28953 + 196] = this.address
                                            mem[_28953 + 228] = block.timestamp + 120
                                            mem[_28953 + 164] = 160
                                            mem[_28953 + 260] = mem[_28953]
                                            s = 0
                                            while s < 32 * mem[_28953]:
                                                mem[s + _28953 + 292] = mem[s + _28953 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28953 + 260 len (32 * mem[_28953]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18809 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18809] = 26
                                    mem[_18809 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19769 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19769] = 26
                                        mem[_19769 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19769 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24187 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24187] = 26
                                            mem[_24187 + 32] = 'SafeMath: division by zero'
                                            _24809 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24809] = 26
                                            mem[_24809 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24809 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27938 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27938]
                                            mem[_27938 + 32] = stor8
                                            require 1 < mem[_27938]
                                            mem[_27938 + 64] = stor7
                                            mem[_27938 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27938 + 100] = ext_call.return_data[0]
                                            mem[_27938 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27938 + 196] = this.address
                                            mem[_27938 + 228] = block.timestamp + 120
                                            mem[_27938 + 164] = 160
                                            mem[_27938 + 260] = mem[_27938]
                                            s = 0
                                            while s < 32 * mem[_27938]:
                                                mem[s + _27938 + 292] = mem[s + _27938 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27938 + 260 len (32 * mem[_27938]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24380 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24380] = 26
                                            mem[_24380 + 32] = 'SafeMath: division by zero'
                                            _24906 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24906] = 26
                                            mem[_24906 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24906 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28947 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28947]
                                            mem[_28947 + 32] = stor8
                                            require 1 < mem[_28947]
                                            mem[_28947 + 64] = stor7
                                            mem[_28947 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28947 + 100] = ext_call.return_data[0]
                                            mem[_28947 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28947 + 196] = this.address
                                            mem[_28947 + 228] = block.timestamp + 120
                                            mem[_28947 + 164] = 160
                                            mem[_28947 + 260] = mem[_28947]
                                            s = 0
                                            while s < 32 * mem[_28947]:
                                                mem[s + _28947 + 292] = mem[s + _28947 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28947 + 260 len (32 * mem[_28947]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24618 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24618] = 26
                                        mem[_24618 + 32] = 'SafeMath: division by zero'
                                        _25194 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25194] = 26
                                        mem[_25194 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25194 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30001 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30001]
                                        mem[_30001 + 32] = stor8
                                        require 1 < mem[_30001]
                                        mem[_30001 + 64] = stor7
                                        mem[_30001 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30001 + 100] = ext_call.return_data[0]
                                        mem[_30001 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30001 + 196] = this.address
                                        mem[_30001 + 228] = block.timestamp + 120
                                        mem[_30001 + 164] = 160
                                        mem[_30001 + 260] = mem[_30001]
                                        s = 0
                                        while s < 32 * mem[_30001]:
                                            mem[s + _30001 + 292] = mem[s + _30001 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30001 + 260 len (32 * mem[_30001]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30001]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19817 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19817] = 26
                                    mem[_19817 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19817 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24379 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24379] = 26
                                        mem[_24379 + 32] = 'SafeMath: division by zero'
                                        _24905 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24905] = 26
                                        mem[_24905 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24905 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28941 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28941]
                                        mem[_28941 + 32] = stor8
                                        require 1 < mem[_28941]
                                        mem[_28941 + 64] = stor7
                                        mem[_28941 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28941 + 100] = ext_call.return_data[0]
                                        mem[_28941 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28941 + 196] = this.address
                                        mem[_28941 + 228] = block.timestamp + 120
                                        mem[_28941 + 164] = 160
                                        mem[_28941 + 260] = mem[_28941]
                                        s = 0
                                        while s < 32 * mem[_28941]:
                                            mem[s + _28941 + 292] = mem[s + _28941 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28941 + 260 len (32 * mem[_28941]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24617 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24617] = 26
                                            mem[_24617 + 32] = 'SafeMath: division by zero'
                                            _25193 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25193] = 26
                                            mem[_25193 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25193 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29995 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29995]
                                            mem[_29995 + 32] = stor8
                                            require 1 < mem[_29995]
                                            mem[_29995 + 64] = stor7
                                            mem[_29995 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29995 + 100] = ext_call.return_data[0]
                                            mem[_29995 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29995 + 196] = this.address
                                            mem[_29995 + 228] = block.timestamp + 120
                                            mem[_29995 + 164] = 160
                                            mem[_29995 + 260] = mem[_29995]
                                            s = 0
                                            while s < 32 * mem[_29995]:
                                                mem[s + _29995 + 292] = mem[s + _29995 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29995 + 260 len (32 * mem[_29995]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29995]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24713 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24713] = 26
                                        mem[_24713 + 32] = 'SafeMath: division by zero'
                                        _25625 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25625] = 26
                                        mem[_25625 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25625 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30761 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30761]
                                        mem[_30761 + 32] = stor8
                                        require 1 < mem[_30761]
                                        mem[_30761 + 64] = stor7
                                        mem[_30761 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30761 + 100] = ext_call.return_data[0]
                                        mem[_30761 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30761 + 196] = this.address
                                        mem[_30761 + 228] = block.timestamp + 120
                                        mem[_30761 + 164] = 160
                                        mem[_30761 + 260] = mem[_30761]
                                        s = 0
                                        while s < 32 * mem[_30761]:
                                            mem[s + _30761 + 292] = mem[s + _30761 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30761 + 260 len (32 * mem[_30761]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
    else:
        if msg.sender == strategistAddress:
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor12)
            staticcall stor12.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
            staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17768 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17768] = 30
                                    mem[_17768 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17990 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17990 + 68] = mem[idx + _17768 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17990 + 68] = mem[_17990 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17990 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18792 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18792] = 26
                                        mem[_18792 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19720 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19720] = 26
                                        mem[_19720 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19720 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24136 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24136] = 26
                                            mem[_24136 + 32] = 'SafeMath: division by zero'
                                            _24792 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24792] = 26
                                            mem[_24792 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24792 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27621 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27621]
                                            mem[_27621 + 32] = stor8
                                            require 1 < mem[_27621]
                                            mem[_27621 + 64] = stor7
                                            mem[_27621 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27621 + 100] = ext_call.return_data[0]
                                            mem[_27621 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27621 + 196] = this.address
                                            mem[_27621 + 228] = block.timestamp + 120
                                            mem[_27621 + 164] = 160
                                            mem[_27621 + 260] = mem[_27621]
                                            s = 0
                                            while s < 32 * mem[_27621]:
                                                mem[s + _27621 + 292] = mem[s + _27621 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27621 + 260 len (32 * mem[_27621]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24312 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24312] = 26
                                                mem[_24312 + 32] = 'SafeMath: division by zero'
                                                _24872 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24872] = 26
                                                mem[_24872 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24872 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28595 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28595]
                                                mem[_28595 + 32] = stor8
                                                require 1 < mem[_28595]
                                                mem[_28595 + 64] = stor7
                                                mem[_28595 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28595 + 100] = ext_call.return_data[0]
                                                mem[_28595 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28595 + 196] = this.address
                                                mem[_28595 + 228] = block.timestamp + 120
                                                mem[_28595 + 164] = 160
                                                mem[_28595 + 260] = mem[_28595]
                                                s = 0
                                                while s < 32 * mem[_28595]:
                                                    mem[s + _28595 + 292] = mem[s + _28595 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28595 + 260 len (32 * mem[_28595]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24536 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24536] = 26
                                                mem[_24536 + 32] = 'SafeMath: division by zero'
                                                _25093 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25093] = 26
                                                mem[_25093 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25093 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29635 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29635]
                                                mem[_29635 + 32] = stor8
                                                require 1 < mem[_29635]
                                                mem[_29635 + 64] = stor7
                                                mem[_29635 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29635 + 100] = ext_call.return_data[0]
                                                mem[_29635 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29635 + 196] = this.address
                                                mem[_29635 + 228] = block.timestamp + 120
                                                mem[_29635 + 164] = 160
                                                mem[_29635 + 260] = mem[_29635]
                                                s = 0
                                                while s < 32 * mem[_29635]:
                                                    mem[s + _29635 + 292] = mem[s + _29635 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29635 + 260 len (32 * mem[_29635]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18840 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18840] = 26
                                        mem[_18840 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19800 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19800] = 26
                                            mem[_19800 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19800 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24311 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24311] = 26
                                                mem[_24311 + 32] = 'SafeMath: division by zero'
                                                _24871 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24871] = 26
                                                mem[_24871 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24871 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28589 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28589]
                                                mem[_28589 + 32] = stor8
                                                require 1 < mem[_28589]
                                                mem[_28589 + 64] = stor7
                                                mem[_28589 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28589 + 100] = ext_call.return_data[0]
                                                mem[_28589 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28589 + 196] = this.address
                                                mem[_28589 + 228] = block.timestamp + 120
                                                mem[_28589 + 164] = 160
                                                mem[_28589 + 260] = mem[_28589]
                                                s = 0
                                                while s < 32 * mem[_28589]:
                                                    mem[s + _28589 + 292] = mem[s + _28589 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28589 + 260 len (32 * mem[_28589]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24535 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24535] = 26
                                                mem[_24535 + 32] = 'SafeMath: division by zero'
                                                _25092 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25092] = 26
                                                mem[_25092 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25092 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29629 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29629]
                                                mem[_29629 + 32] = stor8
                                                require 1 < mem[_29629]
                                                mem[_29629 + 64] = stor7
                                                mem[_29629 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29629 + 100] = ext_call.return_data[0]
                                                mem[_29629 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29629 + 196] = this.address
                                                mem[_29629 + 228] = block.timestamp + 120
                                                mem[_29629 + 164] = 160
                                                mem[_29629 + 260] = mem[_29629]
                                                s = 0
                                                while s < 32 * mem[_29629]:
                                                    mem[s + _29629 + 292] = mem[s + _29629 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29629 + 260 len (32 * mem[_29629]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24680 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24680] = 26
                                            mem[_24680 + 32] = 'SafeMath: division by zero'
                                            _25473 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25473] = 26
                                            mem[_25473 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25473 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30497 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30497]
                                            mem[_30497 + 32] = stor8
                                            require 1 < mem[_30497]
                                            mem[_30497 + 64] = stor7
                                            mem[_30497 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30497 + 100] = ext_call.return_data[0]
                                            mem[_30497 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30497 + 196] = this.address
                                            mem[_30497 + 228] = block.timestamp + 120
                                            mem[_30497 + 164] = 160
                                            mem[_30497 + 260] = mem[_30497]
                                            s = 0
                                            while s < 32 * mem[_30497]:
                                                mem[s + _30497 + 292] = mem[s + _30497 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30497 + 260 len (32 * mem[_30497]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30497]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19941 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19941] = 26
                                        mem[_19941 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19941 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24534 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24534] = 26
                                            mem[_24534 + 32] = 'SafeMath: division by zero'
                                            _25091 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25091] = 26
                                            mem[_25091 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25091 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29623 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29623]
                                            mem[_29623 + 32] = stor8
                                            require 1 < mem[_29623]
                                            mem[_29623 + 64] = stor7
                                            mem[_29623 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29623 + 100] = ext_call.return_data[0]
                                            mem[_29623 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29623 + 196] = this.address
                                            mem[_29623 + 228] = block.timestamp + 120
                                            mem[_29623 + 164] = 160
                                            mem[_29623 + 260] = mem[_29623]
                                            s = 0
                                            while s < 32 * mem[_29623]:
                                                mem[s + _29623 + 292] = mem[s + _29623 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29623 + 260 len (32 * mem[_29623]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24679 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24679] = 26
                                                mem[_24679 + 32] = 'SafeMath: division by zero'
                                                _25472 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25472] = 26
                                                mem[_25472 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25472 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30491 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30491]
                                                mem[_30491 + 32] = stor8
                                                require 1 < mem[_30491]
                                                mem[_30491 + 64] = stor7
                                                mem[_30491 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30491 + 100] = ext_call.return_data[0]
                                                mem[_30491 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30491 + 196] = this.address
                                                mem[_30491 + 228] = block.timestamp + 120
                                                mem[_30491 + 164] = 160
                                                mem[_30491 + 260] = mem[_30491]
                                                s = 0
                                                while s < 32 * mem[_30491]:
                                                    mem[s + _30491 + 292] = mem[s + _30491 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30491 + 260 len (32 * mem[_30491]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30491]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24744 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24744] = 26
                                            mem[_24744 + 32] = 'SafeMath: division by zero'
                                            _26059 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26059] = 26
                                            mem[_26059 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26059 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31009 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31009]
                                            mem[_31009 + 32] = stor8
                                            require 1 < mem[_31009]
                                            mem[_31009 + 64] = stor7
                                            mem[_31009 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31009 + 100] = ext_call.return_data[0]
                                            mem[_31009 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31009 + 196] = this.address
                                            mem[_31009 + 228] = block.timestamp + 120
                                            mem[_31009 + 164] = 160
                                            mem[_31009 + 260] = mem[_31009]
                                            s = 0
                                            while s < 32 * mem[_31009]:
                                                mem[s + _31009 + 292] = mem[s + _31009 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31009 + 260 len (32 * mem[_31009]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17766 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17766] = 30
                                    mem[_17766 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17984 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17984 + 68] = mem[idx + _17766 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17984 + 68] = mem[_17984 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17984 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18791 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18791] = 26
                                        mem[_18791 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19717 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19717] = 26
                                        mem[_19717 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19717 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24133 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24133] = 26
                                            mem[_24133 + 32] = 'SafeMath: division by zero'
                                            _24791 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24791] = 26
                                            mem[_24791 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24791 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27602 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27602]
                                            mem[_27602 + 32] = stor8
                                            require 1 < mem[_27602]
                                            mem[_27602 + 64] = stor7
                                            mem[_27602 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27602 + 100] = ext_call.return_data[0]
                                            mem[_27602 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27602 + 196] = this.address
                                            mem[_27602 + 228] = block.timestamp + 120
                                            mem[_27602 + 164] = 160
                                            mem[_27602 + 260] = mem[_27602]
                                            s = 0
                                            while s < 32 * mem[_27602]:
                                                mem[s + _27602 + 292] = mem[s + _27602 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27602 + 260 len (32 * mem[_27602]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24308 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24308] = 26
                                                mem[_24308 + 32] = 'SafeMath: division by zero'
                                                _24870 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24870] = 26
                                                mem[_24870 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24870 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28574 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28574]
                                                mem[_28574 + 32] = stor8
                                                require 1 < mem[_28574]
                                                mem[_28574 + 64] = stor7
                                                mem[_28574 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28574 + 100] = ext_call.return_data[0]
                                                mem[_28574 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28574 + 196] = this.address
                                                mem[_28574 + 228] = block.timestamp + 120
                                                mem[_28574 + 164] = 160
                                                mem[_28574 + 260] = mem[_28574]
                                                s = 0
                                                while s < 32 * mem[_28574]:
                                                    mem[s + _28574 + 292] = mem[s + _28574 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28574 + 260 len (32 * mem[_28574]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24531 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24531] = 26
                                                mem[_24531 + 32] = 'SafeMath: division by zero'
                                                _25087 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25087] = 26
                                                mem[_25087 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25087 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29613 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29613]
                                                mem[_29613 + 32] = stor8
                                                require 1 < mem[_29613]
                                                mem[_29613 + 64] = stor7
                                                mem[_29613 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29613 + 100] = ext_call.return_data[0]
                                                mem[_29613 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29613 + 196] = this.address
                                                mem[_29613 + 228] = block.timestamp + 120
                                                mem[_29613 + 164] = 160
                                                mem[_29613 + 260] = mem[_29613]
                                                s = 0
                                                while s < 32 * mem[_29613]:
                                                    mem[s + _29613 + 292] = mem[s + _29613 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29613 + 260 len (32 * mem[_29613]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18839 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18839] = 26
                                        mem[_18839 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19799 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19799] = 26
                                            mem[_19799 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19799 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24307 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24307] = 26
                                                mem[_24307 + 32] = 'SafeMath: division by zero'
                                                _24869 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24869] = 26
                                                mem[_24869 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24869 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28568 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28568]
                                                mem[_28568 + 32] = stor8
                                                require 1 < mem[_28568]
                                                mem[_28568 + 64] = stor7
                                                mem[_28568 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28568 + 100] = ext_call.return_data[0]
                                                mem[_28568 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28568 + 196] = this.address
                                                mem[_28568 + 228] = block.timestamp + 120
                                                mem[_28568 + 164] = 160
                                                mem[_28568 + 260] = mem[_28568]
                                                s = 0
                                                while s < 32 * mem[_28568]:
                                                    mem[s + _28568 + 292] = mem[s + _28568 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28568 + 260 len (32 * mem[_28568]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24530 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24530] = 26
                                                mem[_24530 + 32] = 'SafeMath: division by zero'
                                                _25086 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25086] = 26
                                                mem[_25086 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25086 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29607 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29607]
                                                mem[_29607 + 32] = stor8
                                                require 1 < mem[_29607]
                                                mem[_29607 + 64] = stor7
                                                mem[_29607 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29607 + 100] = ext_call.return_data[0]
                                                mem[_29607 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29607 + 196] = this.address
                                                mem[_29607 + 228] = block.timestamp + 120
                                                mem[_29607 + 164] = 160
                                                mem[_29607 + 260] = mem[_29607]
                                                s = 0
                                                while s < 32 * mem[_29607]:
                                                    mem[s + _29607 + 292] = mem[s + _29607 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29607 + 260 len (32 * mem[_29607]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24678 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24678] = 26
                                            mem[_24678 + 32] = 'SafeMath: division by zero'
                                            _25464 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25464] = 26
                                            mem[_25464 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25464 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30481 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30481]
                                            mem[_30481 + 32] = stor8
                                            require 1 < mem[_30481]
                                            mem[_30481 + 64] = stor7
                                            mem[_30481 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30481 + 100] = ext_call.return_data[0]
                                            mem[_30481 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30481 + 196] = this.address
                                            mem[_30481 + 228] = block.timestamp + 120
                                            mem[_30481 + 164] = 160
                                            mem[_30481 + 260] = mem[_30481]
                                            s = 0
                                            while s < 32 * mem[_30481]:
                                                mem[s + _30481 + 292] = mem[s + _30481 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30481 + 260 len (32 * mem[_30481]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30481]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19937 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19937] = 26
                                        mem[_19937 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19937 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24529 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24529] = 26
                                            mem[_24529 + 32] = 'SafeMath: division by zero'
                                            _25085 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25085] = 26
                                            mem[_25085 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25085 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29601 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29601]
                                            mem[_29601 + 32] = stor8
                                            require 1 < mem[_29601]
                                            mem[_29601 + 64] = stor7
                                            mem[_29601 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29601 + 100] = ext_call.return_data[0]
                                            mem[_29601 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29601 + 196] = this.address
                                            mem[_29601 + 228] = block.timestamp + 120
                                            mem[_29601 + 164] = 160
                                            mem[_29601 + 260] = mem[_29601]
                                            s = 0
                                            while s < 32 * mem[_29601]:
                                                mem[s + _29601 + 292] = mem[s + _29601 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29601 + 260 len (32 * mem[_29601]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24677 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24677] = 26
                                                mem[_24677 + 32] = 'SafeMath: division by zero'
                                                _25463 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25463] = 26
                                                mem[_25463 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25463 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30475 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30475]
                                                mem[_30475 + 32] = stor8
                                                require 1 < mem[_30475]
                                                mem[_30475 + 64] = stor7
                                                mem[_30475 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30475 + 100] = ext_call.return_data[0]
                                                mem[_30475 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30475 + 196] = this.address
                                                mem[_30475 + 228] = block.timestamp + 120
                                                mem[_30475 + 164] = 160
                                                mem[_30475 + 260] = mem[_30475]
                                                s = 0
                                                while s < 32 * mem[_30475]:
                                                    mem[s + _30475 + 292] = mem[s + _30475 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30475 + 260 len (32 * mem[_30475]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30475]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24743 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24743] = 26
                                            mem[_24743 + 32] = 'SafeMath: division by zero'
                                            _26045 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26045] = 26
                                            mem[_26045 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26045 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31001 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31001]
                                            mem[_31001 + 32] = stor8
                                            require 1 < mem[_31001]
                                            mem[_31001 + 64] = stor7
                                            mem[_31001 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31001 + 100] = ext_call.return_data[0]
                                            mem[_31001 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31001 + 196] = this.address
                                            mem[_31001 + 228] = block.timestamp + 120
                                            mem[_31001 + 164] = 160
                                            mem[_31001 + 260] = mem[_31001]
                                            s = 0
                                            while s < 32 * mem[_31001]:
                                                mem[s + _31001 + 292] = mem[s + _31001 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31001 + 260 len (32 * mem[_31001]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17764 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17764] = 30
                                    mem[_17764 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17978 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17978 + 68] = mem[idx + _17764 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17978 + 68] = mem[_17978 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17978 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18790 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18790] = 26
                                        mem[_18790 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19714 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19714] = 26
                                        mem[_19714 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19714 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24130 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24130] = 26
                                            mem[_24130 + 32] = 'SafeMath: division by zero'
                                            _24790 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24790] = 26
                                            mem[_24790 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24790 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27583 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27583]
                                            mem[_27583 + 32] = stor8
                                            require 1 < mem[_27583]
                                            mem[_27583 + 64] = stor7
                                            mem[_27583 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27583 + 100] = ext_call.return_data[0]
                                            mem[_27583 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27583 + 196] = this.address
                                            mem[_27583 + 228] = block.timestamp + 120
                                            mem[_27583 + 164] = 160
                                            mem[_27583 + 260] = mem[_27583]
                                            s = 0
                                            while s < 32 * mem[_27583]:
                                                mem[s + _27583 + 292] = mem[s + _27583 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27583 + 260 len (32 * mem[_27583]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24304 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24304] = 26
                                                mem[_24304 + 32] = 'SafeMath: division by zero'
                                                _24868 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24868] = 26
                                                mem[_24868 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24868 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28553 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28553]
                                                mem[_28553 + 32] = stor8
                                                require 1 < mem[_28553]
                                                mem[_28553 + 64] = stor7
                                                mem[_28553 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28553 + 100] = ext_call.return_data[0]
                                                mem[_28553 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28553 + 196] = this.address
                                                mem[_28553 + 228] = block.timestamp + 120
                                                mem[_28553 + 164] = 160
                                                mem[_28553 + 260] = mem[_28553]
                                                s = 0
                                                while s < 32 * mem[_28553]:
                                                    mem[s + _28553 + 292] = mem[s + _28553 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28553 + 260 len (32 * mem[_28553]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24526 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24526] = 26
                                                mem[_24526 + 32] = 'SafeMath: division by zero'
                                                _25081 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25081] = 26
                                                mem[_25081 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25081 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29591 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29591]
                                                mem[_29591 + 32] = stor8
                                                require 1 < mem[_29591]
                                                mem[_29591 + 64] = stor7
                                                mem[_29591 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29591 + 100] = ext_call.return_data[0]
                                                mem[_29591 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29591 + 196] = this.address
                                                mem[_29591 + 228] = block.timestamp + 120
                                                mem[_29591 + 164] = 160
                                                mem[_29591 + 260] = mem[_29591]
                                                s = 0
                                                while s < 32 * mem[_29591]:
                                                    mem[s + _29591 + 292] = mem[s + _29591 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29591 + 260 len (32 * mem[_29591]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18838 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18838] = 26
                                        mem[_18838 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19798 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19798] = 26
                                            mem[_19798 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19798 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24303 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24303] = 26
                                                mem[_24303 + 32] = 'SafeMath: division by zero'
                                                _24867 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24867] = 26
                                                mem[_24867 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24867 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28547 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28547]
                                                mem[_28547 + 32] = stor8
                                                require 1 < mem[_28547]
                                                mem[_28547 + 64] = stor7
                                                mem[_28547 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28547 + 100] = ext_call.return_data[0]
                                                mem[_28547 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28547 + 196] = this.address
                                                mem[_28547 + 228] = block.timestamp + 120
                                                mem[_28547 + 164] = 160
                                                mem[_28547 + 260] = mem[_28547]
                                                s = 0
                                                while s < 32 * mem[_28547]:
                                                    mem[s + _28547 + 292] = mem[s + _28547 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28547 + 260 len (32 * mem[_28547]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24525 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24525] = 26
                                                mem[_24525 + 32] = 'SafeMath: division by zero'
                                                _25080 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25080] = 26
                                                mem[_25080 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25080 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29585 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29585]
                                                mem[_29585 + 32] = stor8
                                                require 1 < mem[_29585]
                                                mem[_29585 + 64] = stor7
                                                mem[_29585 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29585 + 100] = ext_call.return_data[0]
                                                mem[_29585 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29585 + 196] = this.address
                                                mem[_29585 + 228] = block.timestamp + 120
                                                mem[_29585 + 164] = 160
                                                mem[_29585 + 260] = mem[_29585]
                                                s = 0
                                                while s < 32 * mem[_29585]:
                                                    mem[s + _29585 + 292] = mem[s + _29585 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29585 + 260 len (32 * mem[_29585]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24676 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24676] = 26
                                            mem[_24676 + 32] = 'SafeMath: division by zero'
                                            _25455 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25455] = 26
                                            mem[_25455 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25455 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30465 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30465]
                                            mem[_30465 + 32] = stor8
                                            require 1 < mem[_30465]
                                            mem[_30465 + 64] = stor7
                                            mem[_30465 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30465 + 100] = ext_call.return_data[0]
                                            mem[_30465 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30465 + 196] = this.address
                                            mem[_30465 + 228] = block.timestamp + 120
                                            mem[_30465 + 164] = 160
                                            mem[_30465 + 260] = mem[_30465]
                                            s = 0
                                            while s < 32 * mem[_30465]:
                                                mem[s + _30465 + 292] = mem[s + _30465 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30465 + 260 len (32 * mem[_30465]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30465]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19933 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19933] = 26
                                        mem[_19933 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19933 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24524 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24524] = 26
                                            mem[_24524 + 32] = 'SafeMath: division by zero'
                                            _25079 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25079] = 26
                                            mem[_25079 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25079 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29579 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29579]
                                            mem[_29579 + 32] = stor8
                                            require 1 < mem[_29579]
                                            mem[_29579 + 64] = stor7
                                            mem[_29579 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29579 + 100] = ext_call.return_data[0]
                                            mem[_29579 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29579 + 196] = this.address
                                            mem[_29579 + 228] = block.timestamp + 120
                                            mem[_29579 + 164] = 160
                                            mem[_29579 + 260] = mem[_29579]
                                            s = 0
                                            while s < 32 * mem[_29579]:
                                                mem[s + _29579 + 292] = mem[s + _29579 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29579 + 260 len (32 * mem[_29579]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24675 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24675] = 26
                                                mem[_24675 + 32] = 'SafeMath: division by zero'
                                                _25454 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25454] = 26
                                                mem[_25454 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25454 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30459 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30459]
                                                mem[_30459 + 32] = stor8
                                                require 1 < mem[_30459]
                                                mem[_30459 + 64] = stor7
                                                mem[_30459 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30459 + 100] = ext_call.return_data[0]
                                                mem[_30459 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30459 + 196] = this.address
                                                mem[_30459 + 228] = block.timestamp + 120
                                                mem[_30459 + 164] = 160
                                                mem[_30459 + 260] = mem[_30459]
                                                s = 0
                                                while s < 32 * mem[_30459]:
                                                    mem[s + _30459 + 292] = mem[s + _30459 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30459 + 260 len (32 * mem[_30459]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30459]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24742 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24742] = 26
                                            mem[_24742 + 32] = 'SafeMath: division by zero'
                                            _26031 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26031] = 26
                                            mem[_26031 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26031 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30993 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30993]
                                            mem[_30993 + 32] = stor8
                                            require 1 < mem[_30993]
                                            mem[_30993 + 64] = stor7
                                            mem[_30993 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30993 + 100] = ext_call.return_data[0]
                                            mem[_30993 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30993 + 196] = this.address
                                            mem[_30993 + 228] = block.timestamp + 120
                                            mem[_30993 + 164] = 160
                                            mem[_30993 + 260] = mem[_30993]
                                            s = 0
                                            while s < 32 * mem[_30993]:
                                                mem[s + _30993 + 292] = mem[s + _30993 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30993 + 260 len (32 * mem[_30993]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17762 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17762] = 30
                                    mem[_17762 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17972 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17972 + 68] = mem[idx + _17762 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17972 + 68] = mem[_17972 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17972 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18789 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18789] = 26
                                        mem[_18789 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19711 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19711] = 26
                                        mem[_19711 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19711 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24127 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24127] = 26
                                            mem[_24127 + 32] = 'SafeMath: division by zero'
                                            _24789 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24789] = 26
                                            mem[_24789 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24789 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27564 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27564]
                                            mem[_27564 + 32] = stor8
                                            require 1 < mem[_27564]
                                            mem[_27564 + 64] = stor7
                                            mem[_27564 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27564 + 100] = ext_call.return_data[0]
                                            mem[_27564 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27564 + 196] = this.address
                                            mem[_27564 + 228] = block.timestamp + 120
                                            mem[_27564 + 164] = 160
                                            mem[_27564 + 260] = mem[_27564]
                                            s = 0
                                            while s < 32 * mem[_27564]:
                                                mem[s + _27564 + 292] = mem[s + _27564 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27564 + 260 len (32 * mem[_27564]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24300 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24300] = 26
                                                mem[_24300 + 32] = 'SafeMath: division by zero'
                                                _24866 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24866] = 26
                                                mem[_24866 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24866 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28532 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28532]
                                                mem[_28532 + 32] = stor8
                                                require 1 < mem[_28532]
                                                mem[_28532 + 64] = stor7
                                                mem[_28532 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28532 + 100] = ext_call.return_data[0]
                                                mem[_28532 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28532 + 196] = this.address
                                                mem[_28532 + 228] = block.timestamp + 120
                                                mem[_28532 + 164] = 160
                                                mem[_28532 + 260] = mem[_28532]
                                                s = 0
                                                while s < 32 * mem[_28532]:
                                                    mem[s + _28532 + 292] = mem[s + _28532 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28532 + 260 len (32 * mem[_28532]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24521 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24521] = 26
                                                mem[_24521 + 32] = 'SafeMath: division by zero'
                                                _25075 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25075] = 26
                                                mem[_25075 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25075 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29569 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29569]
                                                mem[_29569 + 32] = stor8
                                                require 1 < mem[_29569]
                                                mem[_29569 + 64] = stor7
                                                mem[_29569 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29569 + 100] = ext_call.return_data[0]
                                                mem[_29569 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29569 + 196] = this.address
                                                mem[_29569 + 228] = block.timestamp + 120
                                                mem[_29569 + 164] = 160
                                                mem[_29569 + 260] = mem[_29569]
                                                s = 0
                                                while s < 32 * mem[_29569]:
                                                    mem[s + _29569 + 292] = mem[s + _29569 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29569 + 260 len (32 * mem[_29569]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18837 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18837] = 26
                                        mem[_18837 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19797 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19797] = 26
                                            mem[_19797 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19797 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24299 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24299] = 26
                                                mem[_24299 + 32] = 'SafeMath: division by zero'
                                                _24865 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24865] = 26
                                                mem[_24865 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24865 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28526 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28526]
                                                mem[_28526 + 32] = stor8
                                                require 1 < mem[_28526]
                                                mem[_28526 + 64] = stor7
                                                mem[_28526 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28526 + 100] = ext_call.return_data[0]
                                                mem[_28526 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28526 + 196] = this.address
                                                mem[_28526 + 228] = block.timestamp + 120
                                                mem[_28526 + 164] = 160
                                                mem[_28526 + 260] = mem[_28526]
                                                s = 0
                                                while s < 32 * mem[_28526]:
                                                    mem[s + _28526 + 292] = mem[s + _28526 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28526 + 260 len (32 * mem[_28526]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24520 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24520] = 26
                                                mem[_24520 + 32] = 'SafeMath: division by zero'
                                                _25074 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25074] = 26
                                                mem[_25074 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25074 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29563 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29563]
                                                mem[_29563 + 32] = stor8
                                                require 1 < mem[_29563]
                                                mem[_29563 + 64] = stor7
                                                mem[_29563 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29563 + 100] = ext_call.return_data[0]
                                                mem[_29563 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29563 + 196] = this.address
                                                mem[_29563 + 228] = block.timestamp + 120
                                                mem[_29563 + 164] = 160
                                                mem[_29563 + 260] = mem[_29563]
                                                s = 0
                                                while s < 32 * mem[_29563]:
                                                    mem[s + _29563 + 292] = mem[s + _29563 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29563 + 260 len (32 * mem[_29563]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24674 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24674] = 26
                                            mem[_24674 + 32] = 'SafeMath: division by zero'
                                            _25446 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25446] = 26
                                            mem[_25446 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25446 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30449 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30449]
                                            mem[_30449 + 32] = stor8
                                            require 1 < mem[_30449]
                                            mem[_30449 + 64] = stor7
                                            mem[_30449 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30449 + 100] = ext_call.return_data[0]
                                            mem[_30449 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30449 + 196] = this.address
                                            mem[_30449 + 228] = block.timestamp + 120
                                            mem[_30449 + 164] = 160
                                            mem[_30449 + 260] = mem[_30449]
                                            s = 0
                                            while s < 32 * mem[_30449]:
                                                mem[s + _30449 + 292] = mem[s + _30449 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30449 + 260 len (32 * mem[_30449]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30449]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19929 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19929] = 26
                                        mem[_19929 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19929 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24519 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24519] = 26
                                            mem[_24519 + 32] = 'SafeMath: division by zero'
                                            _25073 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25073] = 26
                                            mem[_25073 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25073 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29557 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29557]
                                            mem[_29557 + 32] = stor8
                                            require 1 < mem[_29557]
                                            mem[_29557 + 64] = stor7
                                            mem[_29557 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29557 + 100] = ext_call.return_data[0]
                                            mem[_29557 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29557 + 196] = this.address
                                            mem[_29557 + 228] = block.timestamp + 120
                                            mem[_29557 + 164] = 160
                                            mem[_29557 + 260] = mem[_29557]
                                            s = 0
                                            while s < 32 * mem[_29557]:
                                                mem[s + _29557 + 292] = mem[s + _29557 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29557 + 260 len (32 * mem[_29557]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24673 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24673] = 26
                                                mem[_24673 + 32] = 'SafeMath: division by zero'
                                                _25445 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25445] = 26
                                                mem[_25445 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25445 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30443 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30443]
                                                mem[_30443 + 32] = stor8
                                                require 1 < mem[_30443]
                                                mem[_30443 + 64] = stor7
                                                mem[_30443 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30443 + 100] = ext_call.return_data[0]
                                                mem[_30443 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30443 + 196] = this.address
                                                mem[_30443 + 228] = block.timestamp + 120
                                                mem[_30443 + 164] = 160
                                                mem[_30443 + 260] = mem[_30443]
                                                s = 0
                                                while s < 32 * mem[_30443]:
                                                    mem[s + _30443 + 292] = mem[s + _30443 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30443 + 260 len (32 * mem[_30443]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30443]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24741 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24741] = 26
                                            mem[_24741 + 32] = 'SafeMath: division by zero'
                                            _26017 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26017] = 26
                                            mem[_26017 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26017 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30985 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30985]
                                            mem[_30985 + 32] = stor8
                                            require 1 < mem[_30985]
                                            mem[_30985 + 64] = stor7
                                            mem[_30985 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30985 + 100] = ext_call.return_data[0]
                                            mem[_30985 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30985 + 196] = this.address
                                            mem[_30985 + 228] = block.timestamp + 120
                                            mem[_30985 + 164] = 160
                                            mem[_30985 + 260] = mem[_30985]
                                            s = 0
                                            while s < 32 * mem[_30985]:
                                                mem[s + _30985 + 292] = mem[s + _30985 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30985 + 260 len (32 * mem[_30985]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17760 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17760] = 30
                                    mem[_17760 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17966 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17966 + 68] = mem[idx + _17760 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17966 + 68] = mem[_17966 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17966 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18788 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18788] = 26
                                        mem[_18788 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19708 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19708] = 26
                                        mem[_19708 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19708 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24124 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24124] = 26
                                            mem[_24124 + 32] = 'SafeMath: division by zero'
                                            _24788 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24788] = 26
                                            mem[_24788 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24788 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27545 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27545]
                                            mem[_27545 + 32] = stor8
                                            require 1 < mem[_27545]
                                            mem[_27545 + 64] = stor7
                                            mem[_27545 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27545 + 100] = ext_call.return_data[0]
                                            mem[_27545 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27545 + 196] = this.address
                                            mem[_27545 + 228] = block.timestamp + 120
                                            mem[_27545 + 164] = 160
                                            mem[_27545 + 260] = mem[_27545]
                                            s = 0
                                            while s < 32 * mem[_27545]:
                                                mem[s + _27545 + 292] = mem[s + _27545 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27545 + 260 len (32 * mem[_27545]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24296 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24296] = 26
                                                mem[_24296 + 32] = 'SafeMath: division by zero'
                                                _24864 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24864] = 26
                                                mem[_24864 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24864 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28511 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28511]
                                                mem[_28511 + 32] = stor8
                                                require 1 < mem[_28511]
                                                mem[_28511 + 64] = stor7
                                                mem[_28511 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28511 + 100] = ext_call.return_data[0]
                                                mem[_28511 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28511 + 196] = this.address
                                                mem[_28511 + 228] = block.timestamp + 120
                                                mem[_28511 + 164] = 160
                                                mem[_28511 + 260] = mem[_28511]
                                                s = 0
                                                while s < 32 * mem[_28511]:
                                                    mem[s + _28511 + 292] = mem[s + _28511 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28511 + 260 len (32 * mem[_28511]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24516 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24516] = 26
                                                mem[_24516 + 32] = 'SafeMath: division by zero'
                                                _25069 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25069] = 26
                                                mem[_25069 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25069 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29547 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29547]
                                                mem[_29547 + 32] = stor8
                                                require 1 < mem[_29547]
                                                mem[_29547 + 64] = stor7
                                                mem[_29547 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29547 + 100] = ext_call.return_data[0]
                                                mem[_29547 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29547 + 196] = this.address
                                                mem[_29547 + 228] = block.timestamp + 120
                                                mem[_29547 + 164] = 160
                                                mem[_29547 + 260] = mem[_29547]
                                                s = 0
                                                while s < 32 * mem[_29547]:
                                                    mem[s + _29547 + 292] = mem[s + _29547 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29547 + 260 len (32 * mem[_29547]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18836 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18836] = 26
                                        mem[_18836 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19796 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19796] = 26
                                            mem[_19796 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19796 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24295 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24295] = 26
                                                mem[_24295 + 32] = 'SafeMath: division by zero'
                                                _24863 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24863] = 26
                                                mem[_24863 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24863 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28505 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28505]
                                                mem[_28505 + 32] = stor8
                                                require 1 < mem[_28505]
                                                mem[_28505 + 64] = stor7
                                                mem[_28505 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28505 + 100] = ext_call.return_data[0]
                                                mem[_28505 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28505 + 196] = this.address
                                                mem[_28505 + 228] = block.timestamp + 120
                                                mem[_28505 + 164] = 160
                                                mem[_28505 + 260] = mem[_28505]
                                                s = 0
                                                while s < 32 * mem[_28505]:
                                                    mem[s + _28505 + 292] = mem[s + _28505 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28505 + 260 len (32 * mem[_28505]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24515 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24515] = 26
                                                mem[_24515 + 32] = 'SafeMath: division by zero'
                                                _25068 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25068] = 26
                                                mem[_25068 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25068 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29541 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29541]
                                                mem[_29541 + 32] = stor8
                                                require 1 < mem[_29541]
                                                mem[_29541 + 64] = stor7
                                                mem[_29541 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29541 + 100] = ext_call.return_data[0]
                                                mem[_29541 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29541 + 196] = this.address
                                                mem[_29541 + 228] = block.timestamp + 120
                                                mem[_29541 + 164] = 160
                                                mem[_29541 + 260] = mem[_29541]
                                                s = 0
                                                while s < 32 * mem[_29541]:
                                                    mem[s + _29541 + 292] = mem[s + _29541 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29541 + 260 len (32 * mem[_29541]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24672 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24672] = 26
                                            mem[_24672 + 32] = 'SafeMath: division by zero'
                                            _25437 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25437] = 26
                                            mem[_25437 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25437 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30433 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30433]
                                            mem[_30433 + 32] = stor8
                                            require 1 < mem[_30433]
                                            mem[_30433 + 64] = stor7
                                            mem[_30433 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30433 + 100] = ext_call.return_data[0]
                                            mem[_30433 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30433 + 196] = this.address
                                            mem[_30433 + 228] = block.timestamp + 120
                                            mem[_30433 + 164] = 160
                                            mem[_30433 + 260] = mem[_30433]
                                            s = 0
                                            while s < 32 * mem[_30433]:
                                                mem[s + _30433 + 292] = mem[s + _30433 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30433 + 260 len (32 * mem[_30433]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30433]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19925 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19925] = 26
                                        mem[_19925 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19925 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24514 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24514] = 26
                                            mem[_24514 + 32] = 'SafeMath: division by zero'
                                            _25067 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25067] = 26
                                            mem[_25067 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25067 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29535 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29535]
                                            mem[_29535 + 32] = stor8
                                            require 1 < mem[_29535]
                                            mem[_29535 + 64] = stor7
                                            mem[_29535 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29535 + 100] = ext_call.return_data[0]
                                            mem[_29535 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29535 + 196] = this.address
                                            mem[_29535 + 228] = block.timestamp + 120
                                            mem[_29535 + 164] = 160
                                            mem[_29535 + 260] = mem[_29535]
                                            s = 0
                                            while s < 32 * mem[_29535]:
                                                mem[s + _29535 + 292] = mem[s + _29535 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29535 + 260 len (32 * mem[_29535]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24671 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24671] = 26
                                                mem[_24671 + 32] = 'SafeMath: division by zero'
                                                _25436 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25436] = 26
                                                mem[_25436 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25436 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30427 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30427]
                                                mem[_30427 + 32] = stor8
                                                require 1 < mem[_30427]
                                                mem[_30427 + 64] = stor7
                                                mem[_30427 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30427 + 100] = ext_call.return_data[0]
                                                mem[_30427 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30427 + 196] = this.address
                                                mem[_30427 + 228] = block.timestamp + 120
                                                mem[_30427 + 164] = 160
                                                mem[_30427 + 260] = mem[_30427]
                                                s = 0
                                                while s < 32 * mem[_30427]:
                                                    mem[s + _30427 + 292] = mem[s + _30427 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30427 + 260 len (32 * mem[_30427]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30427]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24740 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24740] = 26
                                            mem[_24740 + 32] = 'SafeMath: division by zero'
                                            _26003 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26003] = 26
                                            mem[_26003 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26003 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30977 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30977]
                                            mem[_30977 + 32] = stor8
                                            require 1 < mem[_30977]
                                            mem[_30977 + 64] = stor7
                                            mem[_30977 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30977 + 100] = ext_call.return_data[0]
                                            mem[_30977 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30977 + 196] = this.address
                                            mem[_30977 + 228] = block.timestamp + 120
                                            mem[_30977 + 164] = 160
                                            mem[_30977 + 260] = mem[_30977]
                                            s = 0
                                            while s < 32 * mem[_30977]:
                                                mem[s + _30977 + 292] = mem[s + _30977 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30977 + 260 len (32 * mem[_30977]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17758 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17758] = 30
                                    mem[_17758 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17960 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17960 + 68] = mem[idx + _17758 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17960 + 68] = mem[_17960 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17960 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18787 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18787] = 26
                                        mem[_18787 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19705 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19705] = 26
                                        mem[_19705 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19705 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24121 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24121] = 26
                                            mem[_24121 + 32] = 'SafeMath: division by zero'
                                            _24787 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24787] = 26
                                            mem[_24787 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24787 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27526 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27526]
                                            mem[_27526 + 32] = stor8
                                            require 1 < mem[_27526]
                                            mem[_27526 + 64] = stor7
                                            mem[_27526 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27526 + 100] = ext_call.return_data[0]
                                            mem[_27526 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27526 + 196] = this.address
                                            mem[_27526 + 228] = block.timestamp + 120
                                            mem[_27526 + 164] = 160
                                            mem[_27526 + 260] = mem[_27526]
                                            s = 0
                                            while s < 32 * mem[_27526]:
                                                mem[s + _27526 + 292] = mem[s + _27526 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27526 + 260 len (32 * mem[_27526]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24292 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24292] = 26
                                                mem[_24292 + 32] = 'SafeMath: division by zero'
                                                _24862 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24862] = 26
                                                mem[_24862 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24862 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28490 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28490]
                                                mem[_28490 + 32] = stor8
                                                require 1 < mem[_28490]
                                                mem[_28490 + 64] = stor7
                                                mem[_28490 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28490 + 100] = ext_call.return_data[0]
                                                mem[_28490 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28490 + 196] = this.address
                                                mem[_28490 + 228] = block.timestamp + 120
                                                mem[_28490 + 164] = 160
                                                mem[_28490 + 260] = mem[_28490]
                                                s = 0
                                                while s < 32 * mem[_28490]:
                                                    mem[s + _28490 + 292] = mem[s + _28490 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28490 + 260 len (32 * mem[_28490]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24511 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24511] = 26
                                                mem[_24511 + 32] = 'SafeMath: division by zero'
                                                _25063 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25063] = 26
                                                mem[_25063 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25063 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29525 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29525]
                                                mem[_29525 + 32] = stor8
                                                require 1 < mem[_29525]
                                                mem[_29525 + 64] = stor7
                                                mem[_29525 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29525 + 100] = ext_call.return_data[0]
                                                mem[_29525 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29525 + 196] = this.address
                                                mem[_29525 + 228] = block.timestamp + 120
                                                mem[_29525 + 164] = 160
                                                mem[_29525 + 260] = mem[_29525]
                                                s = 0
                                                while s < 32 * mem[_29525]:
                                                    mem[s + _29525 + 292] = mem[s + _29525 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29525 + 260 len (32 * mem[_29525]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18835 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18835] = 26
                                        mem[_18835 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19795 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19795] = 26
                                            mem[_19795 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19795 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24291 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24291] = 26
                                                mem[_24291 + 32] = 'SafeMath: division by zero'
                                                _24861 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24861] = 26
                                                mem[_24861 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24861 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28484 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28484]
                                                mem[_28484 + 32] = stor8
                                                require 1 < mem[_28484]
                                                mem[_28484 + 64] = stor7
                                                mem[_28484 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28484 + 100] = ext_call.return_data[0]
                                                mem[_28484 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28484 + 196] = this.address
                                                mem[_28484 + 228] = block.timestamp + 120
                                                mem[_28484 + 164] = 160
                                                mem[_28484 + 260] = mem[_28484]
                                                s = 0
                                                while s < 32 * mem[_28484]:
                                                    mem[s + _28484 + 292] = mem[s + _28484 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28484 + 260 len (32 * mem[_28484]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24510 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24510] = 26
                                                mem[_24510 + 32] = 'SafeMath: division by zero'
                                                _25062 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25062] = 26
                                                mem[_25062 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25062 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29519 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29519]
                                                mem[_29519 + 32] = stor8
                                                require 1 < mem[_29519]
                                                mem[_29519 + 64] = stor7
                                                mem[_29519 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29519 + 100] = ext_call.return_data[0]
                                                mem[_29519 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29519 + 196] = this.address
                                                mem[_29519 + 228] = block.timestamp + 120
                                                mem[_29519 + 164] = 160
                                                mem[_29519 + 260] = mem[_29519]
                                                s = 0
                                                while s < 32 * mem[_29519]:
                                                    mem[s + _29519 + 292] = mem[s + _29519 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29519 + 260 len (32 * mem[_29519]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24670 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24670] = 26
                                            mem[_24670 + 32] = 'SafeMath: division by zero'
                                            _25428 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25428] = 26
                                            mem[_25428 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25428 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30417 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30417]
                                            mem[_30417 + 32] = stor8
                                            require 1 < mem[_30417]
                                            mem[_30417 + 64] = stor7
                                            mem[_30417 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30417 + 100] = ext_call.return_data[0]
                                            mem[_30417 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30417 + 196] = this.address
                                            mem[_30417 + 228] = block.timestamp + 120
                                            mem[_30417 + 164] = 160
                                            mem[_30417 + 260] = mem[_30417]
                                            s = 0
                                            while s < 32 * mem[_30417]:
                                                mem[s + _30417 + 292] = mem[s + _30417 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30417 + 260 len (32 * mem[_30417]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30417]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19921 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19921] = 26
                                        mem[_19921 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19921 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24509 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24509] = 26
                                            mem[_24509 + 32] = 'SafeMath: division by zero'
                                            _25061 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25061] = 26
                                            mem[_25061 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25061 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29513 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29513]
                                            mem[_29513 + 32] = stor8
                                            require 1 < mem[_29513]
                                            mem[_29513 + 64] = stor7
                                            mem[_29513 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29513 + 100] = ext_call.return_data[0]
                                            mem[_29513 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29513 + 196] = this.address
                                            mem[_29513 + 228] = block.timestamp + 120
                                            mem[_29513 + 164] = 160
                                            mem[_29513 + 260] = mem[_29513]
                                            s = 0
                                            while s < 32 * mem[_29513]:
                                                mem[s + _29513 + 292] = mem[s + _29513 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29513 + 260 len (32 * mem[_29513]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24669 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24669] = 26
                                                mem[_24669 + 32] = 'SafeMath: division by zero'
                                                _25427 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25427] = 26
                                                mem[_25427 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25427 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30411 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30411]
                                                mem[_30411 + 32] = stor8
                                                require 1 < mem[_30411]
                                                mem[_30411 + 64] = stor7
                                                mem[_30411 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30411 + 100] = ext_call.return_data[0]
                                                mem[_30411 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30411 + 196] = this.address
                                                mem[_30411 + 228] = block.timestamp + 120
                                                mem[_30411 + 164] = 160
                                                mem[_30411 + 260] = mem[_30411]
                                                s = 0
                                                while s < 32 * mem[_30411]:
                                                    mem[s + _30411 + 292] = mem[s + _30411 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30411 + 260 len (32 * mem[_30411]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30411]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24739 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24739] = 26
                                            mem[_24739 + 32] = 'SafeMath: division by zero'
                                            _25989 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25989] = 26
                                            mem[_25989 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25989 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30969 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30969]
                                            mem[_30969 + 32] = stor8
                                            require 1 < mem[_30969]
                                            mem[_30969 + 64] = stor7
                                            mem[_30969 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30969 + 100] = ext_call.return_data[0]
                                            mem[_30969 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30969 + 196] = this.address
                                            mem[_30969 + 228] = block.timestamp + 120
                                            mem[_30969 + 164] = 160
                                            mem[_30969 + 260] = mem[_30969]
                                            s = 0
                                            while s < 32 * mem[_30969]:
                                                mem[s + _30969 + 292] = mem[s + _30969 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30969 + 260 len (32 * mem[_30969]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17756 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17756] = 30
                                    mem[_17756 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17954 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17954 + 68] = mem[idx + _17756 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17954 + 68] = mem[_17954 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17954 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18786 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18786] = 26
                                        mem[_18786 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19702 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19702] = 26
                                        mem[_19702 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19702 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24118 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24118] = 26
                                            mem[_24118 + 32] = 'SafeMath: division by zero'
                                            _24786 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24786] = 26
                                            mem[_24786 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24786 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27507 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27507]
                                            mem[_27507 + 32] = stor8
                                            require 1 < mem[_27507]
                                            mem[_27507 + 64] = stor7
                                            mem[_27507 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27507 + 100] = ext_call.return_data[0]
                                            mem[_27507 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27507 + 196] = this.address
                                            mem[_27507 + 228] = block.timestamp + 120
                                            mem[_27507 + 164] = 160
                                            mem[_27507 + 260] = mem[_27507]
                                            s = 0
                                            while s < 32 * mem[_27507]:
                                                mem[s + _27507 + 292] = mem[s + _27507 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27507 + 260 len (32 * mem[_27507]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24288 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24288] = 26
                                                mem[_24288 + 32] = 'SafeMath: division by zero'
                                                _24860 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24860] = 26
                                                mem[_24860 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24860 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28469 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28469]
                                                mem[_28469 + 32] = stor8
                                                require 1 < mem[_28469]
                                                mem[_28469 + 64] = stor7
                                                mem[_28469 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28469 + 100] = ext_call.return_data[0]
                                                mem[_28469 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28469 + 196] = this.address
                                                mem[_28469 + 228] = block.timestamp + 120
                                                mem[_28469 + 164] = 160
                                                mem[_28469 + 260] = mem[_28469]
                                                s = 0
                                                while s < 32 * mem[_28469]:
                                                    mem[s + _28469 + 292] = mem[s + _28469 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28469 + 260 len (32 * mem[_28469]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24506 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24506] = 26
                                                mem[_24506 + 32] = 'SafeMath: division by zero'
                                                _25057 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25057] = 26
                                                mem[_25057 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25057 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29503 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29503]
                                                mem[_29503 + 32] = stor8
                                                require 1 < mem[_29503]
                                                mem[_29503 + 64] = stor7
                                                mem[_29503 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29503 + 100] = ext_call.return_data[0]
                                                mem[_29503 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29503 + 196] = this.address
                                                mem[_29503 + 228] = block.timestamp + 120
                                                mem[_29503 + 164] = 160
                                                mem[_29503 + 260] = mem[_29503]
                                                s = 0
                                                while s < 32 * mem[_29503]:
                                                    mem[s + _29503 + 292] = mem[s + _29503 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29503 + 260 len (32 * mem[_29503]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18834 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18834] = 26
                                        mem[_18834 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19794 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19794] = 26
                                            mem[_19794 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19794 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24287 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24287] = 26
                                                mem[_24287 + 32] = 'SafeMath: division by zero'
                                                _24859 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24859] = 26
                                                mem[_24859 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24859 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28463 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28463]
                                                mem[_28463 + 32] = stor8
                                                require 1 < mem[_28463]
                                                mem[_28463 + 64] = stor7
                                                mem[_28463 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28463 + 100] = ext_call.return_data[0]
                                                mem[_28463 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28463 + 196] = this.address
                                                mem[_28463 + 228] = block.timestamp + 120
                                                mem[_28463 + 164] = 160
                                                mem[_28463 + 260] = mem[_28463]
                                                s = 0
                                                while s < 32 * mem[_28463]:
                                                    mem[s + _28463 + 292] = mem[s + _28463 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28463 + 260 len (32 * mem[_28463]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24505 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24505] = 26
                                                mem[_24505 + 32] = 'SafeMath: division by zero'
                                                _25056 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25056] = 26
                                                mem[_25056 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25056 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29497 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29497]
                                                mem[_29497 + 32] = stor8
                                                require 1 < mem[_29497]
                                                mem[_29497 + 64] = stor7
                                                mem[_29497 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29497 + 100] = ext_call.return_data[0]
                                                mem[_29497 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29497 + 196] = this.address
                                                mem[_29497 + 228] = block.timestamp + 120
                                                mem[_29497 + 164] = 160
                                                mem[_29497 + 260] = mem[_29497]
                                                s = 0
                                                while s < 32 * mem[_29497]:
                                                    mem[s + _29497 + 292] = mem[s + _29497 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29497 + 260 len (32 * mem[_29497]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24668 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24668] = 26
                                            mem[_24668 + 32] = 'SafeMath: division by zero'
                                            _25419 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25419] = 26
                                            mem[_25419 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25419 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30401 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30401]
                                            mem[_30401 + 32] = stor8
                                            require 1 < mem[_30401]
                                            mem[_30401 + 64] = stor7
                                            mem[_30401 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30401 + 100] = ext_call.return_data[0]
                                            mem[_30401 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30401 + 196] = this.address
                                            mem[_30401 + 228] = block.timestamp + 120
                                            mem[_30401 + 164] = 160
                                            mem[_30401 + 260] = mem[_30401]
                                            s = 0
                                            while s < 32 * mem[_30401]:
                                                mem[s + _30401 + 292] = mem[s + _30401 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30401 + 260 len (32 * mem[_30401]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30401]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19917 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19917] = 26
                                        mem[_19917 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19917 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24504 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24504] = 26
                                            mem[_24504 + 32] = 'SafeMath: division by zero'
                                            _25055 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25055] = 26
                                            mem[_25055 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25055 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29491 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29491]
                                            mem[_29491 + 32] = stor8
                                            require 1 < mem[_29491]
                                            mem[_29491 + 64] = stor7
                                            mem[_29491 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29491 + 100] = ext_call.return_data[0]
                                            mem[_29491 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29491 + 196] = this.address
                                            mem[_29491 + 228] = block.timestamp + 120
                                            mem[_29491 + 164] = 160
                                            mem[_29491 + 260] = mem[_29491]
                                            s = 0
                                            while s < 32 * mem[_29491]:
                                                mem[s + _29491 + 292] = mem[s + _29491 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29491 + 260 len (32 * mem[_29491]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24667 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24667] = 26
                                                mem[_24667 + 32] = 'SafeMath: division by zero'
                                                _25418 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25418] = 26
                                                mem[_25418 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25418 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30395 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30395]
                                                mem[_30395 + 32] = stor8
                                                require 1 < mem[_30395]
                                                mem[_30395 + 64] = stor7
                                                mem[_30395 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30395 + 100] = ext_call.return_data[0]
                                                mem[_30395 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30395 + 196] = this.address
                                                mem[_30395 + 228] = block.timestamp + 120
                                                mem[_30395 + 164] = 160
                                                mem[_30395 + 260] = mem[_30395]
                                                s = 0
                                                while s < 32 * mem[_30395]:
                                                    mem[s + _30395 + 292] = mem[s + _30395 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30395 + 260 len (32 * mem[_30395]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30395]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24738 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24738] = 26
                                            mem[_24738 + 32] = 'SafeMath: division by zero'
                                            _25975 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25975] = 26
                                            mem[_25975 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25975 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30961 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30961]
                                            mem[_30961 + 32] = stor8
                                            require 1 < mem[_30961]
                                            mem[_30961 + 64] = stor7
                                            mem[_30961 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30961 + 100] = ext_call.return_data[0]
                                            mem[_30961 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30961 + 196] = this.address
                                            mem[_30961 + 228] = block.timestamp + 120
                                            mem[_30961 + 164] = 160
                                            mem[_30961 + 260] = mem[_30961]
                                            s = 0
                                            while s < 32 * mem[_30961]:
                                                mem[s + _30961 + 292] = mem[s + _30961 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30961 + 260 len (32 * mem[_30961]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17754 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17754] = 30
                                    mem[_17754 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17948 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17948 + 68] = mem[idx + _17754 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17948 + 68] = mem[_17948 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17948 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18785 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18785] = 26
                                        mem[_18785 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19699 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19699] = 26
                                        mem[_19699 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19699 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24115 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24115] = 26
                                            mem[_24115 + 32] = 'SafeMath: division by zero'
                                            _24785 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24785] = 26
                                            mem[_24785 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24785 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27488 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27488]
                                            mem[_27488 + 32] = stor8
                                            require 1 < mem[_27488]
                                            mem[_27488 + 64] = stor7
                                            mem[_27488 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27488 + 100] = ext_call.return_data[0]
                                            mem[_27488 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27488 + 196] = this.address
                                            mem[_27488 + 228] = block.timestamp + 120
                                            mem[_27488 + 164] = 160
                                            mem[_27488 + 260] = mem[_27488]
                                            s = 0
                                            while s < 32 * mem[_27488]:
                                                mem[s + _27488 + 292] = mem[s + _27488 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27488 + 260 len (32 * mem[_27488]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24284 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24284] = 26
                                                mem[_24284 + 32] = 'SafeMath: division by zero'
                                                _24858 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24858] = 26
                                                mem[_24858 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24858 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28448 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28448]
                                                mem[_28448 + 32] = stor8
                                                require 1 < mem[_28448]
                                                mem[_28448 + 64] = stor7
                                                mem[_28448 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28448 + 100] = ext_call.return_data[0]
                                                mem[_28448 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28448 + 196] = this.address
                                                mem[_28448 + 228] = block.timestamp + 120
                                                mem[_28448 + 164] = 160
                                                mem[_28448 + 260] = mem[_28448]
                                                s = 0
                                                while s < 32 * mem[_28448]:
                                                    mem[s + _28448 + 292] = mem[s + _28448 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28448 + 260 len (32 * mem[_28448]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24501 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24501] = 26
                                                mem[_24501 + 32] = 'SafeMath: division by zero'
                                                _25051 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25051] = 26
                                                mem[_25051 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25051 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29481 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29481]
                                                mem[_29481 + 32] = stor8
                                                require 1 < mem[_29481]
                                                mem[_29481 + 64] = stor7
                                                mem[_29481 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29481 + 100] = ext_call.return_data[0]
                                                mem[_29481 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29481 + 196] = this.address
                                                mem[_29481 + 228] = block.timestamp + 120
                                                mem[_29481 + 164] = 160
                                                mem[_29481 + 260] = mem[_29481]
                                                s = 0
                                                while s < 32 * mem[_29481]:
                                                    mem[s + _29481 + 292] = mem[s + _29481 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29481 + 260 len (32 * mem[_29481]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18833 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18833] = 26
                                        mem[_18833 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19793 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19793] = 26
                                            mem[_19793 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19793 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24283 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24283] = 26
                                                mem[_24283 + 32] = 'SafeMath: division by zero'
                                                _24857 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24857] = 26
                                                mem[_24857 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24857 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28442 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28442]
                                                mem[_28442 + 32] = stor8
                                                require 1 < mem[_28442]
                                                mem[_28442 + 64] = stor7
                                                mem[_28442 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28442 + 100] = ext_call.return_data[0]
                                                mem[_28442 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28442 + 196] = this.address
                                                mem[_28442 + 228] = block.timestamp + 120
                                                mem[_28442 + 164] = 160
                                                mem[_28442 + 260] = mem[_28442]
                                                s = 0
                                                while s < 32 * mem[_28442]:
                                                    mem[s + _28442 + 292] = mem[s + _28442 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28442 + 260 len (32 * mem[_28442]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24500 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24500] = 26
                                                mem[_24500 + 32] = 'SafeMath: division by zero'
                                                _25050 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25050] = 26
                                                mem[_25050 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25050 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29475 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29475]
                                                mem[_29475 + 32] = stor8
                                                require 1 < mem[_29475]
                                                mem[_29475 + 64] = stor7
                                                mem[_29475 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29475 + 100] = ext_call.return_data[0]
                                                mem[_29475 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29475 + 196] = this.address
                                                mem[_29475 + 228] = block.timestamp + 120
                                                mem[_29475 + 164] = 160
                                                mem[_29475 + 260] = mem[_29475]
                                                s = 0
                                                while s < 32 * mem[_29475]:
                                                    mem[s + _29475 + 292] = mem[s + _29475 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29475 + 260 len (32 * mem[_29475]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24666 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24666] = 26
                                            mem[_24666 + 32] = 'SafeMath: division by zero'
                                            _25410 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25410] = 26
                                            mem[_25410 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25410 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30385 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30385]
                                            mem[_30385 + 32] = stor8
                                            require 1 < mem[_30385]
                                            mem[_30385 + 64] = stor7
                                            mem[_30385 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30385 + 100] = ext_call.return_data[0]
                                            mem[_30385 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30385 + 196] = this.address
                                            mem[_30385 + 228] = block.timestamp + 120
                                            mem[_30385 + 164] = 160
                                            mem[_30385 + 260] = mem[_30385]
                                            s = 0
                                            while s < 32 * mem[_30385]:
                                                mem[s + _30385 + 292] = mem[s + _30385 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30385 + 260 len (32 * mem[_30385]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30385]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19913 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19913] = 26
                                        mem[_19913 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19913 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24499 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24499] = 26
                                            mem[_24499 + 32] = 'SafeMath: division by zero'
                                            _25049 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25049] = 26
                                            mem[_25049 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25049 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29469 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29469]
                                            mem[_29469 + 32] = stor8
                                            require 1 < mem[_29469]
                                            mem[_29469 + 64] = stor7
                                            mem[_29469 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29469 + 100] = ext_call.return_data[0]
                                            mem[_29469 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29469 + 196] = this.address
                                            mem[_29469 + 228] = block.timestamp + 120
                                            mem[_29469 + 164] = 160
                                            mem[_29469 + 260] = mem[_29469]
                                            s = 0
                                            while s < 32 * mem[_29469]:
                                                mem[s + _29469 + 292] = mem[s + _29469 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29469 + 260 len (32 * mem[_29469]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24665 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24665] = 26
                                                mem[_24665 + 32] = 'SafeMath: division by zero'
                                                _25409 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25409] = 26
                                                mem[_25409 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25409 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30379 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30379]
                                                mem[_30379 + 32] = stor8
                                                require 1 < mem[_30379]
                                                mem[_30379 + 64] = stor7
                                                mem[_30379 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30379 + 100] = ext_call.return_data[0]
                                                mem[_30379 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30379 + 196] = this.address
                                                mem[_30379 + 228] = block.timestamp + 120
                                                mem[_30379 + 164] = 160
                                                mem[_30379 + 260] = mem[_30379]
                                                s = 0
                                                while s < 32 * mem[_30379]:
                                                    mem[s + _30379 + 292] = mem[s + _30379 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30379 + 260 len (32 * mem[_30379]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30379]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24737 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24737] = 26
                                            mem[_24737 + 32] = 'SafeMath: division by zero'
                                            _25961 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25961] = 26
                                            mem[_25961 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25961 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30953 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30953]
                                            mem[_30953 + 32] = stor8
                                            require 1 < mem[_30953]
                                            mem[_30953 + 64] = stor7
                                            mem[_30953 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30953 + 100] = ext_call.return_data[0]
                                            mem[_30953 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30953 + 196] = this.address
                                            mem[_30953 + 228] = block.timestamp + 120
                                            mem[_30953 + 164] = 160
                                            mem[_30953 + 260] = mem[_30953]
                                            s = 0
                                            while s < 32 * mem[_30953]:
                                                mem[s + _30953 + 292] = mem[s + _30953 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30953 + 260 len (32 * mem[_30953]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17752 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17752] = 30
                                    mem[_17752 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17942 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17942 + 68] = mem[idx + _17752 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17942 + 68] = mem[_17942 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17942 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18784 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18784] = 26
                                        mem[_18784 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19696 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19696] = 26
                                        mem[_19696 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19696 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24112 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24112] = 26
                                            mem[_24112 + 32] = 'SafeMath: division by zero'
                                            _24784 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24784] = 26
                                            mem[_24784 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24784 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27469 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27469]
                                            mem[_27469 + 32] = stor8
                                            require 1 < mem[_27469]
                                            mem[_27469 + 64] = stor7
                                            mem[_27469 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27469 + 100] = ext_call.return_data[0]
                                            mem[_27469 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27469 + 196] = this.address
                                            mem[_27469 + 228] = block.timestamp + 120
                                            mem[_27469 + 164] = 160
                                            mem[_27469 + 260] = mem[_27469]
                                            s = 0
                                            while s < 32 * mem[_27469]:
                                                mem[s + _27469 + 292] = mem[s + _27469 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27469 + 260 len (32 * mem[_27469]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24280 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24280] = 26
                                                mem[_24280 + 32] = 'SafeMath: division by zero'
                                                _24856 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24856] = 26
                                                mem[_24856 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24856 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28427 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28427]
                                                mem[_28427 + 32] = stor8
                                                require 1 < mem[_28427]
                                                mem[_28427 + 64] = stor7
                                                mem[_28427 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28427 + 100] = ext_call.return_data[0]
                                                mem[_28427 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28427 + 196] = this.address
                                                mem[_28427 + 228] = block.timestamp + 120
                                                mem[_28427 + 164] = 160
                                                mem[_28427 + 260] = mem[_28427]
                                                s = 0
                                                while s < 32 * mem[_28427]:
                                                    mem[s + _28427 + 292] = mem[s + _28427 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28427 + 260 len (32 * mem[_28427]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24496 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24496] = 26
                                                mem[_24496 + 32] = 'SafeMath: division by zero'
                                                _25045 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25045] = 26
                                                mem[_25045 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25045 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29459 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29459]
                                                mem[_29459 + 32] = stor8
                                                require 1 < mem[_29459]
                                                mem[_29459 + 64] = stor7
                                                mem[_29459 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29459 + 100] = ext_call.return_data[0]
                                                mem[_29459 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29459 + 196] = this.address
                                                mem[_29459 + 228] = block.timestamp + 120
                                                mem[_29459 + 164] = 160
                                                mem[_29459 + 260] = mem[_29459]
                                                s = 0
                                                while s < 32 * mem[_29459]:
                                                    mem[s + _29459 + 292] = mem[s + _29459 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29459 + 260 len (32 * mem[_29459]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18832 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18832] = 26
                                        mem[_18832 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19792 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19792] = 26
                                            mem[_19792 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19792 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24279 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24279] = 26
                                                mem[_24279 + 32] = 'SafeMath: division by zero'
                                                _24855 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24855] = 26
                                                mem[_24855 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24855 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28421 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28421]
                                                mem[_28421 + 32] = stor8
                                                require 1 < mem[_28421]
                                                mem[_28421 + 64] = stor7
                                                mem[_28421 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28421 + 100] = ext_call.return_data[0]
                                                mem[_28421 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28421 + 196] = this.address
                                                mem[_28421 + 228] = block.timestamp + 120
                                                mem[_28421 + 164] = 160
                                                mem[_28421 + 260] = mem[_28421]
                                                s = 0
                                                while s < 32 * mem[_28421]:
                                                    mem[s + _28421 + 292] = mem[s + _28421 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28421 + 260 len (32 * mem[_28421]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24495 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24495] = 26
                                                mem[_24495 + 32] = 'SafeMath: division by zero'
                                                _25044 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25044] = 26
                                                mem[_25044 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25044 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29453 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29453]
                                                mem[_29453 + 32] = stor8
                                                require 1 < mem[_29453]
                                                mem[_29453 + 64] = stor7
                                                mem[_29453 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29453 + 100] = ext_call.return_data[0]
                                                mem[_29453 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29453 + 196] = this.address
                                                mem[_29453 + 228] = block.timestamp + 120
                                                mem[_29453 + 164] = 160
                                                mem[_29453 + 260] = mem[_29453]
                                                s = 0
                                                while s < 32 * mem[_29453]:
                                                    mem[s + _29453 + 292] = mem[s + _29453 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29453 + 260 len (32 * mem[_29453]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24664 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24664] = 26
                                            mem[_24664 + 32] = 'SafeMath: division by zero'
                                            _25401 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25401] = 26
                                            mem[_25401 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25401 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30369 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30369]
                                            mem[_30369 + 32] = stor8
                                            require 1 < mem[_30369]
                                            mem[_30369 + 64] = stor7
                                            mem[_30369 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30369 + 100] = ext_call.return_data[0]
                                            mem[_30369 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30369 + 196] = this.address
                                            mem[_30369 + 228] = block.timestamp + 120
                                            mem[_30369 + 164] = 160
                                            mem[_30369 + 260] = mem[_30369]
                                            s = 0
                                            while s < 32 * mem[_30369]:
                                                mem[s + _30369 + 292] = mem[s + _30369 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30369 + 260 len (32 * mem[_30369]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30369]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19909 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19909] = 26
                                        mem[_19909 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19909 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24494 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24494] = 26
                                            mem[_24494 + 32] = 'SafeMath: division by zero'
                                            _25043 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25043] = 26
                                            mem[_25043 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25043 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29447 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29447]
                                            mem[_29447 + 32] = stor8
                                            require 1 < mem[_29447]
                                            mem[_29447 + 64] = stor7
                                            mem[_29447 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29447 + 100] = ext_call.return_data[0]
                                            mem[_29447 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29447 + 196] = this.address
                                            mem[_29447 + 228] = block.timestamp + 120
                                            mem[_29447 + 164] = 160
                                            mem[_29447 + 260] = mem[_29447]
                                            s = 0
                                            while s < 32 * mem[_29447]:
                                                mem[s + _29447 + 292] = mem[s + _29447 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29447 + 260 len (32 * mem[_29447]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24663 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24663] = 26
                                                mem[_24663 + 32] = 'SafeMath: division by zero'
                                                _25400 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25400] = 26
                                                mem[_25400 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25400 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30363 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30363]
                                                mem[_30363 + 32] = stor8
                                                require 1 < mem[_30363]
                                                mem[_30363 + 64] = stor7
                                                mem[_30363 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30363 + 100] = ext_call.return_data[0]
                                                mem[_30363 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30363 + 196] = this.address
                                                mem[_30363 + 228] = block.timestamp + 120
                                                mem[_30363 + 164] = 160
                                                mem[_30363 + 260] = mem[_30363]
                                                s = 0
                                                while s < 32 * mem[_30363]:
                                                    mem[s + _30363 + 292] = mem[s + _30363 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30363 + 260 len (32 * mem[_30363]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30363]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24736 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24736] = 26
                                            mem[_24736 + 32] = 'SafeMath: division by zero'
                                            _25947 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25947] = 26
                                            mem[_25947 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25947 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30945 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30945]
                                            mem[_30945 + 32] = stor8
                                            require 1 < mem[_30945]
                                            mem[_30945 + 64] = stor7
                                            mem[_30945 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30945 + 100] = ext_call.return_data[0]
                                            mem[_30945 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30945 + 196] = this.address
                                            mem[_30945 + 228] = block.timestamp + 120
                                            mem[_30945 + 164] = 160
                                            mem[_30945 + 260] = mem[_30945]
                                            s = 0
                                            while s < 32 * mem[_30945]:
                                                mem[s + _30945 + 292] = mem[s + _30945 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30945 + 260 len (32 * mem[_30945]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17750 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17750] = 30
                                    mem[_17750 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17936 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17936 + 68] = mem[idx + _17750 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17936 + 68] = mem[_17936 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17936 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18783 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18783] = 26
                                        mem[_18783 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19693 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19693] = 26
                                        mem[_19693 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19693 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24109 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24109] = 26
                                            mem[_24109 + 32] = 'SafeMath: division by zero'
                                            _24783 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24783] = 26
                                            mem[_24783 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24783 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27450 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27450]
                                            mem[_27450 + 32] = stor8
                                            require 1 < mem[_27450]
                                            mem[_27450 + 64] = stor7
                                            mem[_27450 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27450 + 100] = ext_call.return_data[0]
                                            mem[_27450 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27450 + 196] = this.address
                                            mem[_27450 + 228] = block.timestamp + 120
                                            mem[_27450 + 164] = 160
                                            mem[_27450 + 260] = mem[_27450]
                                            s = 0
                                            while s < 32 * mem[_27450]:
                                                mem[s + _27450 + 292] = mem[s + _27450 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27450 + 260 len (32 * mem[_27450]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24276 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24276] = 26
                                                mem[_24276 + 32] = 'SafeMath: division by zero'
                                                _24854 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24854] = 26
                                                mem[_24854 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24854 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28406 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28406]
                                                mem[_28406 + 32] = stor8
                                                require 1 < mem[_28406]
                                                mem[_28406 + 64] = stor7
                                                mem[_28406 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28406 + 100] = ext_call.return_data[0]
                                                mem[_28406 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28406 + 196] = this.address
                                                mem[_28406 + 228] = block.timestamp + 120
                                                mem[_28406 + 164] = 160
                                                mem[_28406 + 260] = mem[_28406]
                                                s = 0
                                                while s < 32 * mem[_28406]:
                                                    mem[s + _28406 + 292] = mem[s + _28406 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28406 + 260 len (32 * mem[_28406]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24491 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24491] = 26
                                                mem[_24491 + 32] = 'SafeMath: division by zero'
                                                _25039 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25039] = 26
                                                mem[_25039 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25039 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29437 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29437]
                                                mem[_29437 + 32] = stor8
                                                require 1 < mem[_29437]
                                                mem[_29437 + 64] = stor7
                                                mem[_29437 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29437 + 100] = ext_call.return_data[0]
                                                mem[_29437 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29437 + 196] = this.address
                                                mem[_29437 + 228] = block.timestamp + 120
                                                mem[_29437 + 164] = 160
                                                mem[_29437 + 260] = mem[_29437]
                                                s = 0
                                                while s < 32 * mem[_29437]:
                                                    mem[s + _29437 + 292] = mem[s + _29437 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29437 + 260 len (32 * mem[_29437]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18831 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18831] = 26
                                        mem[_18831 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19791 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19791] = 26
                                            mem[_19791 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19791 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24275 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24275] = 26
                                                mem[_24275 + 32] = 'SafeMath: division by zero'
                                                _24853 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24853] = 26
                                                mem[_24853 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24853 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28400 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28400]
                                                mem[_28400 + 32] = stor8
                                                require 1 < mem[_28400]
                                                mem[_28400 + 64] = stor7
                                                mem[_28400 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28400 + 100] = ext_call.return_data[0]
                                                mem[_28400 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28400 + 196] = this.address
                                                mem[_28400 + 228] = block.timestamp + 120
                                                mem[_28400 + 164] = 160
                                                mem[_28400 + 260] = mem[_28400]
                                                s = 0
                                                while s < 32 * mem[_28400]:
                                                    mem[s + _28400 + 292] = mem[s + _28400 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28400 + 260 len (32 * mem[_28400]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24490 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24490] = 26
                                                mem[_24490 + 32] = 'SafeMath: division by zero'
                                                _25038 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25038] = 26
                                                mem[_25038 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25038 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29431 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29431]
                                                mem[_29431 + 32] = stor8
                                                require 1 < mem[_29431]
                                                mem[_29431 + 64] = stor7
                                                mem[_29431 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29431 + 100] = ext_call.return_data[0]
                                                mem[_29431 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29431 + 196] = this.address
                                                mem[_29431 + 228] = block.timestamp + 120
                                                mem[_29431 + 164] = 160
                                                mem[_29431 + 260] = mem[_29431]
                                                s = 0
                                                while s < 32 * mem[_29431]:
                                                    mem[s + _29431 + 292] = mem[s + _29431 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29431 + 260 len (32 * mem[_29431]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24662 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24662] = 26
                                            mem[_24662 + 32] = 'SafeMath: division by zero'
                                            _25392 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25392] = 26
                                            mem[_25392 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25392 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30353 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30353]
                                            mem[_30353 + 32] = stor8
                                            require 1 < mem[_30353]
                                            mem[_30353 + 64] = stor7
                                            mem[_30353 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30353 + 100] = ext_call.return_data[0]
                                            mem[_30353 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30353 + 196] = this.address
                                            mem[_30353 + 228] = block.timestamp + 120
                                            mem[_30353 + 164] = 160
                                            mem[_30353 + 260] = mem[_30353]
                                            s = 0
                                            while s < 32 * mem[_30353]:
                                                mem[s + _30353 + 292] = mem[s + _30353 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30353 + 260 len (32 * mem[_30353]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30353]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19905 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19905] = 26
                                        mem[_19905 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19905 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24489 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24489] = 26
                                            mem[_24489 + 32] = 'SafeMath: division by zero'
                                            _25037 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25037] = 26
                                            mem[_25037 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25037 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29425 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29425]
                                            mem[_29425 + 32] = stor8
                                            require 1 < mem[_29425]
                                            mem[_29425 + 64] = stor7
                                            mem[_29425 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29425 + 100] = ext_call.return_data[0]
                                            mem[_29425 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29425 + 196] = this.address
                                            mem[_29425 + 228] = block.timestamp + 120
                                            mem[_29425 + 164] = 160
                                            mem[_29425 + 260] = mem[_29425]
                                            s = 0
                                            while s < 32 * mem[_29425]:
                                                mem[s + _29425 + 292] = mem[s + _29425 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29425 + 260 len (32 * mem[_29425]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24661 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24661] = 26
                                                mem[_24661 + 32] = 'SafeMath: division by zero'
                                                _25391 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25391] = 26
                                                mem[_25391 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25391 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30347 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30347]
                                                mem[_30347 + 32] = stor8
                                                require 1 < mem[_30347]
                                                mem[_30347 + 64] = stor7
                                                mem[_30347 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30347 + 100] = ext_call.return_data[0]
                                                mem[_30347 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30347 + 196] = this.address
                                                mem[_30347 + 228] = block.timestamp + 120
                                                mem[_30347 + 164] = 160
                                                mem[_30347 + 260] = mem[_30347]
                                                s = 0
                                                while s < 32 * mem[_30347]:
                                                    mem[s + _30347 + 292] = mem[s + _30347 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30347 + 260 len (32 * mem[_30347]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30347]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24735 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24735] = 26
                                            mem[_24735 + 32] = 'SafeMath: division by zero'
                                            _25933 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25933] = 26
                                            mem[_25933 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25933 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30937 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30937]
                                            mem[_30937 + 32] = stor8
                                            require 1 < mem[_30937]
                                            mem[_30937 + 64] = stor7
                                            mem[_30937 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30937 + 100] = ext_call.return_data[0]
                                            mem[_30937 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30937 + 196] = this.address
                                            mem[_30937 + 228] = block.timestamp + 120
                                            mem[_30937 + 164] = 160
                                            mem[_30937 + 260] = mem[_30937]
                                            s = 0
                                            while s < 32 * mem[_30937]:
                                                mem[s + _30937 + 292] = mem[s + _30937 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30937 + 260 len (32 * mem[_30937]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17748 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17748] = 30
                                    mem[_17748 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17930 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17930 + 68] = mem[idx + _17748 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17930 + 68] = mem[_17930 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17930 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18782 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18782] = 26
                                        mem[_18782 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19690 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19690] = 26
                                        mem[_19690 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19690 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24106 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24106] = 26
                                            mem[_24106 + 32] = 'SafeMath: division by zero'
                                            _24782 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24782] = 26
                                            mem[_24782 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24782 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27431 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27431]
                                            mem[_27431 + 32] = stor8
                                            require 1 < mem[_27431]
                                            mem[_27431 + 64] = stor7
                                            mem[_27431 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27431 + 100] = ext_call.return_data[0]
                                            mem[_27431 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27431 + 196] = this.address
                                            mem[_27431 + 228] = block.timestamp + 120
                                            mem[_27431 + 164] = 160
                                            mem[_27431 + 260] = mem[_27431]
                                            s = 0
                                            while s < 32 * mem[_27431]:
                                                mem[s + _27431 + 292] = mem[s + _27431 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27431 + 260 len (32 * mem[_27431]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24272 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24272] = 26
                                                mem[_24272 + 32] = 'SafeMath: division by zero'
                                                _24852 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24852] = 26
                                                mem[_24852 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24852 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28385 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28385]
                                                mem[_28385 + 32] = stor8
                                                require 1 < mem[_28385]
                                                mem[_28385 + 64] = stor7
                                                mem[_28385 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28385 + 100] = ext_call.return_data[0]
                                                mem[_28385 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28385 + 196] = this.address
                                                mem[_28385 + 228] = block.timestamp + 120
                                                mem[_28385 + 164] = 160
                                                mem[_28385 + 260] = mem[_28385]
                                                s = 0
                                                while s < 32 * mem[_28385]:
                                                    mem[s + _28385 + 292] = mem[s + _28385 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28385 + 260 len (32 * mem[_28385]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24486 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24486] = 26
                                                mem[_24486 + 32] = 'SafeMath: division by zero'
                                                _25033 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25033] = 26
                                                mem[_25033 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25033 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29415 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29415]
                                                mem[_29415 + 32] = stor8
                                                require 1 < mem[_29415]
                                                mem[_29415 + 64] = stor7
                                                mem[_29415 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29415 + 100] = ext_call.return_data[0]
                                                mem[_29415 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29415 + 196] = this.address
                                                mem[_29415 + 228] = block.timestamp + 120
                                                mem[_29415 + 164] = 160
                                                mem[_29415 + 260] = mem[_29415]
                                                s = 0
                                                while s < 32 * mem[_29415]:
                                                    mem[s + _29415 + 292] = mem[s + _29415 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29415 + 260 len (32 * mem[_29415]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18830 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18830] = 26
                                        mem[_18830 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19790 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19790] = 26
                                            mem[_19790 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19790 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24271 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24271] = 26
                                                mem[_24271 + 32] = 'SafeMath: division by zero'
                                                _24851 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24851] = 26
                                                mem[_24851 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24851 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28379 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28379]
                                                mem[_28379 + 32] = stor8
                                                require 1 < mem[_28379]
                                                mem[_28379 + 64] = stor7
                                                mem[_28379 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28379 + 100] = ext_call.return_data[0]
                                                mem[_28379 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28379 + 196] = this.address
                                                mem[_28379 + 228] = block.timestamp + 120
                                                mem[_28379 + 164] = 160
                                                mem[_28379 + 260] = mem[_28379]
                                                s = 0
                                                while s < 32 * mem[_28379]:
                                                    mem[s + _28379 + 292] = mem[s + _28379 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28379 + 260 len (32 * mem[_28379]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24485 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24485] = 26
                                                mem[_24485 + 32] = 'SafeMath: division by zero'
                                                _25032 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25032] = 26
                                                mem[_25032 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25032 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29409 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29409]
                                                mem[_29409 + 32] = stor8
                                                require 1 < mem[_29409]
                                                mem[_29409 + 64] = stor7
                                                mem[_29409 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29409 + 100] = ext_call.return_data[0]
                                                mem[_29409 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29409 + 196] = this.address
                                                mem[_29409 + 228] = block.timestamp + 120
                                                mem[_29409 + 164] = 160
                                                mem[_29409 + 260] = mem[_29409]
                                                s = 0
                                                while s < 32 * mem[_29409]:
                                                    mem[s + _29409 + 292] = mem[s + _29409 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29409 + 260 len (32 * mem[_29409]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24660 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24660] = 26
                                            mem[_24660 + 32] = 'SafeMath: division by zero'
                                            _25383 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25383] = 26
                                            mem[_25383 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25383 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30337 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30337]
                                            mem[_30337 + 32] = stor8
                                            require 1 < mem[_30337]
                                            mem[_30337 + 64] = stor7
                                            mem[_30337 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30337 + 100] = ext_call.return_data[0]
                                            mem[_30337 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30337 + 196] = this.address
                                            mem[_30337 + 228] = block.timestamp + 120
                                            mem[_30337 + 164] = 160
                                            mem[_30337 + 260] = mem[_30337]
                                            s = 0
                                            while s < 32 * mem[_30337]:
                                                mem[s + _30337 + 292] = mem[s + _30337 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30337 + 260 len (32 * mem[_30337]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30337]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19901 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19901] = 26
                                        mem[_19901 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19901 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24484 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24484] = 26
                                            mem[_24484 + 32] = 'SafeMath: division by zero'
                                            _25031 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25031] = 26
                                            mem[_25031 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25031 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29403 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29403]
                                            mem[_29403 + 32] = stor8
                                            require 1 < mem[_29403]
                                            mem[_29403 + 64] = stor7
                                            mem[_29403 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29403 + 100] = ext_call.return_data[0]
                                            mem[_29403 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29403 + 196] = this.address
                                            mem[_29403 + 228] = block.timestamp + 120
                                            mem[_29403 + 164] = 160
                                            mem[_29403 + 260] = mem[_29403]
                                            s = 0
                                            while s < 32 * mem[_29403]:
                                                mem[s + _29403 + 292] = mem[s + _29403 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29403 + 260 len (32 * mem[_29403]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24659 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24659] = 26
                                                mem[_24659 + 32] = 'SafeMath: division by zero'
                                                _25382 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25382] = 26
                                                mem[_25382 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25382 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30331 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30331]
                                                mem[_30331 + 32] = stor8
                                                require 1 < mem[_30331]
                                                mem[_30331 + 64] = stor7
                                                mem[_30331 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30331 + 100] = ext_call.return_data[0]
                                                mem[_30331 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30331 + 196] = this.address
                                                mem[_30331 + 228] = block.timestamp + 120
                                                mem[_30331 + 164] = 160
                                                mem[_30331 + 260] = mem[_30331]
                                                s = 0
                                                while s < 32 * mem[_30331]:
                                                    mem[s + _30331 + 292] = mem[s + _30331 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30331 + 260 len (32 * mem[_30331]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30331]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24734 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24734] = 26
                                            mem[_24734 + 32] = 'SafeMath: division by zero'
                                            _25919 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25919] = 26
                                            mem[_25919 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25919 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30929 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30929]
                                            mem[_30929 + 32] = stor8
                                            require 1 < mem[_30929]
                                            mem[_30929 + 64] = stor7
                                            mem[_30929 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30929 + 100] = ext_call.return_data[0]
                                            mem[_30929 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30929 + 196] = this.address
                                            mem[_30929 + 228] = block.timestamp + 120
                                            mem[_30929 + 164] = 160
                                            mem[_30929 + 260] = mem[_30929]
                                            s = 0
                                            while s < 32 * mem[_30929]:
                                                mem[s + _30929 + 292] = mem[s + _30929 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30929 + 260 len (32 * mem[_30929]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17746 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17746] = 30
                                    mem[_17746 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17924 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17924 + 68] = mem[idx + _17746 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17924 + 68] = mem[_17924 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17924 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18781 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18781] = 26
                                        mem[_18781 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19687 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19687] = 26
                                        mem[_19687 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19687 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24103 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24103] = 26
                                            mem[_24103 + 32] = 'SafeMath: division by zero'
                                            _24781 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24781] = 26
                                            mem[_24781 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24781 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27412 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27412]
                                            mem[_27412 + 32] = stor8
                                            require 1 < mem[_27412]
                                            mem[_27412 + 64] = stor7
                                            mem[_27412 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27412 + 100] = ext_call.return_data[0]
                                            mem[_27412 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27412 + 196] = this.address
                                            mem[_27412 + 228] = block.timestamp + 120
                                            mem[_27412 + 164] = 160
                                            mem[_27412 + 260] = mem[_27412]
                                            s = 0
                                            while s < 32 * mem[_27412]:
                                                mem[s + _27412 + 292] = mem[s + _27412 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27412 + 260 len (32 * mem[_27412]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24268 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24268] = 26
                                                mem[_24268 + 32] = 'SafeMath: division by zero'
                                                _24850 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24850] = 26
                                                mem[_24850 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24850 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28364 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28364]
                                                mem[_28364 + 32] = stor8
                                                require 1 < mem[_28364]
                                                mem[_28364 + 64] = stor7
                                                mem[_28364 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28364 + 100] = ext_call.return_data[0]
                                                mem[_28364 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28364 + 196] = this.address
                                                mem[_28364 + 228] = block.timestamp + 120
                                                mem[_28364 + 164] = 160
                                                mem[_28364 + 260] = mem[_28364]
                                                s = 0
                                                while s < 32 * mem[_28364]:
                                                    mem[s + _28364 + 292] = mem[s + _28364 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28364 + 260 len (32 * mem[_28364]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24481 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24481] = 26
                                                mem[_24481 + 32] = 'SafeMath: division by zero'
                                                _25027 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25027] = 26
                                                mem[_25027 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25027 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29393 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29393]
                                                mem[_29393 + 32] = stor8
                                                require 1 < mem[_29393]
                                                mem[_29393 + 64] = stor7
                                                mem[_29393 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29393 + 100] = ext_call.return_data[0]
                                                mem[_29393 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29393 + 196] = this.address
                                                mem[_29393 + 228] = block.timestamp + 120
                                                mem[_29393 + 164] = 160
                                                mem[_29393 + 260] = mem[_29393]
                                                s = 0
                                                while s < 32 * mem[_29393]:
                                                    mem[s + _29393 + 292] = mem[s + _29393 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29393 + 260 len (32 * mem[_29393]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18829 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18829] = 26
                                        mem[_18829 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19789 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19789] = 26
                                            mem[_19789 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19789 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24267 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24267] = 26
                                                mem[_24267 + 32] = 'SafeMath: division by zero'
                                                _24849 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24849] = 26
                                                mem[_24849 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24849 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28358 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28358]
                                                mem[_28358 + 32] = stor8
                                                require 1 < mem[_28358]
                                                mem[_28358 + 64] = stor7
                                                mem[_28358 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28358 + 100] = ext_call.return_data[0]
                                                mem[_28358 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28358 + 196] = this.address
                                                mem[_28358 + 228] = block.timestamp + 120
                                                mem[_28358 + 164] = 160
                                                mem[_28358 + 260] = mem[_28358]
                                                s = 0
                                                while s < 32 * mem[_28358]:
                                                    mem[s + _28358 + 292] = mem[s + _28358 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28358 + 260 len (32 * mem[_28358]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24480 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24480] = 26
                                                mem[_24480 + 32] = 'SafeMath: division by zero'
                                                _25026 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25026] = 26
                                                mem[_25026 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25026 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29387 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29387]
                                                mem[_29387 + 32] = stor8
                                                require 1 < mem[_29387]
                                                mem[_29387 + 64] = stor7
                                                mem[_29387 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29387 + 100] = ext_call.return_data[0]
                                                mem[_29387 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29387 + 196] = this.address
                                                mem[_29387 + 228] = block.timestamp + 120
                                                mem[_29387 + 164] = 160
                                                mem[_29387 + 260] = mem[_29387]
                                                s = 0
                                                while s < 32 * mem[_29387]:
                                                    mem[s + _29387 + 292] = mem[s + _29387 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29387 + 260 len (32 * mem[_29387]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24658 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24658] = 26
                                            mem[_24658 + 32] = 'SafeMath: division by zero'
                                            _25374 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25374] = 26
                                            mem[_25374 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25374 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30321 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30321]
                                            mem[_30321 + 32] = stor8
                                            require 1 < mem[_30321]
                                            mem[_30321 + 64] = stor7
                                            mem[_30321 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30321 + 100] = ext_call.return_data[0]
                                            mem[_30321 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30321 + 196] = this.address
                                            mem[_30321 + 228] = block.timestamp + 120
                                            mem[_30321 + 164] = 160
                                            mem[_30321 + 260] = mem[_30321]
                                            s = 0
                                            while s < 32 * mem[_30321]:
                                                mem[s + _30321 + 292] = mem[s + _30321 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30321 + 260 len (32 * mem[_30321]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30321]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19897 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19897] = 26
                                        mem[_19897 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19897 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24479 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24479] = 26
                                            mem[_24479 + 32] = 'SafeMath: division by zero'
                                            _25025 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25025] = 26
                                            mem[_25025 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25025 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29381 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29381]
                                            mem[_29381 + 32] = stor8
                                            require 1 < mem[_29381]
                                            mem[_29381 + 64] = stor7
                                            mem[_29381 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29381 + 100] = ext_call.return_data[0]
                                            mem[_29381 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29381 + 196] = this.address
                                            mem[_29381 + 228] = block.timestamp + 120
                                            mem[_29381 + 164] = 160
                                            mem[_29381 + 260] = mem[_29381]
                                            s = 0
                                            while s < 32 * mem[_29381]:
                                                mem[s + _29381 + 292] = mem[s + _29381 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29381 + 260 len (32 * mem[_29381]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24657 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24657] = 26
                                                mem[_24657 + 32] = 'SafeMath: division by zero'
                                                _25373 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25373] = 26
                                                mem[_25373 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25373 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30315 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30315]
                                                mem[_30315 + 32] = stor8
                                                require 1 < mem[_30315]
                                                mem[_30315 + 64] = stor7
                                                mem[_30315 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30315 + 100] = ext_call.return_data[0]
                                                mem[_30315 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30315 + 196] = this.address
                                                mem[_30315 + 228] = block.timestamp + 120
                                                mem[_30315 + 164] = 160
                                                mem[_30315 + 260] = mem[_30315]
                                                s = 0
                                                while s < 32 * mem[_30315]:
                                                    mem[s + _30315 + 292] = mem[s + _30315 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30315 + 260 len (32 * mem[_30315]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30315]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24733 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24733] = 26
                                            mem[_24733 + 32] = 'SafeMath: division by zero'
                                            _25905 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25905] = 26
                                            mem[_25905 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25905 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30921 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30921]
                                            mem[_30921 + 32] = stor8
                                            require 1 < mem[_30921]
                                            mem[_30921 + 64] = stor7
                                            mem[_30921 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30921 + 100] = ext_call.return_data[0]
                                            mem[_30921 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30921 + 196] = this.address
                                            mem[_30921 + 228] = block.timestamp + 120
                                            mem[_30921 + 164] = 160
                                            mem[_30921 + 260] = mem[_30921]
                                            s = 0
                                            while s < 32 * mem[_30921]:
                                                mem[s + _30921 + 292] = mem[s + _30921 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30921 + 260 len (32 * mem[_30921]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17744 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17744] = 30
                                    mem[_17744 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17918 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17918 + 68] = mem[idx + _17744 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17918 + 68] = mem[_17918 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17918 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18780 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18780] = 26
                                        mem[_18780 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19684 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19684] = 26
                                        mem[_19684 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19684 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24100 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24100] = 26
                                            mem[_24100 + 32] = 'SafeMath: division by zero'
                                            _24780 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24780] = 26
                                            mem[_24780 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24780 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27393 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27393]
                                            mem[_27393 + 32] = stor8
                                            require 1 < mem[_27393]
                                            mem[_27393 + 64] = stor7
                                            mem[_27393 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27393 + 100] = ext_call.return_data[0]
                                            mem[_27393 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27393 + 196] = this.address
                                            mem[_27393 + 228] = block.timestamp + 120
                                            mem[_27393 + 164] = 160
                                            mem[_27393 + 260] = mem[_27393]
                                            s = 0
                                            while s < 32 * mem[_27393]:
                                                mem[s + _27393 + 292] = mem[s + _27393 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27393 + 260 len (32 * mem[_27393]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24264 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24264] = 26
                                                mem[_24264 + 32] = 'SafeMath: division by zero'
                                                _24848 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24848] = 26
                                                mem[_24848 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24848 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28343 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28343]
                                                mem[_28343 + 32] = stor8
                                                require 1 < mem[_28343]
                                                mem[_28343 + 64] = stor7
                                                mem[_28343 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28343 + 100] = ext_call.return_data[0]
                                                mem[_28343 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28343 + 196] = this.address
                                                mem[_28343 + 228] = block.timestamp + 120
                                                mem[_28343 + 164] = 160
                                                mem[_28343 + 260] = mem[_28343]
                                                s = 0
                                                while s < 32 * mem[_28343]:
                                                    mem[s + _28343 + 292] = mem[s + _28343 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28343 + 260 len (32 * mem[_28343]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24476 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24476] = 26
                                                mem[_24476 + 32] = 'SafeMath: division by zero'
                                                _25021 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25021] = 26
                                                mem[_25021 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25021 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29371 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29371]
                                                mem[_29371 + 32] = stor8
                                                require 1 < mem[_29371]
                                                mem[_29371 + 64] = stor7
                                                mem[_29371 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29371 + 100] = ext_call.return_data[0]
                                                mem[_29371 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29371 + 196] = this.address
                                                mem[_29371 + 228] = block.timestamp + 120
                                                mem[_29371 + 164] = 160
                                                mem[_29371 + 260] = mem[_29371]
                                                s = 0
                                                while s < 32 * mem[_29371]:
                                                    mem[s + _29371 + 292] = mem[s + _29371 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29371 + 260 len (32 * mem[_29371]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18828 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18828] = 26
                                        mem[_18828 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19788 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19788] = 26
                                            mem[_19788 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19788 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24263 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24263] = 26
                                                mem[_24263 + 32] = 'SafeMath: division by zero'
                                                _24847 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24847] = 26
                                                mem[_24847 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24847 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28337 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28337]
                                                mem[_28337 + 32] = stor8
                                                require 1 < mem[_28337]
                                                mem[_28337 + 64] = stor7
                                                mem[_28337 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28337 + 100] = ext_call.return_data[0]
                                                mem[_28337 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28337 + 196] = this.address
                                                mem[_28337 + 228] = block.timestamp + 120
                                                mem[_28337 + 164] = 160
                                                mem[_28337 + 260] = mem[_28337]
                                                s = 0
                                                while s < 32 * mem[_28337]:
                                                    mem[s + _28337 + 292] = mem[s + _28337 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28337 + 260 len (32 * mem[_28337]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24475 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24475] = 26
                                                mem[_24475 + 32] = 'SafeMath: division by zero'
                                                _25020 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25020] = 26
                                                mem[_25020 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25020 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29365 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29365]
                                                mem[_29365 + 32] = stor8
                                                require 1 < mem[_29365]
                                                mem[_29365 + 64] = stor7
                                                mem[_29365 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29365 + 100] = ext_call.return_data[0]
                                                mem[_29365 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29365 + 196] = this.address
                                                mem[_29365 + 228] = block.timestamp + 120
                                                mem[_29365 + 164] = 160
                                                mem[_29365 + 260] = mem[_29365]
                                                s = 0
                                                while s < 32 * mem[_29365]:
                                                    mem[s + _29365 + 292] = mem[s + _29365 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29365 + 260 len (32 * mem[_29365]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24656 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24656] = 26
                                            mem[_24656 + 32] = 'SafeMath: division by zero'
                                            _25365 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25365] = 26
                                            mem[_25365 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25365 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30305 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30305]
                                            mem[_30305 + 32] = stor8
                                            require 1 < mem[_30305]
                                            mem[_30305 + 64] = stor7
                                            mem[_30305 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30305 + 100] = ext_call.return_data[0]
                                            mem[_30305 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30305 + 196] = this.address
                                            mem[_30305 + 228] = block.timestamp + 120
                                            mem[_30305 + 164] = 160
                                            mem[_30305 + 260] = mem[_30305]
                                            s = 0
                                            while s < 32 * mem[_30305]:
                                                mem[s + _30305 + 292] = mem[s + _30305 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30305 + 260 len (32 * mem[_30305]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30305]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19893 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19893] = 26
                                        mem[_19893 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19893 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24474 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24474] = 26
                                            mem[_24474 + 32] = 'SafeMath: division by zero'
                                            _25019 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25019] = 26
                                            mem[_25019 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25019 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29359 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29359]
                                            mem[_29359 + 32] = stor8
                                            require 1 < mem[_29359]
                                            mem[_29359 + 64] = stor7
                                            mem[_29359 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29359 + 100] = ext_call.return_data[0]
                                            mem[_29359 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29359 + 196] = this.address
                                            mem[_29359 + 228] = block.timestamp + 120
                                            mem[_29359 + 164] = 160
                                            mem[_29359 + 260] = mem[_29359]
                                            s = 0
                                            while s < 32 * mem[_29359]:
                                                mem[s + _29359 + 292] = mem[s + _29359 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29359 + 260 len (32 * mem[_29359]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24655 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24655] = 26
                                                mem[_24655 + 32] = 'SafeMath: division by zero'
                                                _25364 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25364] = 26
                                                mem[_25364 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25364 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30299 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30299]
                                                mem[_30299 + 32] = stor8
                                                require 1 < mem[_30299]
                                                mem[_30299 + 64] = stor7
                                                mem[_30299 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30299 + 100] = ext_call.return_data[0]
                                                mem[_30299 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30299 + 196] = this.address
                                                mem[_30299 + 228] = block.timestamp + 120
                                                mem[_30299 + 164] = 160
                                                mem[_30299 + 260] = mem[_30299]
                                                s = 0
                                                while s < 32 * mem[_30299]:
                                                    mem[s + _30299 + 292] = mem[s + _30299 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30299 + 260 len (32 * mem[_30299]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30299]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24732 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24732] = 26
                                            mem[_24732 + 32] = 'SafeMath: division by zero'
                                            _25891 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25891] = 26
                                            mem[_25891 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25891 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30913 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30913]
                                            mem[_30913 + 32] = stor8
                                            require 1 < mem[_30913]
                                            mem[_30913 + 64] = stor7
                                            mem[_30913 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30913 + 100] = ext_call.return_data[0]
                                            mem[_30913 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30913 + 196] = this.address
                                            mem[_30913 + 228] = block.timestamp + 120
                                            mem[_30913 + 164] = 160
                                            mem[_30913 + 260] = mem[_30913]
                                            s = 0
                                            while s < 32 * mem[_30913]:
                                                mem[s + _30913 + 292] = mem[s + _30913 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30913 + 260 len (32 * mem[_30913]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17742 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17742] = 30
                                    mem[_17742 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17912 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17912 + 68] = mem[idx + _17742 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17912 + 68] = mem[_17912 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17912 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18779 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18779] = 26
                                        mem[_18779 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19681 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19681] = 26
                                        mem[_19681 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19681 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24097 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24097] = 26
                                            mem[_24097 + 32] = 'SafeMath: division by zero'
                                            _24779 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24779] = 26
                                            mem[_24779 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24779 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27374 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27374]
                                            mem[_27374 + 32] = stor8
                                            require 1 < mem[_27374]
                                            mem[_27374 + 64] = stor7
                                            mem[_27374 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27374 + 100] = ext_call.return_data[0]
                                            mem[_27374 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27374 + 196] = this.address
                                            mem[_27374 + 228] = block.timestamp + 120
                                            mem[_27374 + 164] = 160
                                            mem[_27374 + 260] = mem[_27374]
                                            s = 0
                                            while s < 32 * mem[_27374]:
                                                mem[s + _27374 + 292] = mem[s + _27374 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27374 + 260 len (32 * mem[_27374]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24260 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24260] = 26
                                                mem[_24260 + 32] = 'SafeMath: division by zero'
                                                _24846 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24846] = 26
                                                mem[_24846 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24846 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28322 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28322]
                                                mem[_28322 + 32] = stor8
                                                require 1 < mem[_28322]
                                                mem[_28322 + 64] = stor7
                                                mem[_28322 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28322 + 100] = ext_call.return_data[0]
                                                mem[_28322 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28322 + 196] = this.address
                                                mem[_28322 + 228] = block.timestamp + 120
                                                mem[_28322 + 164] = 160
                                                mem[_28322 + 260] = mem[_28322]
                                                s = 0
                                                while s < 32 * mem[_28322]:
                                                    mem[s + _28322 + 292] = mem[s + _28322 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28322 + 260 len (32 * mem[_28322]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24471 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24471] = 26
                                                mem[_24471 + 32] = 'SafeMath: division by zero'
                                                _25015 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25015] = 26
                                                mem[_25015 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25015 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29349 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29349]
                                                mem[_29349 + 32] = stor8
                                                require 1 < mem[_29349]
                                                mem[_29349 + 64] = stor7
                                                mem[_29349 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29349 + 100] = ext_call.return_data[0]
                                                mem[_29349 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29349 + 196] = this.address
                                                mem[_29349 + 228] = block.timestamp + 120
                                                mem[_29349 + 164] = 160
                                                mem[_29349 + 260] = mem[_29349]
                                                s = 0
                                                while s < 32 * mem[_29349]:
                                                    mem[s + _29349 + 292] = mem[s + _29349 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29349 + 260 len (32 * mem[_29349]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18827 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18827] = 26
                                        mem[_18827 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19787 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19787] = 26
                                            mem[_19787 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19787 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24259 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24259] = 26
                                                mem[_24259 + 32] = 'SafeMath: division by zero'
                                                _24845 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24845] = 26
                                                mem[_24845 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24845 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28316 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28316]
                                                mem[_28316 + 32] = stor8
                                                require 1 < mem[_28316]
                                                mem[_28316 + 64] = stor7
                                                mem[_28316 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28316 + 100] = ext_call.return_data[0]
                                                mem[_28316 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28316 + 196] = this.address
                                                mem[_28316 + 228] = block.timestamp + 120
                                                mem[_28316 + 164] = 160
                                                mem[_28316 + 260] = mem[_28316]
                                                s = 0
                                                while s < 32 * mem[_28316]:
                                                    mem[s + _28316 + 292] = mem[s + _28316 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28316 + 260 len (32 * mem[_28316]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24470 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24470] = 26
                                                mem[_24470 + 32] = 'SafeMath: division by zero'
                                                _25014 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25014] = 26
                                                mem[_25014 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25014 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29343 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29343]
                                                mem[_29343 + 32] = stor8
                                                require 1 < mem[_29343]
                                                mem[_29343 + 64] = stor7
                                                mem[_29343 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29343 + 100] = ext_call.return_data[0]
                                                mem[_29343 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29343 + 196] = this.address
                                                mem[_29343 + 228] = block.timestamp + 120
                                                mem[_29343 + 164] = 160
                                                mem[_29343 + 260] = mem[_29343]
                                                s = 0
                                                while s < 32 * mem[_29343]:
                                                    mem[s + _29343 + 292] = mem[s + _29343 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29343 + 260 len (32 * mem[_29343]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24654 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24654] = 26
                                            mem[_24654 + 32] = 'SafeMath: division by zero'
                                            _25356 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25356] = 26
                                            mem[_25356 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25356 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30289 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30289]
                                            mem[_30289 + 32] = stor8
                                            require 1 < mem[_30289]
                                            mem[_30289 + 64] = stor7
                                            mem[_30289 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30289 + 100] = ext_call.return_data[0]
                                            mem[_30289 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30289 + 196] = this.address
                                            mem[_30289 + 228] = block.timestamp + 120
                                            mem[_30289 + 164] = 160
                                            mem[_30289 + 260] = mem[_30289]
                                            s = 0
                                            while s < 32 * mem[_30289]:
                                                mem[s + _30289 + 292] = mem[s + _30289 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30289 + 260 len (32 * mem[_30289]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30289]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19889 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19889] = 26
                                        mem[_19889 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19889 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24469 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24469] = 26
                                            mem[_24469 + 32] = 'SafeMath: division by zero'
                                            _25013 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25013] = 26
                                            mem[_25013 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25013 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29337 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29337]
                                            mem[_29337 + 32] = stor8
                                            require 1 < mem[_29337]
                                            mem[_29337 + 64] = stor7
                                            mem[_29337 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29337 + 100] = ext_call.return_data[0]
                                            mem[_29337 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29337 + 196] = this.address
                                            mem[_29337 + 228] = block.timestamp + 120
                                            mem[_29337 + 164] = 160
                                            mem[_29337 + 260] = mem[_29337]
                                            s = 0
                                            while s < 32 * mem[_29337]:
                                                mem[s + _29337 + 292] = mem[s + _29337 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29337 + 260 len (32 * mem[_29337]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24653 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24653] = 26
                                                mem[_24653 + 32] = 'SafeMath: division by zero'
                                                _25355 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25355] = 26
                                                mem[_25355 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25355 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30283 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30283]
                                                mem[_30283 + 32] = stor8
                                                require 1 < mem[_30283]
                                                mem[_30283 + 64] = stor7
                                                mem[_30283 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30283 + 100] = ext_call.return_data[0]
                                                mem[_30283 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30283 + 196] = this.address
                                                mem[_30283 + 228] = block.timestamp + 120
                                                mem[_30283 + 164] = 160
                                                mem[_30283 + 260] = mem[_30283]
                                                s = 0
                                                while s < 32 * mem[_30283]:
                                                    mem[s + _30283 + 292] = mem[s + _30283 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30283 + 260 len (32 * mem[_30283]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30283]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24731 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24731] = 26
                                            mem[_24731 + 32] = 'SafeMath: division by zero'
                                            _25877 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25877] = 26
                                            mem[_25877 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25877 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30905 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30905]
                                            mem[_30905 + 32] = stor8
                                            require 1 < mem[_30905]
                                            mem[_30905 + 64] = stor7
                                            mem[_30905 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30905 + 100] = ext_call.return_data[0]
                                            mem[_30905 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30905 + 196] = this.address
                                            mem[_30905 + 228] = block.timestamp + 120
                                            mem[_30905 + 164] = 160
                                            mem[_30905 + 260] = mem[_30905]
                                            s = 0
                                            while s < 32 * mem[_30905]:
                                                mem[s + _30905 + 292] = mem[s + _30905 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30905 + 260 len (32 * mem[_30905]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17740 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17740] = 30
                                    mem[_17740 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17906 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17906 + 68] = mem[idx + _17740 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17906 + 68] = mem[_17906 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17906 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18778 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18778] = 26
                                        mem[_18778 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19678 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19678] = 26
                                        mem[_19678 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19678 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24094 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24094] = 26
                                            mem[_24094 + 32] = 'SafeMath: division by zero'
                                            _24778 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24778] = 26
                                            mem[_24778 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24778 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27355 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27355]
                                            mem[_27355 + 32] = stor8
                                            require 1 < mem[_27355]
                                            mem[_27355 + 64] = stor7
                                            mem[_27355 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27355 + 100] = ext_call.return_data[0]
                                            mem[_27355 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27355 + 196] = this.address
                                            mem[_27355 + 228] = block.timestamp + 120
                                            mem[_27355 + 164] = 160
                                            mem[_27355 + 260] = mem[_27355]
                                            s = 0
                                            while s < 32 * mem[_27355]:
                                                mem[s + _27355 + 292] = mem[s + _27355 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27355 + 260 len (32 * mem[_27355]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24256 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24256] = 26
                                                mem[_24256 + 32] = 'SafeMath: division by zero'
                                                _24844 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24844] = 26
                                                mem[_24844 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24844 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28301 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28301]
                                                mem[_28301 + 32] = stor8
                                                require 1 < mem[_28301]
                                                mem[_28301 + 64] = stor7
                                                mem[_28301 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28301 + 100] = ext_call.return_data[0]
                                                mem[_28301 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28301 + 196] = this.address
                                                mem[_28301 + 228] = block.timestamp + 120
                                                mem[_28301 + 164] = 160
                                                mem[_28301 + 260] = mem[_28301]
                                                s = 0
                                                while s < 32 * mem[_28301]:
                                                    mem[s + _28301 + 292] = mem[s + _28301 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28301 + 260 len (32 * mem[_28301]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24466 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24466] = 26
                                                mem[_24466 + 32] = 'SafeMath: division by zero'
                                                _25009 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25009] = 26
                                                mem[_25009 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25009 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29327 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29327]
                                                mem[_29327 + 32] = stor8
                                                require 1 < mem[_29327]
                                                mem[_29327 + 64] = stor7
                                                mem[_29327 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29327 + 100] = ext_call.return_data[0]
                                                mem[_29327 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29327 + 196] = this.address
                                                mem[_29327 + 228] = block.timestamp + 120
                                                mem[_29327 + 164] = 160
                                                mem[_29327 + 260] = mem[_29327]
                                                s = 0
                                                while s < 32 * mem[_29327]:
                                                    mem[s + _29327 + 292] = mem[s + _29327 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29327 + 260 len (32 * mem[_29327]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18826 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18826] = 26
                                        mem[_18826 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19786 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19786] = 26
                                            mem[_19786 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19786 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24255 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24255] = 26
                                                mem[_24255 + 32] = 'SafeMath: division by zero'
                                                _24843 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24843] = 26
                                                mem[_24843 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24843 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28295 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28295]
                                                mem[_28295 + 32] = stor8
                                                require 1 < mem[_28295]
                                                mem[_28295 + 64] = stor7
                                                mem[_28295 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28295 + 100] = ext_call.return_data[0]
                                                mem[_28295 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28295 + 196] = this.address
                                                mem[_28295 + 228] = block.timestamp + 120
                                                mem[_28295 + 164] = 160
                                                mem[_28295 + 260] = mem[_28295]
                                                s = 0
                                                while s < 32 * mem[_28295]:
                                                    mem[s + _28295 + 292] = mem[s + _28295 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28295 + 260 len (32 * mem[_28295]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24465 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24465] = 26
                                                mem[_24465 + 32] = 'SafeMath: division by zero'
                                                _25008 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25008] = 26
                                                mem[_25008 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25008 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29321 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29321]
                                                mem[_29321 + 32] = stor8
                                                require 1 < mem[_29321]
                                                mem[_29321 + 64] = stor7
                                                mem[_29321 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29321 + 100] = ext_call.return_data[0]
                                                mem[_29321 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29321 + 196] = this.address
                                                mem[_29321 + 228] = block.timestamp + 120
                                                mem[_29321 + 164] = 160
                                                mem[_29321 + 260] = mem[_29321]
                                                s = 0
                                                while s < 32 * mem[_29321]:
                                                    mem[s + _29321 + 292] = mem[s + _29321 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29321 + 260 len (32 * mem[_29321]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24652 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24652] = 26
                                            mem[_24652 + 32] = 'SafeMath: division by zero'
                                            _25347 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25347] = 26
                                            mem[_25347 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25347 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30273 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30273]
                                            mem[_30273 + 32] = stor8
                                            require 1 < mem[_30273]
                                            mem[_30273 + 64] = stor7
                                            mem[_30273 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30273 + 100] = ext_call.return_data[0]
                                            mem[_30273 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30273 + 196] = this.address
                                            mem[_30273 + 228] = block.timestamp + 120
                                            mem[_30273 + 164] = 160
                                            mem[_30273 + 260] = mem[_30273]
                                            s = 0
                                            while s < 32 * mem[_30273]:
                                                mem[s + _30273 + 292] = mem[s + _30273 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30273 + 260 len (32 * mem[_30273]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30273]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19885 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19885] = 26
                                        mem[_19885 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19885 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24464 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24464] = 26
                                            mem[_24464 + 32] = 'SafeMath: division by zero'
                                            _25007 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25007] = 26
                                            mem[_25007 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25007 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29315 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29315]
                                            mem[_29315 + 32] = stor8
                                            require 1 < mem[_29315]
                                            mem[_29315 + 64] = stor7
                                            mem[_29315 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29315 + 100] = ext_call.return_data[0]
                                            mem[_29315 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29315 + 196] = this.address
                                            mem[_29315 + 228] = block.timestamp + 120
                                            mem[_29315 + 164] = 160
                                            mem[_29315 + 260] = mem[_29315]
                                            s = 0
                                            while s < 32 * mem[_29315]:
                                                mem[s + _29315 + 292] = mem[s + _29315 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29315 + 260 len (32 * mem[_29315]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24651 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24651] = 26
                                                mem[_24651 + 32] = 'SafeMath: division by zero'
                                                _25346 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25346] = 26
                                                mem[_25346 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25346 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30267 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30267]
                                                mem[_30267 + 32] = stor8
                                                require 1 < mem[_30267]
                                                mem[_30267 + 64] = stor7
                                                mem[_30267 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30267 + 100] = ext_call.return_data[0]
                                                mem[_30267 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30267 + 196] = this.address
                                                mem[_30267 + 228] = block.timestamp + 120
                                                mem[_30267 + 164] = 160
                                                mem[_30267 + 260] = mem[_30267]
                                                s = 0
                                                while s < 32 * mem[_30267]:
                                                    mem[s + _30267 + 292] = mem[s + _30267 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30267 + 260 len (32 * mem[_30267]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30267]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24730 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24730] = 26
                                            mem[_24730 + 32] = 'SafeMath: division by zero'
                                            _25863 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25863] = 26
                                            mem[_25863 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25863 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30897 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30897]
                                            mem[_30897 + 32] = stor8
                                            require 1 < mem[_30897]
                                            mem[_30897 + 64] = stor7
                                            mem[_30897 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30897 + 100] = ext_call.return_data[0]
                                            mem[_30897 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30897 + 196] = this.address
                                            mem[_30897 + 228] = block.timestamp + 120
                                            mem[_30897 + 164] = 160
                                            mem[_30897 + 260] = mem[_30897]
                                            s = 0
                                            while s < 32 * mem[_30897]:
                                                mem[s + _30897 + 292] = mem[s + _30897 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30897 + 260 len (32 * mem[_30897]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17738 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17738] = 30
                                    mem[_17738 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17900 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17900 + 68] = mem[idx + _17738 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17900 + 68] = mem[_17900 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17900 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18777 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18777] = 26
                                        mem[_18777 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19675 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19675] = 26
                                        mem[_19675 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19675 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24091 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24091] = 26
                                            mem[_24091 + 32] = 'SafeMath: division by zero'
                                            _24777 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24777] = 26
                                            mem[_24777 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24777 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27336 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27336]
                                            mem[_27336 + 32] = stor8
                                            require 1 < mem[_27336]
                                            mem[_27336 + 64] = stor7
                                            mem[_27336 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27336 + 100] = ext_call.return_data[0]
                                            mem[_27336 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27336 + 196] = this.address
                                            mem[_27336 + 228] = block.timestamp + 120
                                            mem[_27336 + 164] = 160
                                            mem[_27336 + 260] = mem[_27336]
                                            s = 0
                                            while s < 32 * mem[_27336]:
                                                mem[s + _27336 + 292] = mem[s + _27336 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27336 + 260 len (32 * mem[_27336]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24252 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24252] = 26
                                                mem[_24252 + 32] = 'SafeMath: division by zero'
                                                _24842 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24842] = 26
                                                mem[_24842 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24842 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28280 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28280]
                                                mem[_28280 + 32] = stor8
                                                require 1 < mem[_28280]
                                                mem[_28280 + 64] = stor7
                                                mem[_28280 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28280 + 100] = ext_call.return_data[0]
                                                mem[_28280 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28280 + 196] = this.address
                                                mem[_28280 + 228] = block.timestamp + 120
                                                mem[_28280 + 164] = 160
                                                mem[_28280 + 260] = mem[_28280]
                                                s = 0
                                                while s < 32 * mem[_28280]:
                                                    mem[s + _28280 + 292] = mem[s + _28280 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28280 + 260 len (32 * mem[_28280]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24461 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24461] = 26
                                                mem[_24461 + 32] = 'SafeMath: division by zero'
                                                _25003 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25003] = 26
                                                mem[_25003 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25003 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29305 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29305]
                                                mem[_29305 + 32] = stor8
                                                require 1 < mem[_29305]
                                                mem[_29305 + 64] = stor7
                                                mem[_29305 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29305 + 100] = ext_call.return_data[0]
                                                mem[_29305 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29305 + 196] = this.address
                                                mem[_29305 + 228] = block.timestamp + 120
                                                mem[_29305 + 164] = 160
                                                mem[_29305 + 260] = mem[_29305]
                                                s = 0
                                                while s < 32 * mem[_29305]:
                                                    mem[s + _29305 + 292] = mem[s + _29305 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29305 + 260 len (32 * mem[_29305]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18825 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18825] = 26
                                        mem[_18825 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19785 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19785] = 26
                                            mem[_19785 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19785 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24251 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24251] = 26
                                                mem[_24251 + 32] = 'SafeMath: division by zero'
                                                _24841 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24841] = 26
                                                mem[_24841 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24841 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28274 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28274]
                                                mem[_28274 + 32] = stor8
                                                require 1 < mem[_28274]
                                                mem[_28274 + 64] = stor7
                                                mem[_28274 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28274 + 100] = ext_call.return_data[0]
                                                mem[_28274 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28274 + 196] = this.address
                                                mem[_28274 + 228] = block.timestamp + 120
                                                mem[_28274 + 164] = 160
                                                mem[_28274 + 260] = mem[_28274]
                                                s = 0
                                                while s < 32 * mem[_28274]:
                                                    mem[s + _28274 + 292] = mem[s + _28274 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28274 + 260 len (32 * mem[_28274]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24460 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24460] = 26
                                                mem[_24460 + 32] = 'SafeMath: division by zero'
                                                _25002 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25002] = 26
                                                mem[_25002 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25002 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29299 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29299]
                                                mem[_29299 + 32] = stor8
                                                require 1 < mem[_29299]
                                                mem[_29299 + 64] = stor7
                                                mem[_29299 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29299 + 100] = ext_call.return_data[0]
                                                mem[_29299 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29299 + 196] = this.address
                                                mem[_29299 + 228] = block.timestamp + 120
                                                mem[_29299 + 164] = 160
                                                mem[_29299 + 260] = mem[_29299]
                                                s = 0
                                                while s < 32 * mem[_29299]:
                                                    mem[s + _29299 + 292] = mem[s + _29299 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29299 + 260 len (32 * mem[_29299]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24650 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24650] = 26
                                            mem[_24650 + 32] = 'SafeMath: division by zero'
                                            _25338 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25338] = 26
                                            mem[_25338 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25338 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30257 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30257]
                                            mem[_30257 + 32] = stor8
                                            require 1 < mem[_30257]
                                            mem[_30257 + 64] = stor7
                                            mem[_30257 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30257 + 100] = ext_call.return_data[0]
                                            mem[_30257 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30257 + 196] = this.address
                                            mem[_30257 + 228] = block.timestamp + 120
                                            mem[_30257 + 164] = 160
                                            mem[_30257 + 260] = mem[_30257]
                                            s = 0
                                            while s < 32 * mem[_30257]:
                                                mem[s + _30257 + 292] = mem[s + _30257 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30257 + 260 len (32 * mem[_30257]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30257]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19881 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19881] = 26
                                        mem[_19881 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19881 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24459 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24459] = 26
                                            mem[_24459 + 32] = 'SafeMath: division by zero'
                                            _25001 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25001] = 26
                                            mem[_25001 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25001 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29293 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29293]
                                            mem[_29293 + 32] = stor8
                                            require 1 < mem[_29293]
                                            mem[_29293 + 64] = stor7
                                            mem[_29293 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29293 + 100] = ext_call.return_data[0]
                                            mem[_29293 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29293 + 196] = this.address
                                            mem[_29293 + 228] = block.timestamp + 120
                                            mem[_29293 + 164] = 160
                                            mem[_29293 + 260] = mem[_29293]
                                            s = 0
                                            while s < 32 * mem[_29293]:
                                                mem[s + _29293 + 292] = mem[s + _29293 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29293 + 260 len (32 * mem[_29293]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24649 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24649] = 26
                                                mem[_24649 + 32] = 'SafeMath: division by zero'
                                                _25337 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25337] = 26
                                                mem[_25337 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25337 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30251 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30251]
                                                mem[_30251 + 32] = stor8
                                                require 1 < mem[_30251]
                                                mem[_30251 + 64] = stor7
                                                mem[_30251 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30251 + 100] = ext_call.return_data[0]
                                                mem[_30251 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30251 + 196] = this.address
                                                mem[_30251 + 228] = block.timestamp + 120
                                                mem[_30251 + 164] = 160
                                                mem[_30251 + 260] = mem[_30251]
                                                s = 0
                                                while s < 32 * mem[_30251]:
                                                    mem[s + _30251 + 292] = mem[s + _30251 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30251 + 260 len (32 * mem[_30251]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30251]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24729 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24729] = 26
                                            mem[_24729 + 32] = 'SafeMath: division by zero'
                                            _25849 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25849] = 26
                                            mem[_25849 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25849 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30889 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30889]
                                            mem[_30889 + 32] = stor8
                                            require 1 < mem[_30889]
                                            mem[_30889 + 64] = stor7
                                            mem[_30889 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30889 + 100] = ext_call.return_data[0]
                                            mem[_30889 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30889 + 196] = this.address
                                            mem[_30889 + 228] = block.timestamp + 120
                                            mem[_30889 + 164] = 160
                                            mem[_30889 + 260] = mem[_30889]
                                            s = 0
                                            while s < 32 * mem[_30889]:
                                                mem[s + _30889 + 292] = mem[s + _30889 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30889 + 260 len (32 * mem[_30889]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
        else:
            require msg.sender == owner
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor12)
            staticcall stor12.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
            staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17800 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17800] = 30
                                    mem[_17800 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18086 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18086 + 68] = mem[idx + _17800 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18086 + 68] = mem[_18086 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18086 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18808 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18808] = 26
                                        mem[_18808 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19768 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19768] = 26
                                        mem[_19768 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19768 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24184 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24184] = 26
                                            mem[_24184 + 32] = 'SafeMath: division by zero'
                                            _24808 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24808] = 26
                                            mem[_24808 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24808 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27925 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27925]
                                            mem[_27925 + 32] = stor8
                                            require 1 < mem[_27925]
                                            mem[_27925 + 64] = stor7
                                            mem[_27925 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27925 + 100] = ext_call.return_data[0]
                                            mem[_27925 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27925 + 196] = this.address
                                            mem[_27925 + 228] = block.timestamp + 120
                                            mem[_27925 + 164] = 160
                                            mem[_27925 + 260] = mem[_27925]
                                            s = 0
                                            while s < 32 * mem[_27925]:
                                                mem[s + _27925 + 292] = mem[s + _27925 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27925 + 260 len (32 * mem[_27925]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24376 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24376] = 26
                                                mem[_24376 + 32] = 'SafeMath: division by zero'
                                                _24904 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24904] = 26
                                                mem[_24904 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24904 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28931 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28931]
                                                mem[_28931 + 32] = stor8
                                                require 1 < mem[_28931]
                                                mem[_28931 + 64] = stor7
                                                mem[_28931 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28931 + 100] = ext_call.return_data[0]
                                                mem[_28931 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28931 + 196] = this.address
                                                mem[_28931 + 228] = block.timestamp + 120
                                                mem[_28931 + 164] = 160
                                                mem[_28931 + 260] = mem[_28931]
                                                s = 0
                                                while s < 32 * mem[_28931]:
                                                    mem[s + _28931 + 292] = mem[s + _28931 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28931 + 260 len (32 * mem[_28931]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24616 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24616] = 26
                                                mem[_24616 + 32] = 'SafeMath: division by zero'
                                                _25189 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25189] = 26
                                                mem[_25189 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25189 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29987 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29987]
                                                mem[_29987 + 32] = stor8
                                                require 1 < mem[_29987]
                                                mem[_29987 + 64] = stor7
                                                mem[_29987 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29987 + 100] = ext_call.return_data[0]
                                                mem[_29987 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29987 + 196] = this.address
                                                mem[_29987 + 228] = block.timestamp + 120
                                                mem[_29987 + 164] = 160
                                                mem[_29987 + 260] = mem[_29987]
                                                s = 0
                                                while s < 32 * mem[_29987]:
                                                    mem[s + _29987 + 292] = mem[s + _29987 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29987 + 260 len (32 * mem[_29987]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18856 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18856] = 26
                                        mem[_18856 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19816 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19816] = 26
                                            mem[_19816 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19816 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24375 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24375] = 26
                                                mem[_24375 + 32] = 'SafeMath: division by zero'
                                                _24903 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24903] = 26
                                                mem[_24903 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24903 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28925 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28925]
                                                mem[_28925 + 32] = stor8
                                                require 1 < mem[_28925]
                                                mem[_28925 + 64] = stor7
                                                mem[_28925 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28925 + 100] = ext_call.return_data[0]
                                                mem[_28925 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28925 + 196] = this.address
                                                mem[_28925 + 228] = block.timestamp + 120
                                                mem[_28925 + 164] = 160
                                                mem[_28925 + 260] = mem[_28925]
                                                s = 0
                                                while s < 32 * mem[_28925]:
                                                    mem[s + _28925 + 292] = mem[s + _28925 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28925 + 260 len (32 * mem[_28925]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24615 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24615] = 26
                                                mem[_24615 + 32] = 'SafeMath: division by zero'
                                                _25188 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25188] = 26
                                                mem[_25188 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25188 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29981 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29981]
                                                mem[_29981 + 32] = stor8
                                                require 1 < mem[_29981]
                                                mem[_29981 + 64] = stor7
                                                mem[_29981 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29981 + 100] = ext_call.return_data[0]
                                                mem[_29981 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29981 + 196] = this.address
                                                mem[_29981 + 228] = block.timestamp + 120
                                                mem[_29981 + 164] = 160
                                                mem[_29981 + 260] = mem[_29981]
                                                s = 0
                                                while s < 32 * mem[_29981]:
                                                    mem[s + _29981 + 292] = mem[s + _29981 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29981 + 260 len (32 * mem[_29981]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24712 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24712] = 26
                                            mem[_24712 + 32] = 'SafeMath: division by zero'
                                            _25617 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25617] = 26
                                            mem[_25617 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25617 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30753 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30753]
                                            mem[_30753 + 32] = stor8
                                            require 1 < mem[_30753]
                                            mem[_30753 + 64] = stor7
                                            mem[_30753 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30753 + 100] = ext_call.return_data[0]
                                            mem[_30753 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30753 + 196] = this.address
                                            mem[_30753 + 228] = block.timestamp + 120
                                            mem[_30753 + 164] = 160
                                            mem[_30753 + 260] = mem[_30753]
                                            s = 0
                                            while s < 32 * mem[_30753]:
                                                mem[s + _30753 + 292] = mem[s + _30753 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30753 + 260 len (32 * mem[_30753]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30753]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _20005 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_20005] = 26
                                        mem[_20005 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _20005 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24614 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24614] = 26
                                            mem[_24614 + 32] = 'SafeMath: division by zero'
                                            _25187 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25187] = 26
                                            mem[_25187 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25187 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29975 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29975]
                                            mem[_29975 + 32] = stor8
                                            require 1 < mem[_29975]
                                            mem[_29975 + 64] = stor7
                                            mem[_29975 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29975 + 100] = ext_call.return_data[0]
                                            mem[_29975 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29975 + 196] = this.address
                                            mem[_29975 + 228] = block.timestamp + 120
                                            mem[_29975 + 164] = 160
                                            mem[_29975 + 260] = mem[_29975]
                                            s = 0
                                            while s < 32 * mem[_29975]:
                                                mem[s + _29975 + 292] = mem[s + _29975 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29975 + 260 len (32 * mem[_29975]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24711 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24711] = 26
                                                mem[_24711 + 32] = 'SafeMath: division by zero'
                                                _25616 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25616] = 26
                                                mem[_25616 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25616 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30747 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30747]
                                                mem[_30747 + 32] = stor8
                                                require 1 < mem[_30747]
                                                mem[_30747 + 64] = stor7
                                                mem[_30747 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30747 + 100] = ext_call.return_data[0]
                                                mem[_30747 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30747 + 196] = this.address
                                                mem[_30747 + 228] = block.timestamp + 120
                                                mem[_30747 + 164] = 160
                                                mem[_30747 + 260] = mem[_30747]
                                                s = 0
                                                while s < 32 * mem[_30747]:
                                                    mem[s + _30747 + 292] = mem[s + _30747 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30747 + 260 len (32 * mem[_30747]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30747]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24760 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24760] = 26
                                            mem[_24760 + 32] = 'SafeMath: division by zero'
                                            _26283 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26283] = 26
                                            mem[_26283 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26283 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31137 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31137]
                                            mem[_31137 + 32] = stor8
                                            require 1 < mem[_31137]
                                            mem[_31137 + 64] = stor7
                                            mem[_31137 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31137 + 100] = ext_call.return_data[0]
                                            mem[_31137 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31137 + 196] = this.address
                                            mem[_31137 + 228] = block.timestamp + 120
                                            mem[_31137 + 164] = 160
                                            mem[_31137 + 260] = mem[_31137]
                                            s = 0
                                            while s < 32 * mem[_31137]:
                                                mem[s + _31137 + 292] = mem[s + _31137 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31137 + 260 len (32 * mem[_31137]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17798 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17798] = 30
                                    mem[_17798 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18080 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18080 + 68] = mem[idx + _17798 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18080 + 68] = mem[_18080 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18080 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18807 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18807] = 26
                                        mem[_18807 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19765 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19765] = 26
                                        mem[_19765 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19765 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24181 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24181] = 26
                                            mem[_24181 + 32] = 'SafeMath: division by zero'
                                            _24807 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24807] = 26
                                            mem[_24807 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24807 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27906 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27906]
                                            mem[_27906 + 32] = stor8
                                            require 1 < mem[_27906]
                                            mem[_27906 + 64] = stor7
                                            mem[_27906 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27906 + 100] = ext_call.return_data[0]
                                            mem[_27906 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27906 + 196] = this.address
                                            mem[_27906 + 228] = block.timestamp + 120
                                            mem[_27906 + 164] = 160
                                            mem[_27906 + 260] = mem[_27906]
                                            s = 0
                                            while s < 32 * mem[_27906]:
                                                mem[s + _27906 + 292] = mem[s + _27906 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27906 + 260 len (32 * mem[_27906]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24372 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24372] = 26
                                                mem[_24372 + 32] = 'SafeMath: division by zero'
                                                _24902 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24902] = 26
                                                mem[_24902 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24902 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28910 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28910]
                                                mem[_28910 + 32] = stor8
                                                require 1 < mem[_28910]
                                                mem[_28910 + 64] = stor7
                                                mem[_28910 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28910 + 100] = ext_call.return_data[0]
                                                mem[_28910 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28910 + 196] = this.address
                                                mem[_28910 + 228] = block.timestamp + 120
                                                mem[_28910 + 164] = 160
                                                mem[_28910 + 260] = mem[_28910]
                                                s = 0
                                                while s < 32 * mem[_28910]:
                                                    mem[s + _28910 + 292] = mem[s + _28910 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28910 + 260 len (32 * mem[_28910]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24611 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24611] = 26
                                                mem[_24611 + 32] = 'SafeMath: division by zero'
                                                _25183 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25183] = 26
                                                mem[_25183 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25183 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29965 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29965]
                                                mem[_29965 + 32] = stor8
                                                require 1 < mem[_29965]
                                                mem[_29965 + 64] = stor7
                                                mem[_29965 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29965 + 100] = ext_call.return_data[0]
                                                mem[_29965 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29965 + 196] = this.address
                                                mem[_29965 + 228] = block.timestamp + 120
                                                mem[_29965 + 164] = 160
                                                mem[_29965 + 260] = mem[_29965]
                                                s = 0
                                                while s < 32 * mem[_29965]:
                                                    mem[s + _29965 + 292] = mem[s + _29965 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29965 + 260 len (32 * mem[_29965]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18855 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18855] = 26
                                        mem[_18855 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19815 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19815] = 26
                                            mem[_19815 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19815 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24371 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24371] = 26
                                                mem[_24371 + 32] = 'SafeMath: division by zero'
                                                _24901 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24901] = 26
                                                mem[_24901 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24901 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28904 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28904]
                                                mem[_28904 + 32] = stor8
                                                require 1 < mem[_28904]
                                                mem[_28904 + 64] = stor7
                                                mem[_28904 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28904 + 100] = ext_call.return_data[0]
                                                mem[_28904 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28904 + 196] = this.address
                                                mem[_28904 + 228] = block.timestamp + 120
                                                mem[_28904 + 164] = 160
                                                mem[_28904 + 260] = mem[_28904]
                                                s = 0
                                                while s < 32 * mem[_28904]:
                                                    mem[s + _28904 + 292] = mem[s + _28904 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28904 + 260 len (32 * mem[_28904]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24610 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24610] = 26
                                                mem[_24610 + 32] = 'SafeMath: division by zero'
                                                _25182 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25182] = 26
                                                mem[_25182 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25182 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29959 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29959]
                                                mem[_29959 + 32] = stor8
                                                require 1 < mem[_29959]
                                                mem[_29959 + 64] = stor7
                                                mem[_29959 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29959 + 100] = ext_call.return_data[0]
                                                mem[_29959 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29959 + 196] = this.address
                                                mem[_29959 + 228] = block.timestamp + 120
                                                mem[_29959 + 164] = 160
                                                mem[_29959 + 260] = mem[_29959]
                                                s = 0
                                                while s < 32 * mem[_29959]:
                                                    mem[s + _29959 + 292] = mem[s + _29959 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29959 + 260 len (32 * mem[_29959]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24710 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24710] = 26
                                            mem[_24710 + 32] = 'SafeMath: division by zero'
                                            _25608 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25608] = 26
                                            mem[_25608 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25608 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30737 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30737]
                                            mem[_30737 + 32] = stor8
                                            require 1 < mem[_30737]
                                            mem[_30737 + 64] = stor7
                                            mem[_30737 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30737 + 100] = ext_call.return_data[0]
                                            mem[_30737 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30737 + 196] = this.address
                                            mem[_30737 + 228] = block.timestamp + 120
                                            mem[_30737 + 164] = 160
                                            mem[_30737 + 260] = mem[_30737]
                                            s = 0
                                            while s < 32 * mem[_30737]:
                                                mem[s + _30737 + 292] = mem[s + _30737 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30737 + 260 len (32 * mem[_30737]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30737]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _20001 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_20001] = 26
                                        mem[_20001 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _20001 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24609 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24609] = 26
                                            mem[_24609 + 32] = 'SafeMath: division by zero'
                                            _25181 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25181] = 26
                                            mem[_25181 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25181 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29953 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29953]
                                            mem[_29953 + 32] = stor8
                                            require 1 < mem[_29953]
                                            mem[_29953 + 64] = stor7
                                            mem[_29953 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29953 + 100] = ext_call.return_data[0]
                                            mem[_29953 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29953 + 196] = this.address
                                            mem[_29953 + 228] = block.timestamp + 120
                                            mem[_29953 + 164] = 160
                                            mem[_29953 + 260] = mem[_29953]
                                            s = 0
                                            while s < 32 * mem[_29953]:
                                                mem[s + _29953 + 292] = mem[s + _29953 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29953 + 260 len (32 * mem[_29953]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24709 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24709] = 26
                                                mem[_24709 + 32] = 'SafeMath: division by zero'
                                                _25607 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25607] = 26
                                                mem[_25607 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25607 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30731 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30731]
                                                mem[_30731 + 32] = stor8
                                                require 1 < mem[_30731]
                                                mem[_30731 + 64] = stor7
                                                mem[_30731 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30731 + 100] = ext_call.return_data[0]
                                                mem[_30731 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30731 + 196] = this.address
                                                mem[_30731 + 228] = block.timestamp + 120
                                                mem[_30731 + 164] = 160
                                                mem[_30731 + 260] = mem[_30731]
                                                s = 0
                                                while s < 32 * mem[_30731]:
                                                    mem[s + _30731 + 292] = mem[s + _30731 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30731 + 260 len (32 * mem[_30731]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30731]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24759 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24759] = 26
                                            mem[_24759 + 32] = 'SafeMath: division by zero'
                                            _26269 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26269] = 26
                                            mem[_26269 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26269 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31129 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31129]
                                            mem[_31129 + 32] = stor8
                                            require 1 < mem[_31129]
                                            mem[_31129 + 64] = stor7
                                            mem[_31129 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31129 + 100] = ext_call.return_data[0]
                                            mem[_31129 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31129 + 196] = this.address
                                            mem[_31129 + 228] = block.timestamp + 120
                                            mem[_31129 + 164] = 160
                                            mem[_31129 + 260] = mem[_31129]
                                            s = 0
                                            while s < 32 * mem[_31129]:
                                                mem[s + _31129 + 292] = mem[s + _31129 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31129 + 260 len (32 * mem[_31129]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17796 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17796] = 30
                                    mem[_17796 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18074 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18074 + 68] = mem[idx + _17796 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18074 + 68] = mem[_18074 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18074 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18806 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18806] = 26
                                        mem[_18806 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19762 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19762] = 26
                                        mem[_19762 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19762 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24178 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24178] = 26
                                            mem[_24178 + 32] = 'SafeMath: division by zero'
                                            _24806 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24806] = 26
                                            mem[_24806 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24806 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27887 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27887]
                                            mem[_27887 + 32] = stor8
                                            require 1 < mem[_27887]
                                            mem[_27887 + 64] = stor7
                                            mem[_27887 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27887 + 100] = ext_call.return_data[0]
                                            mem[_27887 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27887 + 196] = this.address
                                            mem[_27887 + 228] = block.timestamp + 120
                                            mem[_27887 + 164] = 160
                                            mem[_27887 + 260] = mem[_27887]
                                            s = 0
                                            while s < 32 * mem[_27887]:
                                                mem[s + _27887 + 292] = mem[s + _27887 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27887 + 260 len (32 * mem[_27887]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24368 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24368] = 26
                                                mem[_24368 + 32] = 'SafeMath: division by zero'
                                                _24900 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24900] = 26
                                                mem[_24900 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24900 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28889 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28889]
                                                mem[_28889 + 32] = stor8
                                                require 1 < mem[_28889]
                                                mem[_28889 + 64] = stor7
                                                mem[_28889 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28889 + 100] = ext_call.return_data[0]
                                                mem[_28889 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28889 + 196] = this.address
                                                mem[_28889 + 228] = block.timestamp + 120
                                                mem[_28889 + 164] = 160
                                                mem[_28889 + 260] = mem[_28889]
                                                s = 0
                                                while s < 32 * mem[_28889]:
                                                    mem[s + _28889 + 292] = mem[s + _28889 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28889 + 260 len (32 * mem[_28889]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24606 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24606] = 26
                                                mem[_24606 + 32] = 'SafeMath: division by zero'
                                                _25177 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25177] = 26
                                                mem[_25177 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25177 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29943 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29943]
                                                mem[_29943 + 32] = stor8
                                                require 1 < mem[_29943]
                                                mem[_29943 + 64] = stor7
                                                mem[_29943 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29943 + 100] = ext_call.return_data[0]
                                                mem[_29943 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29943 + 196] = this.address
                                                mem[_29943 + 228] = block.timestamp + 120
                                                mem[_29943 + 164] = 160
                                                mem[_29943 + 260] = mem[_29943]
                                                s = 0
                                                while s < 32 * mem[_29943]:
                                                    mem[s + _29943 + 292] = mem[s + _29943 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29943 + 260 len (32 * mem[_29943]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18854 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18854] = 26
                                        mem[_18854 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19814 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19814] = 26
                                            mem[_19814 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19814 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24367 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24367] = 26
                                                mem[_24367 + 32] = 'SafeMath: division by zero'
                                                _24899 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24899] = 26
                                                mem[_24899 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24899 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28883 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28883]
                                                mem[_28883 + 32] = stor8
                                                require 1 < mem[_28883]
                                                mem[_28883 + 64] = stor7
                                                mem[_28883 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28883 + 100] = ext_call.return_data[0]
                                                mem[_28883 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28883 + 196] = this.address
                                                mem[_28883 + 228] = block.timestamp + 120
                                                mem[_28883 + 164] = 160
                                                mem[_28883 + 260] = mem[_28883]
                                                s = 0
                                                while s < 32 * mem[_28883]:
                                                    mem[s + _28883 + 292] = mem[s + _28883 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28883 + 260 len (32 * mem[_28883]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24605 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24605] = 26
                                                mem[_24605 + 32] = 'SafeMath: division by zero'
                                                _25176 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25176] = 26
                                                mem[_25176 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25176 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29937 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29937]
                                                mem[_29937 + 32] = stor8
                                                require 1 < mem[_29937]
                                                mem[_29937 + 64] = stor7
                                                mem[_29937 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29937 + 100] = ext_call.return_data[0]
                                                mem[_29937 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29937 + 196] = this.address
                                                mem[_29937 + 228] = block.timestamp + 120
                                                mem[_29937 + 164] = 160
                                                mem[_29937 + 260] = mem[_29937]
                                                s = 0
                                                while s < 32 * mem[_29937]:
                                                    mem[s + _29937 + 292] = mem[s + _29937 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29937 + 260 len (32 * mem[_29937]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24708 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24708] = 26
                                            mem[_24708 + 32] = 'SafeMath: division by zero'
                                            _25599 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25599] = 26
                                            mem[_25599 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25599 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30721 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30721]
                                            mem[_30721 + 32] = stor8
                                            require 1 < mem[_30721]
                                            mem[_30721 + 64] = stor7
                                            mem[_30721 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30721 + 100] = ext_call.return_data[0]
                                            mem[_30721 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30721 + 196] = this.address
                                            mem[_30721 + 228] = block.timestamp + 120
                                            mem[_30721 + 164] = 160
                                            mem[_30721 + 260] = mem[_30721]
                                            s = 0
                                            while s < 32 * mem[_30721]:
                                                mem[s + _30721 + 292] = mem[s + _30721 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30721 + 260 len (32 * mem[_30721]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30721]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19997 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19997] = 26
                                        mem[_19997 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19997 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24604 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24604] = 26
                                            mem[_24604 + 32] = 'SafeMath: division by zero'
                                            _25175 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25175] = 26
                                            mem[_25175 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25175 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29931 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29931]
                                            mem[_29931 + 32] = stor8
                                            require 1 < mem[_29931]
                                            mem[_29931 + 64] = stor7
                                            mem[_29931 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29931 + 100] = ext_call.return_data[0]
                                            mem[_29931 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29931 + 196] = this.address
                                            mem[_29931 + 228] = block.timestamp + 120
                                            mem[_29931 + 164] = 160
                                            mem[_29931 + 260] = mem[_29931]
                                            s = 0
                                            while s < 32 * mem[_29931]:
                                                mem[s + _29931 + 292] = mem[s + _29931 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29931 + 260 len (32 * mem[_29931]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24707 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24707] = 26
                                                mem[_24707 + 32] = 'SafeMath: division by zero'
                                                _25598 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25598] = 26
                                                mem[_25598 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25598 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30715 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30715]
                                                mem[_30715 + 32] = stor8
                                                require 1 < mem[_30715]
                                                mem[_30715 + 64] = stor7
                                                mem[_30715 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30715 + 100] = ext_call.return_data[0]
                                                mem[_30715 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30715 + 196] = this.address
                                                mem[_30715 + 228] = block.timestamp + 120
                                                mem[_30715 + 164] = 160
                                                mem[_30715 + 260] = mem[_30715]
                                                s = 0
                                                while s < 32 * mem[_30715]:
                                                    mem[s + _30715 + 292] = mem[s + _30715 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30715 + 260 len (32 * mem[_30715]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30715]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24758 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24758] = 26
                                            mem[_24758 + 32] = 'SafeMath: division by zero'
                                            _26255 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26255] = 26
                                            mem[_26255 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26255 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31121 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31121]
                                            mem[_31121 + 32] = stor8
                                            require 1 < mem[_31121]
                                            mem[_31121 + 64] = stor7
                                            mem[_31121 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31121 + 100] = ext_call.return_data[0]
                                            mem[_31121 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31121 + 196] = this.address
                                            mem[_31121 + 228] = block.timestamp + 120
                                            mem[_31121 + 164] = 160
                                            mem[_31121 + 260] = mem[_31121]
                                            s = 0
                                            while s < 32 * mem[_31121]:
                                                mem[s + _31121 + 292] = mem[s + _31121 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31121 + 260 len (32 * mem[_31121]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17794 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17794] = 30
                                    mem[_17794 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18068 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18068 + 68] = mem[idx + _17794 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18068 + 68] = mem[_18068 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18068 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18805 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18805] = 26
                                        mem[_18805 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19759 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19759] = 26
                                        mem[_19759 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19759 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24175 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24175] = 26
                                            mem[_24175 + 32] = 'SafeMath: division by zero'
                                            _24805 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24805] = 26
                                            mem[_24805 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24805 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27868 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27868]
                                            mem[_27868 + 32] = stor8
                                            require 1 < mem[_27868]
                                            mem[_27868 + 64] = stor7
                                            mem[_27868 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27868 + 100] = ext_call.return_data[0]
                                            mem[_27868 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27868 + 196] = this.address
                                            mem[_27868 + 228] = block.timestamp + 120
                                            mem[_27868 + 164] = 160
                                            mem[_27868 + 260] = mem[_27868]
                                            s = 0
                                            while s < 32 * mem[_27868]:
                                                mem[s + _27868 + 292] = mem[s + _27868 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27868 + 260 len (32 * mem[_27868]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24364 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24364] = 26
                                                mem[_24364 + 32] = 'SafeMath: division by zero'
                                                _24898 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24898] = 26
                                                mem[_24898 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24898 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28868 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28868]
                                                mem[_28868 + 32] = stor8
                                                require 1 < mem[_28868]
                                                mem[_28868 + 64] = stor7
                                                mem[_28868 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28868 + 100] = ext_call.return_data[0]
                                                mem[_28868 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28868 + 196] = this.address
                                                mem[_28868 + 228] = block.timestamp + 120
                                                mem[_28868 + 164] = 160
                                                mem[_28868 + 260] = mem[_28868]
                                                s = 0
                                                while s < 32 * mem[_28868]:
                                                    mem[s + _28868 + 292] = mem[s + _28868 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28868 + 260 len (32 * mem[_28868]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24601 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24601] = 26
                                                mem[_24601 + 32] = 'SafeMath: division by zero'
                                                _25171 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25171] = 26
                                                mem[_25171 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25171 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29921 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29921]
                                                mem[_29921 + 32] = stor8
                                                require 1 < mem[_29921]
                                                mem[_29921 + 64] = stor7
                                                mem[_29921 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29921 + 100] = ext_call.return_data[0]
                                                mem[_29921 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29921 + 196] = this.address
                                                mem[_29921 + 228] = block.timestamp + 120
                                                mem[_29921 + 164] = 160
                                                mem[_29921 + 260] = mem[_29921]
                                                s = 0
                                                while s < 32 * mem[_29921]:
                                                    mem[s + _29921 + 292] = mem[s + _29921 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29921 + 260 len (32 * mem[_29921]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18853 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18853] = 26
                                        mem[_18853 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19813 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19813] = 26
                                            mem[_19813 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19813 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24363 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24363] = 26
                                                mem[_24363 + 32] = 'SafeMath: division by zero'
                                                _24897 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24897] = 26
                                                mem[_24897 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24897 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28862 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28862]
                                                mem[_28862 + 32] = stor8
                                                require 1 < mem[_28862]
                                                mem[_28862 + 64] = stor7
                                                mem[_28862 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28862 + 100] = ext_call.return_data[0]
                                                mem[_28862 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28862 + 196] = this.address
                                                mem[_28862 + 228] = block.timestamp + 120
                                                mem[_28862 + 164] = 160
                                                mem[_28862 + 260] = mem[_28862]
                                                s = 0
                                                while s < 32 * mem[_28862]:
                                                    mem[s + _28862 + 292] = mem[s + _28862 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28862 + 260 len (32 * mem[_28862]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24600 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24600] = 26
                                                mem[_24600 + 32] = 'SafeMath: division by zero'
                                                _25170 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25170] = 26
                                                mem[_25170 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25170 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29915 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29915]
                                                mem[_29915 + 32] = stor8
                                                require 1 < mem[_29915]
                                                mem[_29915 + 64] = stor7
                                                mem[_29915 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29915 + 100] = ext_call.return_data[0]
                                                mem[_29915 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29915 + 196] = this.address
                                                mem[_29915 + 228] = block.timestamp + 120
                                                mem[_29915 + 164] = 160
                                                mem[_29915 + 260] = mem[_29915]
                                                s = 0
                                                while s < 32 * mem[_29915]:
                                                    mem[s + _29915 + 292] = mem[s + _29915 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29915 + 260 len (32 * mem[_29915]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24706 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24706] = 26
                                            mem[_24706 + 32] = 'SafeMath: division by zero'
                                            _25590 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25590] = 26
                                            mem[_25590 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25590 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30705 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30705]
                                            mem[_30705 + 32] = stor8
                                            require 1 < mem[_30705]
                                            mem[_30705 + 64] = stor7
                                            mem[_30705 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30705 + 100] = ext_call.return_data[0]
                                            mem[_30705 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30705 + 196] = this.address
                                            mem[_30705 + 228] = block.timestamp + 120
                                            mem[_30705 + 164] = 160
                                            mem[_30705 + 260] = mem[_30705]
                                            s = 0
                                            while s < 32 * mem[_30705]:
                                                mem[s + _30705 + 292] = mem[s + _30705 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30705 + 260 len (32 * mem[_30705]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30705]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19993 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19993] = 26
                                        mem[_19993 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19993 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24599 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24599] = 26
                                            mem[_24599 + 32] = 'SafeMath: division by zero'
                                            _25169 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25169] = 26
                                            mem[_25169 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25169 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29909 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29909]
                                            mem[_29909 + 32] = stor8
                                            require 1 < mem[_29909]
                                            mem[_29909 + 64] = stor7
                                            mem[_29909 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29909 + 100] = ext_call.return_data[0]
                                            mem[_29909 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29909 + 196] = this.address
                                            mem[_29909 + 228] = block.timestamp + 120
                                            mem[_29909 + 164] = 160
                                            mem[_29909 + 260] = mem[_29909]
                                            s = 0
                                            while s < 32 * mem[_29909]:
                                                mem[s + _29909 + 292] = mem[s + _29909 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29909 + 260 len (32 * mem[_29909]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24705 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24705] = 26
                                                mem[_24705 + 32] = 'SafeMath: division by zero'
                                                _25589 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25589] = 26
                                                mem[_25589 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25589 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30699 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30699]
                                                mem[_30699 + 32] = stor8
                                                require 1 < mem[_30699]
                                                mem[_30699 + 64] = stor7
                                                mem[_30699 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30699 + 100] = ext_call.return_data[0]
                                                mem[_30699 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30699 + 196] = this.address
                                                mem[_30699 + 228] = block.timestamp + 120
                                                mem[_30699 + 164] = 160
                                                mem[_30699 + 260] = mem[_30699]
                                                s = 0
                                                while s < 32 * mem[_30699]:
                                                    mem[s + _30699 + 292] = mem[s + _30699 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30699 + 260 len (32 * mem[_30699]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30699]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24757 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24757] = 26
                                            mem[_24757 + 32] = 'SafeMath: division by zero'
                                            _26241 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26241] = 26
                                            mem[_26241 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26241 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31113 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31113]
                                            mem[_31113 + 32] = stor8
                                            require 1 < mem[_31113]
                                            mem[_31113 + 64] = stor7
                                            mem[_31113 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31113 + 100] = ext_call.return_data[0]
                                            mem[_31113 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31113 + 196] = this.address
                                            mem[_31113 + 228] = block.timestamp + 120
                                            mem[_31113 + 164] = 160
                                            mem[_31113 + 260] = mem[_31113]
                                            s = 0
                                            while s < 32 * mem[_31113]:
                                                mem[s + _31113 + 292] = mem[s + _31113 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31113 + 260 len (32 * mem[_31113]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17792 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17792] = 30
                                    mem[_17792 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18062 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18062 + 68] = mem[idx + _17792 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18062 + 68] = mem[_18062 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18062 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18804 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18804] = 26
                                        mem[_18804 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19756 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19756] = 26
                                        mem[_19756 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19756 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24172 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24172] = 26
                                            mem[_24172 + 32] = 'SafeMath: division by zero'
                                            _24804 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24804] = 26
                                            mem[_24804 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24804 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27849 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27849]
                                            mem[_27849 + 32] = stor8
                                            require 1 < mem[_27849]
                                            mem[_27849 + 64] = stor7
                                            mem[_27849 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27849 + 100] = ext_call.return_data[0]
                                            mem[_27849 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27849 + 196] = this.address
                                            mem[_27849 + 228] = block.timestamp + 120
                                            mem[_27849 + 164] = 160
                                            mem[_27849 + 260] = mem[_27849]
                                            s = 0
                                            while s < 32 * mem[_27849]:
                                                mem[s + _27849 + 292] = mem[s + _27849 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27849 + 260 len (32 * mem[_27849]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24360 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24360] = 26
                                                mem[_24360 + 32] = 'SafeMath: division by zero'
                                                _24896 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24896] = 26
                                                mem[_24896 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24896 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28847 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28847]
                                                mem[_28847 + 32] = stor8
                                                require 1 < mem[_28847]
                                                mem[_28847 + 64] = stor7
                                                mem[_28847 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28847 + 100] = ext_call.return_data[0]
                                                mem[_28847 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28847 + 196] = this.address
                                                mem[_28847 + 228] = block.timestamp + 120
                                                mem[_28847 + 164] = 160
                                                mem[_28847 + 260] = mem[_28847]
                                                s = 0
                                                while s < 32 * mem[_28847]:
                                                    mem[s + _28847 + 292] = mem[s + _28847 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28847 + 260 len (32 * mem[_28847]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24596 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24596] = 26
                                                mem[_24596 + 32] = 'SafeMath: division by zero'
                                                _25165 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25165] = 26
                                                mem[_25165 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25165 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29899 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29899]
                                                mem[_29899 + 32] = stor8
                                                require 1 < mem[_29899]
                                                mem[_29899 + 64] = stor7
                                                mem[_29899 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29899 + 100] = ext_call.return_data[0]
                                                mem[_29899 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29899 + 196] = this.address
                                                mem[_29899 + 228] = block.timestamp + 120
                                                mem[_29899 + 164] = 160
                                                mem[_29899 + 260] = mem[_29899]
                                                s = 0
                                                while s < 32 * mem[_29899]:
                                                    mem[s + _29899 + 292] = mem[s + _29899 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29899 + 260 len (32 * mem[_29899]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18852 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18852] = 26
                                        mem[_18852 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19812 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19812] = 26
                                            mem[_19812 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19812 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24359 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24359] = 26
                                                mem[_24359 + 32] = 'SafeMath: division by zero'
                                                _24895 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24895] = 26
                                                mem[_24895 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24895 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28841 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28841]
                                                mem[_28841 + 32] = stor8
                                                require 1 < mem[_28841]
                                                mem[_28841 + 64] = stor7
                                                mem[_28841 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28841 + 100] = ext_call.return_data[0]
                                                mem[_28841 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28841 + 196] = this.address
                                                mem[_28841 + 228] = block.timestamp + 120
                                                mem[_28841 + 164] = 160
                                                mem[_28841 + 260] = mem[_28841]
                                                s = 0
                                                while s < 32 * mem[_28841]:
                                                    mem[s + _28841 + 292] = mem[s + _28841 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28841 + 260 len (32 * mem[_28841]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24595 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24595] = 26
                                                mem[_24595 + 32] = 'SafeMath: division by zero'
                                                _25164 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25164] = 26
                                                mem[_25164 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25164 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29893 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29893]
                                                mem[_29893 + 32] = stor8
                                                require 1 < mem[_29893]
                                                mem[_29893 + 64] = stor7
                                                mem[_29893 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29893 + 100] = ext_call.return_data[0]
                                                mem[_29893 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29893 + 196] = this.address
                                                mem[_29893 + 228] = block.timestamp + 120
                                                mem[_29893 + 164] = 160
                                                mem[_29893 + 260] = mem[_29893]
                                                s = 0
                                                while s < 32 * mem[_29893]:
                                                    mem[s + _29893 + 292] = mem[s + _29893 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29893 + 260 len (32 * mem[_29893]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24704 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24704] = 26
                                            mem[_24704 + 32] = 'SafeMath: division by zero'
                                            _25581 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25581] = 26
                                            mem[_25581 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25581 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30689 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30689]
                                            mem[_30689 + 32] = stor8
                                            require 1 < mem[_30689]
                                            mem[_30689 + 64] = stor7
                                            mem[_30689 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30689 + 100] = ext_call.return_data[0]
                                            mem[_30689 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30689 + 196] = this.address
                                            mem[_30689 + 228] = block.timestamp + 120
                                            mem[_30689 + 164] = 160
                                            mem[_30689 + 260] = mem[_30689]
                                            s = 0
                                            while s < 32 * mem[_30689]:
                                                mem[s + _30689 + 292] = mem[s + _30689 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30689 + 260 len (32 * mem[_30689]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30689]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19989 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19989] = 26
                                        mem[_19989 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19989 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24594 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24594] = 26
                                            mem[_24594 + 32] = 'SafeMath: division by zero'
                                            _25163 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25163] = 26
                                            mem[_25163 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25163 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29887 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29887]
                                            mem[_29887 + 32] = stor8
                                            require 1 < mem[_29887]
                                            mem[_29887 + 64] = stor7
                                            mem[_29887 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29887 + 100] = ext_call.return_data[0]
                                            mem[_29887 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29887 + 196] = this.address
                                            mem[_29887 + 228] = block.timestamp + 120
                                            mem[_29887 + 164] = 160
                                            mem[_29887 + 260] = mem[_29887]
                                            s = 0
                                            while s < 32 * mem[_29887]:
                                                mem[s + _29887 + 292] = mem[s + _29887 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29887 + 260 len (32 * mem[_29887]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24703 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24703] = 26
                                                mem[_24703 + 32] = 'SafeMath: division by zero'
                                                _25580 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25580] = 26
                                                mem[_25580 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25580 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30683 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30683]
                                                mem[_30683 + 32] = stor8
                                                require 1 < mem[_30683]
                                                mem[_30683 + 64] = stor7
                                                mem[_30683 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30683 + 100] = ext_call.return_data[0]
                                                mem[_30683 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30683 + 196] = this.address
                                                mem[_30683 + 228] = block.timestamp + 120
                                                mem[_30683 + 164] = 160
                                                mem[_30683 + 260] = mem[_30683]
                                                s = 0
                                                while s < 32 * mem[_30683]:
                                                    mem[s + _30683 + 292] = mem[s + _30683 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30683 + 260 len (32 * mem[_30683]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30683]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24756 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24756] = 26
                                            mem[_24756 + 32] = 'SafeMath: division by zero'
                                            _26227 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26227] = 26
                                            mem[_26227 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26227 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31105 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31105]
                                            mem[_31105 + 32] = stor8
                                            require 1 < mem[_31105]
                                            mem[_31105 + 64] = stor7
                                            mem[_31105 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31105 + 100] = ext_call.return_data[0]
                                            mem[_31105 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31105 + 196] = this.address
                                            mem[_31105 + 228] = block.timestamp + 120
                                            mem[_31105 + 164] = 160
                                            mem[_31105 + 260] = mem[_31105]
                                            s = 0
                                            while s < 32 * mem[_31105]:
                                                mem[s + _31105 + 292] = mem[s + _31105 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31105 + 260 len (32 * mem[_31105]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17790 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17790] = 30
                                    mem[_17790 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18056 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18056 + 68] = mem[idx + _17790 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18056 + 68] = mem[_18056 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18056 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18803 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18803] = 26
                                        mem[_18803 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19753 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19753] = 26
                                        mem[_19753 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19753 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24169 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24169] = 26
                                            mem[_24169 + 32] = 'SafeMath: division by zero'
                                            _24803 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24803] = 26
                                            mem[_24803 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24803 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27830 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27830]
                                            mem[_27830 + 32] = stor8
                                            require 1 < mem[_27830]
                                            mem[_27830 + 64] = stor7
                                            mem[_27830 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27830 + 100] = ext_call.return_data[0]
                                            mem[_27830 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27830 + 196] = this.address
                                            mem[_27830 + 228] = block.timestamp + 120
                                            mem[_27830 + 164] = 160
                                            mem[_27830 + 260] = mem[_27830]
                                            s = 0
                                            while s < 32 * mem[_27830]:
                                                mem[s + _27830 + 292] = mem[s + _27830 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27830 + 260 len (32 * mem[_27830]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24356 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24356] = 26
                                                mem[_24356 + 32] = 'SafeMath: division by zero'
                                                _24894 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24894] = 26
                                                mem[_24894 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24894 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28826 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28826]
                                                mem[_28826 + 32] = stor8
                                                require 1 < mem[_28826]
                                                mem[_28826 + 64] = stor7
                                                mem[_28826 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28826 + 100] = ext_call.return_data[0]
                                                mem[_28826 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28826 + 196] = this.address
                                                mem[_28826 + 228] = block.timestamp + 120
                                                mem[_28826 + 164] = 160
                                                mem[_28826 + 260] = mem[_28826]
                                                s = 0
                                                while s < 32 * mem[_28826]:
                                                    mem[s + _28826 + 292] = mem[s + _28826 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28826 + 260 len (32 * mem[_28826]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24591 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24591] = 26
                                                mem[_24591 + 32] = 'SafeMath: division by zero'
                                                _25159 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25159] = 26
                                                mem[_25159 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25159 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29877 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29877]
                                                mem[_29877 + 32] = stor8
                                                require 1 < mem[_29877]
                                                mem[_29877 + 64] = stor7
                                                mem[_29877 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29877 + 100] = ext_call.return_data[0]
                                                mem[_29877 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29877 + 196] = this.address
                                                mem[_29877 + 228] = block.timestamp + 120
                                                mem[_29877 + 164] = 160
                                                mem[_29877 + 260] = mem[_29877]
                                                s = 0
                                                while s < 32 * mem[_29877]:
                                                    mem[s + _29877 + 292] = mem[s + _29877 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29877 + 260 len (32 * mem[_29877]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18851 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18851] = 26
                                        mem[_18851 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19811 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19811] = 26
                                            mem[_19811 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19811 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24355 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24355] = 26
                                                mem[_24355 + 32] = 'SafeMath: division by zero'
                                                _24893 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24893] = 26
                                                mem[_24893 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24893 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28820 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28820]
                                                mem[_28820 + 32] = stor8
                                                require 1 < mem[_28820]
                                                mem[_28820 + 64] = stor7
                                                mem[_28820 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28820 + 100] = ext_call.return_data[0]
                                                mem[_28820 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28820 + 196] = this.address
                                                mem[_28820 + 228] = block.timestamp + 120
                                                mem[_28820 + 164] = 160
                                                mem[_28820 + 260] = mem[_28820]
                                                s = 0
                                                while s < 32 * mem[_28820]:
                                                    mem[s + _28820 + 292] = mem[s + _28820 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28820 + 260 len (32 * mem[_28820]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24590 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24590] = 26
                                                mem[_24590 + 32] = 'SafeMath: division by zero'
                                                _25158 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25158] = 26
                                                mem[_25158 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25158 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29871 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29871]
                                                mem[_29871 + 32] = stor8
                                                require 1 < mem[_29871]
                                                mem[_29871 + 64] = stor7
                                                mem[_29871 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29871 + 100] = ext_call.return_data[0]
                                                mem[_29871 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29871 + 196] = this.address
                                                mem[_29871 + 228] = block.timestamp + 120
                                                mem[_29871 + 164] = 160
                                                mem[_29871 + 260] = mem[_29871]
                                                s = 0
                                                while s < 32 * mem[_29871]:
                                                    mem[s + _29871 + 292] = mem[s + _29871 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29871 + 260 len (32 * mem[_29871]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24702 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24702] = 26
                                            mem[_24702 + 32] = 'SafeMath: division by zero'
                                            _25572 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25572] = 26
                                            mem[_25572 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25572 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30673 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30673]
                                            mem[_30673 + 32] = stor8
                                            require 1 < mem[_30673]
                                            mem[_30673 + 64] = stor7
                                            mem[_30673 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30673 + 100] = ext_call.return_data[0]
                                            mem[_30673 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30673 + 196] = this.address
                                            mem[_30673 + 228] = block.timestamp + 120
                                            mem[_30673 + 164] = 160
                                            mem[_30673 + 260] = mem[_30673]
                                            s = 0
                                            while s < 32 * mem[_30673]:
                                                mem[s + _30673 + 292] = mem[s + _30673 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30673 + 260 len (32 * mem[_30673]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30673]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19985 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19985] = 26
                                        mem[_19985 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19985 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24589 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24589] = 26
                                            mem[_24589 + 32] = 'SafeMath: division by zero'
                                            _25157 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25157] = 26
                                            mem[_25157 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25157 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29865 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29865]
                                            mem[_29865 + 32] = stor8
                                            require 1 < mem[_29865]
                                            mem[_29865 + 64] = stor7
                                            mem[_29865 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29865 + 100] = ext_call.return_data[0]
                                            mem[_29865 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29865 + 196] = this.address
                                            mem[_29865 + 228] = block.timestamp + 120
                                            mem[_29865 + 164] = 160
                                            mem[_29865 + 260] = mem[_29865]
                                            s = 0
                                            while s < 32 * mem[_29865]:
                                                mem[s + _29865 + 292] = mem[s + _29865 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29865 + 260 len (32 * mem[_29865]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24701 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24701] = 26
                                                mem[_24701 + 32] = 'SafeMath: division by zero'
                                                _25571 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25571] = 26
                                                mem[_25571 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25571 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30667 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30667]
                                                mem[_30667 + 32] = stor8
                                                require 1 < mem[_30667]
                                                mem[_30667 + 64] = stor7
                                                mem[_30667 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30667 + 100] = ext_call.return_data[0]
                                                mem[_30667 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30667 + 196] = this.address
                                                mem[_30667 + 228] = block.timestamp + 120
                                                mem[_30667 + 164] = 160
                                                mem[_30667 + 260] = mem[_30667]
                                                s = 0
                                                while s < 32 * mem[_30667]:
                                                    mem[s + _30667 + 292] = mem[s + _30667 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30667 + 260 len (32 * mem[_30667]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30667]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24755 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24755] = 26
                                            mem[_24755 + 32] = 'SafeMath: division by zero'
                                            _26213 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26213] = 26
                                            mem[_26213 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26213 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31097 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31097]
                                            mem[_31097 + 32] = stor8
                                            require 1 < mem[_31097]
                                            mem[_31097 + 64] = stor7
                                            mem[_31097 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31097 + 100] = ext_call.return_data[0]
                                            mem[_31097 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31097 + 196] = this.address
                                            mem[_31097 + 228] = block.timestamp + 120
                                            mem[_31097 + 164] = 160
                                            mem[_31097 + 260] = mem[_31097]
                                            s = 0
                                            while s < 32 * mem[_31097]:
                                                mem[s + _31097 + 292] = mem[s + _31097 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31097 + 260 len (32 * mem[_31097]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17788 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17788] = 30
                                    mem[_17788 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18050 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18050 + 68] = mem[idx + _17788 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18050 + 68] = mem[_18050 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18050 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18802 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18802] = 26
                                        mem[_18802 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19750 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19750] = 26
                                        mem[_19750 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19750 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24166 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24166] = 26
                                            mem[_24166 + 32] = 'SafeMath: division by zero'
                                            _24802 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24802] = 26
                                            mem[_24802 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24802 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27811 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27811]
                                            mem[_27811 + 32] = stor8
                                            require 1 < mem[_27811]
                                            mem[_27811 + 64] = stor7
                                            mem[_27811 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27811 + 100] = ext_call.return_data[0]
                                            mem[_27811 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27811 + 196] = this.address
                                            mem[_27811 + 228] = block.timestamp + 120
                                            mem[_27811 + 164] = 160
                                            mem[_27811 + 260] = mem[_27811]
                                            s = 0
                                            while s < 32 * mem[_27811]:
                                                mem[s + _27811 + 292] = mem[s + _27811 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27811 + 260 len (32 * mem[_27811]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24352 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24352] = 26
                                                mem[_24352 + 32] = 'SafeMath: division by zero'
                                                _24892 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24892] = 26
                                                mem[_24892 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24892 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28805 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28805]
                                                mem[_28805 + 32] = stor8
                                                require 1 < mem[_28805]
                                                mem[_28805 + 64] = stor7
                                                mem[_28805 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28805 + 100] = ext_call.return_data[0]
                                                mem[_28805 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28805 + 196] = this.address
                                                mem[_28805 + 228] = block.timestamp + 120
                                                mem[_28805 + 164] = 160
                                                mem[_28805 + 260] = mem[_28805]
                                                s = 0
                                                while s < 32 * mem[_28805]:
                                                    mem[s + _28805 + 292] = mem[s + _28805 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28805 + 260 len (32 * mem[_28805]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24586 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24586] = 26
                                                mem[_24586 + 32] = 'SafeMath: division by zero'
                                                _25153 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25153] = 26
                                                mem[_25153 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25153 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29855 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29855]
                                                mem[_29855 + 32] = stor8
                                                require 1 < mem[_29855]
                                                mem[_29855 + 64] = stor7
                                                mem[_29855 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29855 + 100] = ext_call.return_data[0]
                                                mem[_29855 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29855 + 196] = this.address
                                                mem[_29855 + 228] = block.timestamp + 120
                                                mem[_29855 + 164] = 160
                                                mem[_29855 + 260] = mem[_29855]
                                                s = 0
                                                while s < 32 * mem[_29855]:
                                                    mem[s + _29855 + 292] = mem[s + _29855 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29855 + 260 len (32 * mem[_29855]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18850 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18850] = 26
                                        mem[_18850 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19810 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19810] = 26
                                            mem[_19810 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19810 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24351 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24351] = 26
                                                mem[_24351 + 32] = 'SafeMath: division by zero'
                                                _24891 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24891] = 26
                                                mem[_24891 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24891 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28799 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28799]
                                                mem[_28799 + 32] = stor8
                                                require 1 < mem[_28799]
                                                mem[_28799 + 64] = stor7
                                                mem[_28799 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28799 + 100] = ext_call.return_data[0]
                                                mem[_28799 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28799 + 196] = this.address
                                                mem[_28799 + 228] = block.timestamp + 120
                                                mem[_28799 + 164] = 160
                                                mem[_28799 + 260] = mem[_28799]
                                                s = 0
                                                while s < 32 * mem[_28799]:
                                                    mem[s + _28799 + 292] = mem[s + _28799 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28799 + 260 len (32 * mem[_28799]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24585 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24585] = 26
                                                mem[_24585 + 32] = 'SafeMath: division by zero'
                                                _25152 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25152] = 26
                                                mem[_25152 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25152 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29849 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29849]
                                                mem[_29849 + 32] = stor8
                                                require 1 < mem[_29849]
                                                mem[_29849 + 64] = stor7
                                                mem[_29849 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29849 + 100] = ext_call.return_data[0]
                                                mem[_29849 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29849 + 196] = this.address
                                                mem[_29849 + 228] = block.timestamp + 120
                                                mem[_29849 + 164] = 160
                                                mem[_29849 + 260] = mem[_29849]
                                                s = 0
                                                while s < 32 * mem[_29849]:
                                                    mem[s + _29849 + 292] = mem[s + _29849 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29849 + 260 len (32 * mem[_29849]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24700 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24700] = 26
                                            mem[_24700 + 32] = 'SafeMath: division by zero'
                                            _25563 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25563] = 26
                                            mem[_25563 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25563 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30657 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30657]
                                            mem[_30657 + 32] = stor8
                                            require 1 < mem[_30657]
                                            mem[_30657 + 64] = stor7
                                            mem[_30657 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30657 + 100] = ext_call.return_data[0]
                                            mem[_30657 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30657 + 196] = this.address
                                            mem[_30657 + 228] = block.timestamp + 120
                                            mem[_30657 + 164] = 160
                                            mem[_30657 + 260] = mem[_30657]
                                            s = 0
                                            while s < 32 * mem[_30657]:
                                                mem[s + _30657 + 292] = mem[s + _30657 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30657 + 260 len (32 * mem[_30657]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30657]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19981 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19981] = 26
                                        mem[_19981 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19981 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24584 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24584] = 26
                                            mem[_24584 + 32] = 'SafeMath: division by zero'
                                            _25151 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25151] = 26
                                            mem[_25151 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25151 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29843 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29843]
                                            mem[_29843 + 32] = stor8
                                            require 1 < mem[_29843]
                                            mem[_29843 + 64] = stor7
                                            mem[_29843 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29843 + 100] = ext_call.return_data[0]
                                            mem[_29843 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29843 + 196] = this.address
                                            mem[_29843 + 228] = block.timestamp + 120
                                            mem[_29843 + 164] = 160
                                            mem[_29843 + 260] = mem[_29843]
                                            s = 0
                                            while s < 32 * mem[_29843]:
                                                mem[s + _29843 + 292] = mem[s + _29843 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29843 + 260 len (32 * mem[_29843]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24699 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24699] = 26
                                                mem[_24699 + 32] = 'SafeMath: division by zero'
                                                _25562 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25562] = 26
                                                mem[_25562 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25562 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30651 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30651]
                                                mem[_30651 + 32] = stor8
                                                require 1 < mem[_30651]
                                                mem[_30651 + 64] = stor7
                                                mem[_30651 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30651 + 100] = ext_call.return_data[0]
                                                mem[_30651 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30651 + 196] = this.address
                                                mem[_30651 + 228] = block.timestamp + 120
                                                mem[_30651 + 164] = 160
                                                mem[_30651 + 260] = mem[_30651]
                                                s = 0
                                                while s < 32 * mem[_30651]:
                                                    mem[s + _30651 + 292] = mem[s + _30651 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30651 + 260 len (32 * mem[_30651]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30651]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24754 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24754] = 26
                                            mem[_24754 + 32] = 'SafeMath: division by zero'
                                            _26199 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26199] = 26
                                            mem[_26199 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26199 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31089 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31089]
                                            mem[_31089 + 32] = stor8
                                            require 1 < mem[_31089]
                                            mem[_31089 + 64] = stor7
                                            mem[_31089 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31089 + 100] = ext_call.return_data[0]
                                            mem[_31089 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31089 + 196] = this.address
                                            mem[_31089 + 228] = block.timestamp + 120
                                            mem[_31089 + 164] = 160
                                            mem[_31089 + 260] = mem[_31089]
                                            s = 0
                                            while s < 32 * mem[_31089]:
                                                mem[s + _31089 + 292] = mem[s + _31089 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31089 + 260 len (32 * mem[_31089]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17786 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17786] = 30
                                    mem[_17786 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18044 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18044 + 68] = mem[idx + _17786 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18044 + 68] = mem[_18044 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18044 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18801 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18801] = 26
                                        mem[_18801 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19747 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19747] = 26
                                        mem[_19747 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19747 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24163 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24163] = 26
                                            mem[_24163 + 32] = 'SafeMath: division by zero'
                                            _24801 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24801] = 26
                                            mem[_24801 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24801 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27792 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27792]
                                            mem[_27792 + 32] = stor8
                                            require 1 < mem[_27792]
                                            mem[_27792 + 64] = stor7
                                            mem[_27792 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27792 + 100] = ext_call.return_data[0]
                                            mem[_27792 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27792 + 196] = this.address
                                            mem[_27792 + 228] = block.timestamp + 120
                                            mem[_27792 + 164] = 160
                                            mem[_27792 + 260] = mem[_27792]
                                            s = 0
                                            while s < 32 * mem[_27792]:
                                                mem[s + _27792 + 292] = mem[s + _27792 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27792 + 260 len (32 * mem[_27792]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24348 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24348] = 26
                                                mem[_24348 + 32] = 'SafeMath: division by zero'
                                                _24890 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24890] = 26
                                                mem[_24890 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24890 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28784 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28784]
                                                mem[_28784 + 32] = stor8
                                                require 1 < mem[_28784]
                                                mem[_28784 + 64] = stor7
                                                mem[_28784 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28784 + 100] = ext_call.return_data[0]
                                                mem[_28784 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28784 + 196] = this.address
                                                mem[_28784 + 228] = block.timestamp + 120
                                                mem[_28784 + 164] = 160
                                                mem[_28784 + 260] = mem[_28784]
                                                s = 0
                                                while s < 32 * mem[_28784]:
                                                    mem[s + _28784 + 292] = mem[s + _28784 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28784 + 260 len (32 * mem[_28784]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24581 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24581] = 26
                                                mem[_24581 + 32] = 'SafeMath: division by zero'
                                                _25147 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25147] = 26
                                                mem[_25147 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25147 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29833 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29833]
                                                mem[_29833 + 32] = stor8
                                                require 1 < mem[_29833]
                                                mem[_29833 + 64] = stor7
                                                mem[_29833 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29833 + 100] = ext_call.return_data[0]
                                                mem[_29833 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29833 + 196] = this.address
                                                mem[_29833 + 228] = block.timestamp + 120
                                                mem[_29833 + 164] = 160
                                                mem[_29833 + 260] = mem[_29833]
                                                s = 0
                                                while s < 32 * mem[_29833]:
                                                    mem[s + _29833 + 292] = mem[s + _29833 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29833 + 260 len (32 * mem[_29833]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18849 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18849] = 26
                                        mem[_18849 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19809 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19809] = 26
                                            mem[_19809 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19809 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24347 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24347] = 26
                                                mem[_24347 + 32] = 'SafeMath: division by zero'
                                                _24889 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24889] = 26
                                                mem[_24889 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24889 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28778 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28778]
                                                mem[_28778 + 32] = stor8
                                                require 1 < mem[_28778]
                                                mem[_28778 + 64] = stor7
                                                mem[_28778 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28778 + 100] = ext_call.return_data[0]
                                                mem[_28778 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28778 + 196] = this.address
                                                mem[_28778 + 228] = block.timestamp + 120
                                                mem[_28778 + 164] = 160
                                                mem[_28778 + 260] = mem[_28778]
                                                s = 0
                                                while s < 32 * mem[_28778]:
                                                    mem[s + _28778 + 292] = mem[s + _28778 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28778 + 260 len (32 * mem[_28778]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24580 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24580] = 26
                                                mem[_24580 + 32] = 'SafeMath: division by zero'
                                                _25146 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25146] = 26
                                                mem[_25146 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25146 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29827 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29827]
                                                mem[_29827 + 32] = stor8
                                                require 1 < mem[_29827]
                                                mem[_29827 + 64] = stor7
                                                mem[_29827 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29827 + 100] = ext_call.return_data[0]
                                                mem[_29827 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29827 + 196] = this.address
                                                mem[_29827 + 228] = block.timestamp + 120
                                                mem[_29827 + 164] = 160
                                                mem[_29827 + 260] = mem[_29827]
                                                s = 0
                                                while s < 32 * mem[_29827]:
                                                    mem[s + _29827 + 292] = mem[s + _29827 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29827 + 260 len (32 * mem[_29827]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24698 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24698] = 26
                                            mem[_24698 + 32] = 'SafeMath: division by zero'
                                            _25554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25554] = 26
                                            mem[_25554 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25554 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30641 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30641]
                                            mem[_30641 + 32] = stor8
                                            require 1 < mem[_30641]
                                            mem[_30641 + 64] = stor7
                                            mem[_30641 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30641 + 100] = ext_call.return_data[0]
                                            mem[_30641 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30641 + 196] = this.address
                                            mem[_30641 + 228] = block.timestamp + 120
                                            mem[_30641 + 164] = 160
                                            mem[_30641 + 260] = mem[_30641]
                                            s = 0
                                            while s < 32 * mem[_30641]:
                                                mem[s + _30641 + 292] = mem[s + _30641 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30641 + 260 len (32 * mem[_30641]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30641]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19977 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19977] = 26
                                        mem[_19977 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19977 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24579 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24579] = 26
                                            mem[_24579 + 32] = 'SafeMath: division by zero'
                                            _25145 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25145] = 26
                                            mem[_25145 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25145 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29821 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29821]
                                            mem[_29821 + 32] = stor8
                                            require 1 < mem[_29821]
                                            mem[_29821 + 64] = stor7
                                            mem[_29821 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29821 + 100] = ext_call.return_data[0]
                                            mem[_29821 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29821 + 196] = this.address
                                            mem[_29821 + 228] = block.timestamp + 120
                                            mem[_29821 + 164] = 160
                                            mem[_29821 + 260] = mem[_29821]
                                            s = 0
                                            while s < 32 * mem[_29821]:
                                                mem[s + _29821 + 292] = mem[s + _29821 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29821 + 260 len (32 * mem[_29821]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24697 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24697] = 26
                                                mem[_24697 + 32] = 'SafeMath: division by zero'
                                                _25553 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25553] = 26
                                                mem[_25553 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25553 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30635 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30635]
                                                mem[_30635 + 32] = stor8
                                                require 1 < mem[_30635]
                                                mem[_30635 + 64] = stor7
                                                mem[_30635 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30635 + 100] = ext_call.return_data[0]
                                                mem[_30635 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30635 + 196] = this.address
                                                mem[_30635 + 228] = block.timestamp + 120
                                                mem[_30635 + 164] = 160
                                                mem[_30635 + 260] = mem[_30635]
                                                s = 0
                                                while s < 32 * mem[_30635]:
                                                    mem[s + _30635 + 292] = mem[s + _30635 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30635 + 260 len (32 * mem[_30635]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30635]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24753 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24753] = 26
                                            mem[_24753 + 32] = 'SafeMath: division by zero'
                                            _26185 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26185] = 26
                                            mem[_26185 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26185 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31081 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31081]
                                            mem[_31081 + 32] = stor8
                                            require 1 < mem[_31081]
                                            mem[_31081 + 64] = stor7
                                            mem[_31081 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31081 + 100] = ext_call.return_data[0]
                                            mem[_31081 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31081 + 196] = this.address
                                            mem[_31081 + 228] = block.timestamp + 120
                                            mem[_31081 + 164] = 160
                                            mem[_31081 + 260] = mem[_31081]
                                            s = 0
                                            while s < 32 * mem[_31081]:
                                                mem[s + _31081 + 292] = mem[s + _31081 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31081 + 260 len (32 * mem[_31081]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17784 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17784] = 30
                                    mem[_17784 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18038 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18038 + 68] = mem[idx + _17784 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18038 + 68] = mem[_18038 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18038 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18800 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18800] = 26
                                        mem[_18800 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19744 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19744] = 26
                                        mem[_19744 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19744 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24160 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24160] = 26
                                            mem[_24160 + 32] = 'SafeMath: division by zero'
                                            _24800 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24800] = 26
                                            mem[_24800 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24800 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27773 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27773]
                                            mem[_27773 + 32] = stor8
                                            require 1 < mem[_27773]
                                            mem[_27773 + 64] = stor7
                                            mem[_27773 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27773 + 100] = ext_call.return_data[0]
                                            mem[_27773 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27773 + 196] = this.address
                                            mem[_27773 + 228] = block.timestamp + 120
                                            mem[_27773 + 164] = 160
                                            mem[_27773 + 260] = mem[_27773]
                                            s = 0
                                            while s < 32 * mem[_27773]:
                                                mem[s + _27773 + 292] = mem[s + _27773 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27773 + 260 len (32 * mem[_27773]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24344 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24344] = 26
                                                mem[_24344 + 32] = 'SafeMath: division by zero'
                                                _24888 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24888] = 26
                                                mem[_24888 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24888 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28763 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28763]
                                                mem[_28763 + 32] = stor8
                                                require 1 < mem[_28763]
                                                mem[_28763 + 64] = stor7
                                                mem[_28763 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28763 + 100] = ext_call.return_data[0]
                                                mem[_28763 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28763 + 196] = this.address
                                                mem[_28763 + 228] = block.timestamp + 120
                                                mem[_28763 + 164] = 160
                                                mem[_28763 + 260] = mem[_28763]
                                                s = 0
                                                while s < 32 * mem[_28763]:
                                                    mem[s + _28763 + 292] = mem[s + _28763 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28763 + 260 len (32 * mem[_28763]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24576 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24576] = 26
                                                mem[_24576 + 32] = 'SafeMath: division by zero'
                                                _25141 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25141] = 26
                                                mem[_25141 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25141 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29811 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29811]
                                                mem[_29811 + 32] = stor8
                                                require 1 < mem[_29811]
                                                mem[_29811 + 64] = stor7
                                                mem[_29811 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29811 + 100] = ext_call.return_data[0]
                                                mem[_29811 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29811 + 196] = this.address
                                                mem[_29811 + 228] = block.timestamp + 120
                                                mem[_29811 + 164] = 160
                                                mem[_29811 + 260] = mem[_29811]
                                                s = 0
                                                while s < 32 * mem[_29811]:
                                                    mem[s + _29811 + 292] = mem[s + _29811 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29811 + 260 len (32 * mem[_29811]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18848 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18848] = 26
                                        mem[_18848 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19808 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19808] = 26
                                            mem[_19808 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19808 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24343 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24343] = 26
                                                mem[_24343 + 32] = 'SafeMath: division by zero'
                                                _24887 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24887] = 26
                                                mem[_24887 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24887 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28757 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28757]
                                                mem[_28757 + 32] = stor8
                                                require 1 < mem[_28757]
                                                mem[_28757 + 64] = stor7
                                                mem[_28757 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28757 + 100] = ext_call.return_data[0]
                                                mem[_28757 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28757 + 196] = this.address
                                                mem[_28757 + 228] = block.timestamp + 120
                                                mem[_28757 + 164] = 160
                                                mem[_28757 + 260] = mem[_28757]
                                                s = 0
                                                while s < 32 * mem[_28757]:
                                                    mem[s + _28757 + 292] = mem[s + _28757 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28757 + 260 len (32 * mem[_28757]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24575 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24575] = 26
                                                mem[_24575 + 32] = 'SafeMath: division by zero'
                                                _25140 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25140] = 26
                                                mem[_25140 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25140 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29805 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29805]
                                                mem[_29805 + 32] = stor8
                                                require 1 < mem[_29805]
                                                mem[_29805 + 64] = stor7
                                                mem[_29805 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29805 + 100] = ext_call.return_data[0]
                                                mem[_29805 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29805 + 196] = this.address
                                                mem[_29805 + 228] = block.timestamp + 120
                                                mem[_29805 + 164] = 160
                                                mem[_29805 + 260] = mem[_29805]
                                                s = 0
                                                while s < 32 * mem[_29805]:
                                                    mem[s + _29805 + 292] = mem[s + _29805 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29805 + 260 len (32 * mem[_29805]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24696 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24696] = 26
                                            mem[_24696 + 32] = 'SafeMath: division by zero'
                                            _25545 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25545] = 26
                                            mem[_25545 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25545 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30625 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30625]
                                            mem[_30625 + 32] = stor8
                                            require 1 < mem[_30625]
                                            mem[_30625 + 64] = stor7
                                            mem[_30625 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30625 + 100] = ext_call.return_data[0]
                                            mem[_30625 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30625 + 196] = this.address
                                            mem[_30625 + 228] = block.timestamp + 120
                                            mem[_30625 + 164] = 160
                                            mem[_30625 + 260] = mem[_30625]
                                            s = 0
                                            while s < 32 * mem[_30625]:
                                                mem[s + _30625 + 292] = mem[s + _30625 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30625 + 260 len (32 * mem[_30625]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30625]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19973 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19973] = 26
                                        mem[_19973 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19973 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24574 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24574] = 26
                                            mem[_24574 + 32] = 'SafeMath: division by zero'
                                            _25139 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25139] = 26
                                            mem[_25139 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25139 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29799 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29799]
                                            mem[_29799 + 32] = stor8
                                            require 1 < mem[_29799]
                                            mem[_29799 + 64] = stor7
                                            mem[_29799 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29799 + 100] = ext_call.return_data[0]
                                            mem[_29799 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29799 + 196] = this.address
                                            mem[_29799 + 228] = block.timestamp + 120
                                            mem[_29799 + 164] = 160
                                            mem[_29799 + 260] = mem[_29799]
                                            s = 0
                                            while s < 32 * mem[_29799]:
                                                mem[s + _29799 + 292] = mem[s + _29799 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29799 + 260 len (32 * mem[_29799]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24695 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24695] = 26
                                                mem[_24695 + 32] = 'SafeMath: division by zero'
                                                _25544 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25544] = 26
                                                mem[_25544 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25544 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30619 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30619]
                                                mem[_30619 + 32] = stor8
                                                require 1 < mem[_30619]
                                                mem[_30619 + 64] = stor7
                                                mem[_30619 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30619 + 100] = ext_call.return_data[0]
                                                mem[_30619 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30619 + 196] = this.address
                                                mem[_30619 + 228] = block.timestamp + 120
                                                mem[_30619 + 164] = 160
                                                mem[_30619 + 260] = mem[_30619]
                                                s = 0
                                                while s < 32 * mem[_30619]:
                                                    mem[s + _30619 + 292] = mem[s + _30619 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30619 + 260 len (32 * mem[_30619]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30619]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24752 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24752] = 26
                                            mem[_24752 + 32] = 'SafeMath: division by zero'
                                            _26171 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26171] = 26
                                            mem[_26171 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26171 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31073 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31073]
                                            mem[_31073 + 32] = stor8
                                            require 1 < mem[_31073]
                                            mem[_31073 + 64] = stor7
                                            mem[_31073 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31073 + 100] = ext_call.return_data[0]
                                            mem[_31073 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31073 + 196] = this.address
                                            mem[_31073 + 228] = block.timestamp + 120
                                            mem[_31073 + 164] = 160
                                            mem[_31073 + 260] = mem[_31073]
                                            s = 0
                                            while s < 32 * mem[_31073]:
                                                mem[s + _31073 + 292] = mem[s + _31073 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31073 + 260 len (32 * mem[_31073]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17782 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17782] = 30
                                    mem[_17782 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18032 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18032 + 68] = mem[idx + _17782 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18032 + 68] = mem[_18032 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18032 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18799 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18799] = 26
                                        mem[_18799 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19741 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19741] = 26
                                        mem[_19741 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19741 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24157 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24157] = 26
                                            mem[_24157 + 32] = 'SafeMath: division by zero'
                                            _24799 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24799] = 26
                                            mem[_24799 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24799 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27754 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27754]
                                            mem[_27754 + 32] = stor8
                                            require 1 < mem[_27754]
                                            mem[_27754 + 64] = stor7
                                            mem[_27754 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27754 + 100] = ext_call.return_data[0]
                                            mem[_27754 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27754 + 196] = this.address
                                            mem[_27754 + 228] = block.timestamp + 120
                                            mem[_27754 + 164] = 160
                                            mem[_27754 + 260] = mem[_27754]
                                            s = 0
                                            while s < 32 * mem[_27754]:
                                                mem[s + _27754 + 292] = mem[s + _27754 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27754 + 260 len (32 * mem[_27754]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24340 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24340] = 26
                                                mem[_24340 + 32] = 'SafeMath: division by zero'
                                                _24886 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24886] = 26
                                                mem[_24886 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24886 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28742 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28742]
                                                mem[_28742 + 32] = stor8
                                                require 1 < mem[_28742]
                                                mem[_28742 + 64] = stor7
                                                mem[_28742 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28742 + 100] = ext_call.return_data[0]
                                                mem[_28742 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28742 + 196] = this.address
                                                mem[_28742 + 228] = block.timestamp + 120
                                                mem[_28742 + 164] = 160
                                                mem[_28742 + 260] = mem[_28742]
                                                s = 0
                                                while s < 32 * mem[_28742]:
                                                    mem[s + _28742 + 292] = mem[s + _28742 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28742 + 260 len (32 * mem[_28742]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24571 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24571] = 26
                                                mem[_24571 + 32] = 'SafeMath: division by zero'
                                                _25135 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25135] = 26
                                                mem[_25135 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25135 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29789 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29789]
                                                mem[_29789 + 32] = stor8
                                                require 1 < mem[_29789]
                                                mem[_29789 + 64] = stor7
                                                mem[_29789 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29789 + 100] = ext_call.return_data[0]
                                                mem[_29789 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29789 + 196] = this.address
                                                mem[_29789 + 228] = block.timestamp + 120
                                                mem[_29789 + 164] = 160
                                                mem[_29789 + 260] = mem[_29789]
                                                s = 0
                                                while s < 32 * mem[_29789]:
                                                    mem[s + _29789 + 292] = mem[s + _29789 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29789 + 260 len (32 * mem[_29789]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18847 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18847] = 26
                                        mem[_18847 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19807 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19807] = 26
                                            mem[_19807 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19807 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24339 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24339] = 26
                                                mem[_24339 + 32] = 'SafeMath: division by zero'
                                                _24885 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24885] = 26
                                                mem[_24885 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24885 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28736 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28736]
                                                mem[_28736 + 32] = stor8
                                                require 1 < mem[_28736]
                                                mem[_28736 + 64] = stor7
                                                mem[_28736 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28736 + 100] = ext_call.return_data[0]
                                                mem[_28736 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28736 + 196] = this.address
                                                mem[_28736 + 228] = block.timestamp + 120
                                                mem[_28736 + 164] = 160
                                                mem[_28736 + 260] = mem[_28736]
                                                s = 0
                                                while s < 32 * mem[_28736]:
                                                    mem[s + _28736 + 292] = mem[s + _28736 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28736 + 260 len (32 * mem[_28736]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24570 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24570] = 26
                                                mem[_24570 + 32] = 'SafeMath: division by zero'
                                                _25134 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25134] = 26
                                                mem[_25134 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25134 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29783 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29783]
                                                mem[_29783 + 32] = stor8
                                                require 1 < mem[_29783]
                                                mem[_29783 + 64] = stor7
                                                mem[_29783 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29783 + 100] = ext_call.return_data[0]
                                                mem[_29783 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29783 + 196] = this.address
                                                mem[_29783 + 228] = block.timestamp + 120
                                                mem[_29783 + 164] = 160
                                                mem[_29783 + 260] = mem[_29783]
                                                s = 0
                                                while s < 32 * mem[_29783]:
                                                    mem[s + _29783 + 292] = mem[s + _29783 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29783 + 260 len (32 * mem[_29783]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24694 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24694] = 26
                                            mem[_24694 + 32] = 'SafeMath: division by zero'
                                            _25536 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25536] = 26
                                            mem[_25536 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25536 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30609 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30609]
                                            mem[_30609 + 32] = stor8
                                            require 1 < mem[_30609]
                                            mem[_30609 + 64] = stor7
                                            mem[_30609 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30609 + 100] = ext_call.return_data[0]
                                            mem[_30609 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30609 + 196] = this.address
                                            mem[_30609 + 228] = block.timestamp + 120
                                            mem[_30609 + 164] = 160
                                            mem[_30609 + 260] = mem[_30609]
                                            s = 0
                                            while s < 32 * mem[_30609]:
                                                mem[s + _30609 + 292] = mem[s + _30609 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30609 + 260 len (32 * mem[_30609]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30609]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19969 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19969] = 26
                                        mem[_19969 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19969 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24569 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24569] = 26
                                            mem[_24569 + 32] = 'SafeMath: division by zero'
                                            _25133 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25133] = 26
                                            mem[_25133 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25133 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29777 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29777]
                                            mem[_29777 + 32] = stor8
                                            require 1 < mem[_29777]
                                            mem[_29777 + 64] = stor7
                                            mem[_29777 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29777 + 100] = ext_call.return_data[0]
                                            mem[_29777 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29777 + 196] = this.address
                                            mem[_29777 + 228] = block.timestamp + 120
                                            mem[_29777 + 164] = 160
                                            mem[_29777 + 260] = mem[_29777]
                                            s = 0
                                            while s < 32 * mem[_29777]:
                                                mem[s + _29777 + 292] = mem[s + _29777 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29777 + 260 len (32 * mem[_29777]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24693 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24693] = 26
                                                mem[_24693 + 32] = 'SafeMath: division by zero'
                                                _25535 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25535] = 26
                                                mem[_25535 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25535 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30603 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30603]
                                                mem[_30603 + 32] = stor8
                                                require 1 < mem[_30603]
                                                mem[_30603 + 64] = stor7
                                                mem[_30603 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30603 + 100] = ext_call.return_data[0]
                                                mem[_30603 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30603 + 196] = this.address
                                                mem[_30603 + 228] = block.timestamp + 120
                                                mem[_30603 + 164] = 160
                                                mem[_30603 + 260] = mem[_30603]
                                                s = 0
                                                while s < 32 * mem[_30603]:
                                                    mem[s + _30603 + 292] = mem[s + _30603 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30603 + 260 len (32 * mem[_30603]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30603]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24751 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24751] = 26
                                            mem[_24751 + 32] = 'SafeMath: division by zero'
                                            _26157 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26157] = 26
                                            mem[_26157 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26157 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31065 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31065]
                                            mem[_31065 + 32] = stor8
                                            require 1 < mem[_31065]
                                            mem[_31065 + 64] = stor7
                                            mem[_31065 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31065 + 100] = ext_call.return_data[0]
                                            mem[_31065 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31065 + 196] = this.address
                                            mem[_31065 + 228] = block.timestamp + 120
                                            mem[_31065 + 164] = 160
                                            mem[_31065 + 260] = mem[_31065]
                                            s = 0
                                            while s < 32 * mem[_31065]:
                                                mem[s + _31065 + 292] = mem[s + _31065 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31065 + 260 len (32 * mem[_31065]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17780 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17780] = 30
                                    mem[_17780 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18026 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18026 + 68] = mem[idx + _17780 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18026 + 68] = mem[_18026 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18026 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18798 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18798] = 26
                                        mem[_18798 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19738 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19738] = 26
                                        mem[_19738 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19738 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24154 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24154] = 26
                                            mem[_24154 + 32] = 'SafeMath: division by zero'
                                            _24798 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24798] = 26
                                            mem[_24798 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24798 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27735 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27735]
                                            mem[_27735 + 32] = stor8
                                            require 1 < mem[_27735]
                                            mem[_27735 + 64] = stor7
                                            mem[_27735 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27735 + 100] = ext_call.return_data[0]
                                            mem[_27735 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27735 + 196] = this.address
                                            mem[_27735 + 228] = block.timestamp + 120
                                            mem[_27735 + 164] = 160
                                            mem[_27735 + 260] = mem[_27735]
                                            s = 0
                                            while s < 32 * mem[_27735]:
                                                mem[s + _27735 + 292] = mem[s + _27735 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27735 + 260 len (32 * mem[_27735]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24336 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24336] = 26
                                                mem[_24336 + 32] = 'SafeMath: division by zero'
                                                _24884 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24884] = 26
                                                mem[_24884 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24884 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28721 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28721]
                                                mem[_28721 + 32] = stor8
                                                require 1 < mem[_28721]
                                                mem[_28721 + 64] = stor7
                                                mem[_28721 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28721 + 100] = ext_call.return_data[0]
                                                mem[_28721 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28721 + 196] = this.address
                                                mem[_28721 + 228] = block.timestamp + 120
                                                mem[_28721 + 164] = 160
                                                mem[_28721 + 260] = mem[_28721]
                                                s = 0
                                                while s < 32 * mem[_28721]:
                                                    mem[s + _28721 + 292] = mem[s + _28721 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28721 + 260 len (32 * mem[_28721]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24566 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24566] = 26
                                                mem[_24566 + 32] = 'SafeMath: division by zero'
                                                _25129 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25129] = 26
                                                mem[_25129 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25129 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29767 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29767]
                                                mem[_29767 + 32] = stor8
                                                require 1 < mem[_29767]
                                                mem[_29767 + 64] = stor7
                                                mem[_29767 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29767 + 100] = ext_call.return_data[0]
                                                mem[_29767 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29767 + 196] = this.address
                                                mem[_29767 + 228] = block.timestamp + 120
                                                mem[_29767 + 164] = 160
                                                mem[_29767 + 260] = mem[_29767]
                                                s = 0
                                                while s < 32 * mem[_29767]:
                                                    mem[s + _29767 + 292] = mem[s + _29767 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29767 + 260 len (32 * mem[_29767]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18846 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18846] = 26
                                        mem[_18846 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19806 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19806] = 26
                                            mem[_19806 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19806 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24335 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24335] = 26
                                                mem[_24335 + 32] = 'SafeMath: division by zero'
                                                _24883 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24883] = 26
                                                mem[_24883 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24883 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28715 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28715]
                                                mem[_28715 + 32] = stor8
                                                require 1 < mem[_28715]
                                                mem[_28715 + 64] = stor7
                                                mem[_28715 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28715 + 100] = ext_call.return_data[0]
                                                mem[_28715 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28715 + 196] = this.address
                                                mem[_28715 + 228] = block.timestamp + 120
                                                mem[_28715 + 164] = 160
                                                mem[_28715 + 260] = mem[_28715]
                                                s = 0
                                                while s < 32 * mem[_28715]:
                                                    mem[s + _28715 + 292] = mem[s + _28715 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28715 + 260 len (32 * mem[_28715]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24565 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24565] = 26
                                                mem[_24565 + 32] = 'SafeMath: division by zero'
                                                _25128 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25128] = 26
                                                mem[_25128 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25128 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29761 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29761]
                                                mem[_29761 + 32] = stor8
                                                require 1 < mem[_29761]
                                                mem[_29761 + 64] = stor7
                                                mem[_29761 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29761 + 100] = ext_call.return_data[0]
                                                mem[_29761 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29761 + 196] = this.address
                                                mem[_29761 + 228] = block.timestamp + 120
                                                mem[_29761 + 164] = 160
                                                mem[_29761 + 260] = mem[_29761]
                                                s = 0
                                                while s < 32 * mem[_29761]:
                                                    mem[s + _29761 + 292] = mem[s + _29761 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29761 + 260 len (32 * mem[_29761]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24692 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24692] = 26
                                            mem[_24692 + 32] = 'SafeMath: division by zero'
                                            _25527 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25527] = 26
                                            mem[_25527 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25527 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30593 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30593]
                                            mem[_30593 + 32] = stor8
                                            require 1 < mem[_30593]
                                            mem[_30593 + 64] = stor7
                                            mem[_30593 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30593 + 100] = ext_call.return_data[0]
                                            mem[_30593 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30593 + 196] = this.address
                                            mem[_30593 + 228] = block.timestamp + 120
                                            mem[_30593 + 164] = 160
                                            mem[_30593 + 260] = mem[_30593]
                                            s = 0
                                            while s < 32 * mem[_30593]:
                                                mem[s + _30593 + 292] = mem[s + _30593 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30593 + 260 len (32 * mem[_30593]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30593]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19965 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19965] = 26
                                        mem[_19965 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19965 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24564 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24564] = 26
                                            mem[_24564 + 32] = 'SafeMath: division by zero'
                                            _25127 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25127] = 26
                                            mem[_25127 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25127 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29755 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29755]
                                            mem[_29755 + 32] = stor8
                                            require 1 < mem[_29755]
                                            mem[_29755 + 64] = stor7
                                            mem[_29755 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29755 + 100] = ext_call.return_data[0]
                                            mem[_29755 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29755 + 196] = this.address
                                            mem[_29755 + 228] = block.timestamp + 120
                                            mem[_29755 + 164] = 160
                                            mem[_29755 + 260] = mem[_29755]
                                            s = 0
                                            while s < 32 * mem[_29755]:
                                                mem[s + _29755 + 292] = mem[s + _29755 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29755 + 260 len (32 * mem[_29755]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24691 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24691] = 26
                                                mem[_24691 + 32] = 'SafeMath: division by zero'
                                                _25526 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25526] = 26
                                                mem[_25526 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25526 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30587 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30587]
                                                mem[_30587 + 32] = stor8
                                                require 1 < mem[_30587]
                                                mem[_30587 + 64] = stor7
                                                mem[_30587 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30587 + 100] = ext_call.return_data[0]
                                                mem[_30587 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30587 + 196] = this.address
                                                mem[_30587 + 228] = block.timestamp + 120
                                                mem[_30587 + 164] = 160
                                                mem[_30587 + 260] = mem[_30587]
                                                s = 0
                                                while s < 32 * mem[_30587]:
                                                    mem[s + _30587 + 292] = mem[s + _30587 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30587 + 260 len (32 * mem[_30587]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30587]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24750 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24750] = 26
                                            mem[_24750 + 32] = 'SafeMath: division by zero'
                                            _26143 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26143] = 26
                                            mem[_26143 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26143 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31057 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31057]
                                            mem[_31057 + 32] = stor8
                                            require 1 < mem[_31057]
                                            mem[_31057 + 64] = stor7
                                            mem[_31057 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31057 + 100] = ext_call.return_data[0]
                                            mem[_31057 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31057 + 196] = this.address
                                            mem[_31057 + 228] = block.timestamp + 120
                                            mem[_31057 + 164] = 160
                                            mem[_31057 + 260] = mem[_31057]
                                            s = 0
                                            while s < 32 * mem[_31057]:
                                                mem[s + _31057 + 292] = mem[s + _31057 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31057 + 260 len (32 * mem[_31057]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17778 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17778] = 30
                                    mem[_17778 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18020 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18020 + 68] = mem[idx + _17778 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18020 + 68] = mem[_18020 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18020 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18797 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18797] = 26
                                        mem[_18797 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19735 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19735] = 26
                                        mem[_19735 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19735 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24151 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24151] = 26
                                            mem[_24151 + 32] = 'SafeMath: division by zero'
                                            _24797 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24797] = 26
                                            mem[_24797 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24797 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27716 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27716]
                                            mem[_27716 + 32] = stor8
                                            require 1 < mem[_27716]
                                            mem[_27716 + 64] = stor7
                                            mem[_27716 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27716 + 100] = ext_call.return_data[0]
                                            mem[_27716 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27716 + 196] = this.address
                                            mem[_27716 + 228] = block.timestamp + 120
                                            mem[_27716 + 164] = 160
                                            mem[_27716 + 260] = mem[_27716]
                                            s = 0
                                            while s < 32 * mem[_27716]:
                                                mem[s + _27716 + 292] = mem[s + _27716 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27716 + 260 len (32 * mem[_27716]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24332 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24332] = 26
                                                mem[_24332 + 32] = 'SafeMath: division by zero'
                                                _24882 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24882] = 26
                                                mem[_24882 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24882 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28700 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28700]
                                                mem[_28700 + 32] = stor8
                                                require 1 < mem[_28700]
                                                mem[_28700 + 64] = stor7
                                                mem[_28700 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28700 + 100] = ext_call.return_data[0]
                                                mem[_28700 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28700 + 196] = this.address
                                                mem[_28700 + 228] = block.timestamp + 120
                                                mem[_28700 + 164] = 160
                                                mem[_28700 + 260] = mem[_28700]
                                                s = 0
                                                while s < 32 * mem[_28700]:
                                                    mem[s + _28700 + 292] = mem[s + _28700 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28700 + 260 len (32 * mem[_28700]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24561 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24561] = 26
                                                mem[_24561 + 32] = 'SafeMath: division by zero'
                                                _25123 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25123] = 26
                                                mem[_25123 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25123 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29745 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29745]
                                                mem[_29745 + 32] = stor8
                                                require 1 < mem[_29745]
                                                mem[_29745 + 64] = stor7
                                                mem[_29745 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29745 + 100] = ext_call.return_data[0]
                                                mem[_29745 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29745 + 196] = this.address
                                                mem[_29745 + 228] = block.timestamp + 120
                                                mem[_29745 + 164] = 160
                                                mem[_29745 + 260] = mem[_29745]
                                                s = 0
                                                while s < 32 * mem[_29745]:
                                                    mem[s + _29745 + 292] = mem[s + _29745 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29745 + 260 len (32 * mem[_29745]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18845 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18845] = 26
                                        mem[_18845 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19805 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19805] = 26
                                            mem[_19805 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19805 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24331 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24331] = 26
                                                mem[_24331 + 32] = 'SafeMath: division by zero'
                                                _24881 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24881] = 26
                                                mem[_24881 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24881 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28694 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28694]
                                                mem[_28694 + 32] = stor8
                                                require 1 < mem[_28694]
                                                mem[_28694 + 64] = stor7
                                                mem[_28694 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28694 + 100] = ext_call.return_data[0]
                                                mem[_28694 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28694 + 196] = this.address
                                                mem[_28694 + 228] = block.timestamp + 120
                                                mem[_28694 + 164] = 160
                                                mem[_28694 + 260] = mem[_28694]
                                                s = 0
                                                while s < 32 * mem[_28694]:
                                                    mem[s + _28694 + 292] = mem[s + _28694 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28694 + 260 len (32 * mem[_28694]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24560 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24560] = 26
                                                mem[_24560 + 32] = 'SafeMath: division by zero'
                                                _25122 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25122] = 26
                                                mem[_25122 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25122 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29739 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29739]
                                                mem[_29739 + 32] = stor8
                                                require 1 < mem[_29739]
                                                mem[_29739 + 64] = stor7
                                                mem[_29739 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29739 + 100] = ext_call.return_data[0]
                                                mem[_29739 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29739 + 196] = this.address
                                                mem[_29739 + 228] = block.timestamp + 120
                                                mem[_29739 + 164] = 160
                                                mem[_29739 + 260] = mem[_29739]
                                                s = 0
                                                while s < 32 * mem[_29739]:
                                                    mem[s + _29739 + 292] = mem[s + _29739 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29739 + 260 len (32 * mem[_29739]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24690 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24690] = 26
                                            mem[_24690 + 32] = 'SafeMath: division by zero'
                                            _25518 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25518] = 26
                                            mem[_25518 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25518 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30577 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30577]
                                            mem[_30577 + 32] = stor8
                                            require 1 < mem[_30577]
                                            mem[_30577 + 64] = stor7
                                            mem[_30577 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30577 + 100] = ext_call.return_data[0]
                                            mem[_30577 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30577 + 196] = this.address
                                            mem[_30577 + 228] = block.timestamp + 120
                                            mem[_30577 + 164] = 160
                                            mem[_30577 + 260] = mem[_30577]
                                            s = 0
                                            while s < 32 * mem[_30577]:
                                                mem[s + _30577 + 292] = mem[s + _30577 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30577 + 260 len (32 * mem[_30577]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30577]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19961 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19961] = 26
                                        mem[_19961 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19961 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24559 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24559] = 26
                                            mem[_24559 + 32] = 'SafeMath: division by zero'
                                            _25121 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25121] = 26
                                            mem[_25121 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25121 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29733 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29733]
                                            mem[_29733 + 32] = stor8
                                            require 1 < mem[_29733]
                                            mem[_29733 + 64] = stor7
                                            mem[_29733 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29733 + 100] = ext_call.return_data[0]
                                            mem[_29733 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29733 + 196] = this.address
                                            mem[_29733 + 228] = block.timestamp + 120
                                            mem[_29733 + 164] = 160
                                            mem[_29733 + 260] = mem[_29733]
                                            s = 0
                                            while s < 32 * mem[_29733]:
                                                mem[s + _29733 + 292] = mem[s + _29733 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29733 + 260 len (32 * mem[_29733]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24689 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24689] = 26
                                                mem[_24689 + 32] = 'SafeMath: division by zero'
                                                _25517 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25517] = 26
                                                mem[_25517 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25517 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30571 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30571]
                                                mem[_30571 + 32] = stor8
                                                require 1 < mem[_30571]
                                                mem[_30571 + 64] = stor7
                                                mem[_30571 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30571 + 100] = ext_call.return_data[0]
                                                mem[_30571 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30571 + 196] = this.address
                                                mem[_30571 + 228] = block.timestamp + 120
                                                mem[_30571 + 164] = 160
                                                mem[_30571 + 260] = mem[_30571]
                                                s = 0
                                                while s < 32 * mem[_30571]:
                                                    mem[s + _30571 + 292] = mem[s + _30571 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30571 + 260 len (32 * mem[_30571]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30571]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24749 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24749] = 26
                                            mem[_24749 + 32] = 'SafeMath: division by zero'
                                            _26129 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26129] = 26
                                            mem[_26129 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26129 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31049 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31049]
                                            mem[_31049 + 32] = stor8
                                            require 1 < mem[_31049]
                                            mem[_31049 + 64] = stor7
                                            mem[_31049 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31049 + 100] = ext_call.return_data[0]
                                            mem[_31049 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31049 + 196] = this.address
                                            mem[_31049 + 228] = block.timestamp + 120
                                            mem[_31049 + 164] = 160
                                            mem[_31049 + 260] = mem[_31049]
                                            s = 0
                                            while s < 32 * mem[_31049]:
                                                mem[s + _31049 + 292] = mem[s + _31049 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31049 + 260 len (32 * mem[_31049]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17776 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17776] = 30
                                    mem[_17776 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18014 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18014 + 68] = mem[idx + _17776 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18014 + 68] = mem[_18014 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18014 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18796 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18796] = 26
                                        mem[_18796 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19732 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19732] = 26
                                        mem[_19732 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19732 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24148 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24148] = 26
                                            mem[_24148 + 32] = 'SafeMath: division by zero'
                                            _24796 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24796] = 26
                                            mem[_24796 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24796 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27697 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27697]
                                            mem[_27697 + 32] = stor8
                                            require 1 < mem[_27697]
                                            mem[_27697 + 64] = stor7
                                            mem[_27697 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27697 + 100] = ext_call.return_data[0]
                                            mem[_27697 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27697 + 196] = this.address
                                            mem[_27697 + 228] = block.timestamp + 120
                                            mem[_27697 + 164] = 160
                                            mem[_27697 + 260] = mem[_27697]
                                            s = 0
                                            while s < 32 * mem[_27697]:
                                                mem[s + _27697 + 292] = mem[s + _27697 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27697 + 260 len (32 * mem[_27697]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24328 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24328] = 26
                                                mem[_24328 + 32] = 'SafeMath: division by zero'
                                                _24880 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24880] = 26
                                                mem[_24880 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24880 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28679 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28679]
                                                mem[_28679 + 32] = stor8
                                                require 1 < mem[_28679]
                                                mem[_28679 + 64] = stor7
                                                mem[_28679 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28679 + 100] = ext_call.return_data[0]
                                                mem[_28679 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28679 + 196] = this.address
                                                mem[_28679 + 228] = block.timestamp + 120
                                                mem[_28679 + 164] = 160
                                                mem[_28679 + 260] = mem[_28679]
                                                s = 0
                                                while s < 32 * mem[_28679]:
                                                    mem[s + _28679 + 292] = mem[s + _28679 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28679 + 260 len (32 * mem[_28679]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24556 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24556] = 26
                                                mem[_24556 + 32] = 'SafeMath: division by zero'
                                                _25117 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25117] = 26
                                                mem[_25117 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25117 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29723 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29723]
                                                mem[_29723 + 32] = stor8
                                                require 1 < mem[_29723]
                                                mem[_29723 + 64] = stor7
                                                mem[_29723 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29723 + 100] = ext_call.return_data[0]
                                                mem[_29723 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29723 + 196] = this.address
                                                mem[_29723 + 228] = block.timestamp + 120
                                                mem[_29723 + 164] = 160
                                                mem[_29723 + 260] = mem[_29723]
                                                s = 0
                                                while s < 32 * mem[_29723]:
                                                    mem[s + _29723 + 292] = mem[s + _29723 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29723 + 260 len (32 * mem[_29723]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18844 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18844] = 26
                                        mem[_18844 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19804 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19804] = 26
                                            mem[_19804 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19804 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24327 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24327] = 26
                                                mem[_24327 + 32] = 'SafeMath: division by zero'
                                                _24879 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24879] = 26
                                                mem[_24879 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24879 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28673 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28673]
                                                mem[_28673 + 32] = stor8
                                                require 1 < mem[_28673]
                                                mem[_28673 + 64] = stor7
                                                mem[_28673 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28673 + 100] = ext_call.return_data[0]
                                                mem[_28673 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28673 + 196] = this.address
                                                mem[_28673 + 228] = block.timestamp + 120
                                                mem[_28673 + 164] = 160
                                                mem[_28673 + 260] = mem[_28673]
                                                s = 0
                                                while s < 32 * mem[_28673]:
                                                    mem[s + _28673 + 292] = mem[s + _28673 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28673 + 260 len (32 * mem[_28673]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24555 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24555] = 26
                                                mem[_24555 + 32] = 'SafeMath: division by zero'
                                                _25116 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25116] = 26
                                                mem[_25116 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25116 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29717 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29717]
                                                mem[_29717 + 32] = stor8
                                                require 1 < mem[_29717]
                                                mem[_29717 + 64] = stor7
                                                mem[_29717 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29717 + 100] = ext_call.return_data[0]
                                                mem[_29717 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29717 + 196] = this.address
                                                mem[_29717 + 228] = block.timestamp + 120
                                                mem[_29717 + 164] = 160
                                                mem[_29717 + 260] = mem[_29717]
                                                s = 0
                                                while s < 32 * mem[_29717]:
                                                    mem[s + _29717 + 292] = mem[s + _29717 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29717 + 260 len (32 * mem[_29717]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24688 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24688] = 26
                                            mem[_24688 + 32] = 'SafeMath: division by zero'
                                            _25509 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25509] = 26
                                            mem[_25509 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25509 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30561 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30561]
                                            mem[_30561 + 32] = stor8
                                            require 1 < mem[_30561]
                                            mem[_30561 + 64] = stor7
                                            mem[_30561 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30561 + 100] = ext_call.return_data[0]
                                            mem[_30561 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30561 + 196] = this.address
                                            mem[_30561 + 228] = block.timestamp + 120
                                            mem[_30561 + 164] = 160
                                            mem[_30561 + 260] = mem[_30561]
                                            s = 0
                                            while s < 32 * mem[_30561]:
                                                mem[s + _30561 + 292] = mem[s + _30561 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30561 + 260 len (32 * mem[_30561]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30561]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19957 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19957] = 26
                                        mem[_19957 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19957 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24554] = 26
                                            mem[_24554 + 32] = 'SafeMath: division by zero'
                                            _25115 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25115] = 26
                                            mem[_25115 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25115 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29711 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29711]
                                            mem[_29711 + 32] = stor8
                                            require 1 < mem[_29711]
                                            mem[_29711 + 64] = stor7
                                            mem[_29711 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29711 + 100] = ext_call.return_data[0]
                                            mem[_29711 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29711 + 196] = this.address
                                            mem[_29711 + 228] = block.timestamp + 120
                                            mem[_29711 + 164] = 160
                                            mem[_29711 + 260] = mem[_29711]
                                            s = 0
                                            while s < 32 * mem[_29711]:
                                                mem[s + _29711 + 292] = mem[s + _29711 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29711 + 260 len (32 * mem[_29711]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24687 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24687] = 26
                                                mem[_24687 + 32] = 'SafeMath: division by zero'
                                                _25508 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25508] = 26
                                                mem[_25508 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25508 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30555 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30555]
                                                mem[_30555 + 32] = stor8
                                                require 1 < mem[_30555]
                                                mem[_30555 + 64] = stor7
                                                mem[_30555 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30555 + 100] = ext_call.return_data[0]
                                                mem[_30555 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30555 + 196] = this.address
                                                mem[_30555 + 228] = block.timestamp + 120
                                                mem[_30555 + 164] = 160
                                                mem[_30555 + 260] = mem[_30555]
                                                s = 0
                                                while s < 32 * mem[_30555]:
                                                    mem[s + _30555 + 292] = mem[s + _30555 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30555 + 260 len (32 * mem[_30555]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30555]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24748 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24748] = 26
                                            mem[_24748 + 32] = 'SafeMath: division by zero'
                                            _26115 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26115] = 26
                                            mem[_26115 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26115 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31041 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31041]
                                            mem[_31041 + 32] = stor8
                                            require 1 < mem[_31041]
                                            mem[_31041 + 64] = stor7
                                            mem[_31041 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31041 + 100] = ext_call.return_data[0]
                                            mem[_31041 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31041 + 196] = this.address
                                            mem[_31041 + 228] = block.timestamp + 120
                                            mem[_31041 + 164] = 160
                                            mem[_31041 + 260] = mem[_31041]
                                            s = 0
                                            while s < 32 * mem[_31041]:
                                                mem[s + _31041 + 292] = mem[s + _31041 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31041 + 260 len (32 * mem[_31041]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17774 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17774] = 30
                                    mem[_17774 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _18008 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18008 + 68] = mem[idx + _17774 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18008 + 68] = mem[_18008 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18008 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18795 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18795] = 26
                                        mem[_18795 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19729 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19729] = 26
                                        mem[_19729 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19729 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24145 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24145] = 26
                                            mem[_24145 + 32] = 'SafeMath: division by zero'
                                            _24795 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24795] = 26
                                            mem[_24795 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24795 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27678 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27678]
                                            mem[_27678 + 32] = stor8
                                            require 1 < mem[_27678]
                                            mem[_27678 + 64] = stor7
                                            mem[_27678 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27678 + 100] = ext_call.return_data[0]
                                            mem[_27678 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27678 + 196] = this.address
                                            mem[_27678 + 228] = block.timestamp + 120
                                            mem[_27678 + 164] = 160
                                            mem[_27678 + 260] = mem[_27678]
                                            s = 0
                                            while s < 32 * mem[_27678]:
                                                mem[s + _27678 + 292] = mem[s + _27678 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27678 + 260 len (32 * mem[_27678]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24324 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24324] = 26
                                                mem[_24324 + 32] = 'SafeMath: division by zero'
                                                _24878 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24878] = 26
                                                mem[_24878 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24878 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28658 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28658]
                                                mem[_28658 + 32] = stor8
                                                require 1 < mem[_28658]
                                                mem[_28658 + 64] = stor7
                                                mem[_28658 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28658 + 100] = ext_call.return_data[0]
                                                mem[_28658 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28658 + 196] = this.address
                                                mem[_28658 + 228] = block.timestamp + 120
                                                mem[_28658 + 164] = 160
                                                mem[_28658 + 260] = mem[_28658]
                                                s = 0
                                                while s < 32 * mem[_28658]:
                                                    mem[s + _28658 + 292] = mem[s + _28658 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28658 + 260 len (32 * mem[_28658]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24551 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24551] = 26
                                                mem[_24551 + 32] = 'SafeMath: division by zero'
                                                _25111 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25111] = 26
                                                mem[_25111 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25111 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29701 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29701]
                                                mem[_29701 + 32] = stor8
                                                require 1 < mem[_29701]
                                                mem[_29701 + 64] = stor7
                                                mem[_29701 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29701 + 100] = ext_call.return_data[0]
                                                mem[_29701 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29701 + 196] = this.address
                                                mem[_29701 + 228] = block.timestamp + 120
                                                mem[_29701 + 164] = 160
                                                mem[_29701 + 260] = mem[_29701]
                                                s = 0
                                                while s < 32 * mem[_29701]:
                                                    mem[s + _29701 + 292] = mem[s + _29701 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29701 + 260 len (32 * mem[_29701]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18843 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18843] = 26
                                        mem[_18843 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19803 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19803] = 26
                                            mem[_19803 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19803 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24323 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24323] = 26
                                                mem[_24323 + 32] = 'SafeMath: division by zero'
                                                _24877 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24877] = 26
                                                mem[_24877 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24877 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28652 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28652]
                                                mem[_28652 + 32] = stor8
                                                require 1 < mem[_28652]
                                                mem[_28652 + 64] = stor7
                                                mem[_28652 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28652 + 100] = ext_call.return_data[0]
                                                mem[_28652 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28652 + 196] = this.address
                                                mem[_28652 + 228] = block.timestamp + 120
                                                mem[_28652 + 164] = 160
                                                mem[_28652 + 260] = mem[_28652]
                                                s = 0
                                                while s < 32 * mem[_28652]:
                                                    mem[s + _28652 + 292] = mem[s + _28652 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28652 + 260 len (32 * mem[_28652]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24550 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24550] = 26
                                                mem[_24550 + 32] = 'SafeMath: division by zero'
                                                _25110 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25110] = 26
                                                mem[_25110 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25110 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29695 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29695]
                                                mem[_29695 + 32] = stor8
                                                require 1 < mem[_29695]
                                                mem[_29695 + 64] = stor7
                                                mem[_29695 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29695 + 100] = ext_call.return_data[0]
                                                mem[_29695 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29695 + 196] = this.address
                                                mem[_29695 + 228] = block.timestamp + 120
                                                mem[_29695 + 164] = 160
                                                mem[_29695 + 260] = mem[_29695]
                                                s = 0
                                                while s < 32 * mem[_29695]:
                                                    mem[s + _29695 + 292] = mem[s + _29695 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29695 + 260 len (32 * mem[_29695]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24686 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24686] = 26
                                            mem[_24686 + 32] = 'SafeMath: division by zero'
                                            _25500 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25500] = 26
                                            mem[_25500 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25500 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30545 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30545]
                                            mem[_30545 + 32] = stor8
                                            require 1 < mem[_30545]
                                            mem[_30545 + 64] = stor7
                                            mem[_30545 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30545 + 100] = ext_call.return_data[0]
                                            mem[_30545 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30545 + 196] = this.address
                                            mem[_30545 + 228] = block.timestamp + 120
                                            mem[_30545 + 164] = 160
                                            mem[_30545 + 260] = mem[_30545]
                                            s = 0
                                            while s < 32 * mem[_30545]:
                                                mem[s + _30545 + 292] = mem[s + _30545 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30545 + 260 len (32 * mem[_30545]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30545]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19953 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19953] = 26
                                        mem[_19953 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19953 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24549 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24549] = 26
                                            mem[_24549 + 32] = 'SafeMath: division by zero'
                                            _25109 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25109] = 26
                                            mem[_25109 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25109 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29689 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29689]
                                            mem[_29689 + 32] = stor8
                                            require 1 < mem[_29689]
                                            mem[_29689 + 64] = stor7
                                            mem[_29689 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29689 + 100] = ext_call.return_data[0]
                                            mem[_29689 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29689 + 196] = this.address
                                            mem[_29689 + 228] = block.timestamp + 120
                                            mem[_29689 + 164] = 160
                                            mem[_29689 + 260] = mem[_29689]
                                            s = 0
                                            while s < 32 * mem[_29689]:
                                                mem[s + _29689 + 292] = mem[s + _29689 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29689 + 260 len (32 * mem[_29689]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24685 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24685] = 26
                                                mem[_24685 + 32] = 'SafeMath: division by zero'
                                                _25499 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25499] = 26
                                                mem[_25499 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25499 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30539 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30539]
                                                mem[_30539 + 32] = stor8
                                                require 1 < mem[_30539]
                                                mem[_30539 + 64] = stor7
                                                mem[_30539 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30539 + 100] = ext_call.return_data[0]
                                                mem[_30539 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30539 + 196] = this.address
                                                mem[_30539 + 228] = block.timestamp + 120
                                                mem[_30539 + 164] = 160
                                                mem[_30539 + 260] = mem[_30539]
                                                s = 0
                                                while s < 32 * mem[_30539]:
                                                    mem[s + _30539 + 292] = mem[s + _30539 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30539 + 260 len (32 * mem[_30539]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30539]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24747 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24747] = 26
                                            mem[_24747 + 32] = 'SafeMath: division by zero'
                                            _26101 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26101] = 26
                                            mem[_26101 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26101 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31033 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31033]
                                            mem[_31033 + 32] = stor8
                                            require 1 < mem[_31033]
                                            mem[_31033 + 64] = stor7
                                            mem[_31033 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31033 + 100] = ext_call.return_data[0]
                                            mem[_31033 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31033 + 196] = this.address
                                            mem[_31033 + 228] = block.timestamp + 120
                                            mem[_31033 + 164] = 160
                                            mem[_31033 + 260] = mem[_31033]
                                            s = 0
                                            while s < 32 * mem[_31033]:
                                                mem[s + _31033 + 292] = mem[s + _31033 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31033 + 260 len (32 * mem[_31033]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17772 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17772] = 30
                                    mem[_17772 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _18002 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _18002 + 68] = mem[idx + _17772 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_18002 + 68] = mem[_18002 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _18002 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18794 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18794] = 26
                                        mem[_18794 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19726 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19726] = 26
                                        mem[_19726 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19726 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24142 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24142] = 26
                                            mem[_24142 + 32] = 'SafeMath: division by zero'
                                            _24794 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24794] = 26
                                            mem[_24794 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24794 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27659 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27659]
                                            mem[_27659 + 32] = stor8
                                            require 1 < mem[_27659]
                                            mem[_27659 + 64] = stor7
                                            mem[_27659 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27659 + 100] = ext_call.return_data[0]
                                            mem[_27659 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27659 + 196] = this.address
                                            mem[_27659 + 228] = block.timestamp + 120
                                            mem[_27659 + 164] = 160
                                            mem[_27659 + 260] = mem[_27659]
                                            s = 0
                                            while s < 32 * mem[_27659]:
                                                mem[s + _27659 + 292] = mem[s + _27659 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27659 + 260 len (32 * mem[_27659]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24320 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24320] = 26
                                                mem[_24320 + 32] = 'SafeMath: division by zero'
                                                _24876 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24876] = 26
                                                mem[_24876 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24876 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28637 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28637]
                                                mem[_28637 + 32] = stor8
                                                require 1 < mem[_28637]
                                                mem[_28637 + 64] = stor7
                                                mem[_28637 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28637 + 100] = ext_call.return_data[0]
                                                mem[_28637 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28637 + 196] = this.address
                                                mem[_28637 + 228] = block.timestamp + 120
                                                mem[_28637 + 164] = 160
                                                mem[_28637 + 260] = mem[_28637]
                                                s = 0
                                                while s < 32 * mem[_28637]:
                                                    mem[s + _28637 + 292] = mem[s + _28637 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28637 + 260 len (32 * mem[_28637]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24546 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24546] = 26
                                                mem[_24546 + 32] = 'SafeMath: division by zero'
                                                _25105 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25105] = 26
                                                mem[_25105 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25105 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29679 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29679]
                                                mem[_29679 + 32] = stor8
                                                require 1 < mem[_29679]
                                                mem[_29679 + 64] = stor7
                                                mem[_29679 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29679 + 100] = ext_call.return_data[0]
                                                mem[_29679 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29679 + 196] = this.address
                                                mem[_29679 + 228] = block.timestamp + 120
                                                mem[_29679 + 164] = 160
                                                mem[_29679 + 260] = mem[_29679]
                                                s = 0
                                                while s < 32 * mem[_29679]:
                                                    mem[s + _29679 + 292] = mem[s + _29679 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29679 + 260 len (32 * mem[_29679]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18842 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18842] = 26
                                        mem[_18842 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19802 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19802] = 26
                                            mem[_19802 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19802 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24319 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24319] = 26
                                                mem[_24319 + 32] = 'SafeMath: division by zero'
                                                _24875 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24875] = 26
                                                mem[_24875 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24875 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28631 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28631]
                                                mem[_28631 + 32] = stor8
                                                require 1 < mem[_28631]
                                                mem[_28631 + 64] = stor7
                                                mem[_28631 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28631 + 100] = ext_call.return_data[0]
                                                mem[_28631 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28631 + 196] = this.address
                                                mem[_28631 + 228] = block.timestamp + 120
                                                mem[_28631 + 164] = 160
                                                mem[_28631 + 260] = mem[_28631]
                                                s = 0
                                                while s < 32 * mem[_28631]:
                                                    mem[s + _28631 + 292] = mem[s + _28631 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28631 + 260 len (32 * mem[_28631]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24545 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24545] = 26
                                                mem[_24545 + 32] = 'SafeMath: division by zero'
                                                _25104 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25104] = 26
                                                mem[_25104 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25104 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29673 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29673]
                                                mem[_29673 + 32] = stor8
                                                require 1 < mem[_29673]
                                                mem[_29673 + 64] = stor7
                                                mem[_29673 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29673 + 100] = ext_call.return_data[0]
                                                mem[_29673 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29673 + 196] = this.address
                                                mem[_29673 + 228] = block.timestamp + 120
                                                mem[_29673 + 164] = 160
                                                mem[_29673 + 260] = mem[_29673]
                                                s = 0
                                                while s < 32 * mem[_29673]:
                                                    mem[s + _29673 + 292] = mem[s + _29673 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29673 + 260 len (32 * mem[_29673]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24684 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24684] = 26
                                            mem[_24684 + 32] = 'SafeMath: division by zero'
                                            _25491 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25491] = 26
                                            mem[_25491 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25491 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30529 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30529]
                                            mem[_30529 + 32] = stor8
                                            require 1 < mem[_30529]
                                            mem[_30529 + 64] = stor7
                                            mem[_30529 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30529 + 100] = ext_call.return_data[0]
                                            mem[_30529 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30529 + 196] = this.address
                                            mem[_30529 + 228] = block.timestamp + 120
                                            mem[_30529 + 164] = 160
                                            mem[_30529 + 260] = mem[_30529]
                                            s = 0
                                            while s < 32 * mem[_30529]:
                                                mem[s + _30529 + 292] = mem[s + _30529 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30529 + 260 len (32 * mem[_30529]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30529]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19949 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19949] = 26
                                        mem[_19949 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19949 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24544 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24544] = 26
                                            mem[_24544 + 32] = 'SafeMath: division by zero'
                                            _25103 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25103] = 26
                                            mem[_25103 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25103 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29667 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29667]
                                            mem[_29667 + 32] = stor8
                                            require 1 < mem[_29667]
                                            mem[_29667 + 64] = stor7
                                            mem[_29667 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29667 + 100] = ext_call.return_data[0]
                                            mem[_29667 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29667 + 196] = this.address
                                            mem[_29667 + 228] = block.timestamp + 120
                                            mem[_29667 + 164] = 160
                                            mem[_29667 + 260] = mem[_29667]
                                            s = 0
                                            while s < 32 * mem[_29667]:
                                                mem[s + _29667 + 292] = mem[s + _29667 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29667 + 260 len (32 * mem[_29667]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24683 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24683] = 26
                                                mem[_24683 + 32] = 'SafeMath: division by zero'
                                                _25490 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25490] = 26
                                                mem[_25490 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25490 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30523 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30523]
                                                mem[_30523 + 32] = stor8
                                                require 1 < mem[_30523]
                                                mem[_30523 + 64] = stor7
                                                mem[_30523 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30523 + 100] = ext_call.return_data[0]
                                                mem[_30523 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30523 + 196] = this.address
                                                mem[_30523 + 228] = block.timestamp + 120
                                                mem[_30523 + 164] = 160
                                                mem[_30523 + 260] = mem[_30523]
                                                s = 0
                                                while s < 32 * mem[_30523]:
                                                    mem[s + _30523 + 292] = mem[s + _30523 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30523 + 260 len (32 * mem[_30523]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30523]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24746 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24746] = 26
                                            mem[_24746 + 32] = 'SafeMath: division by zero'
                                            _26087 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26087] = 26
                                            mem[_26087 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26087 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31025 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31025]
                                            mem[_31025 + 32] = stor8
                                            require 1 < mem[_31025]
                                            mem[_31025 + 64] = stor7
                                            mem[_31025 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31025 + 100] = ext_call.return_data[0]
                                            mem[_31025 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31025 + 196] = this.address
                                            mem[_31025 + 228] = block.timestamp + 120
                                            mem[_31025 + 164] = 160
                                            mem[_31025 + 260] = mem[_31025]
                                            s = 0
                                            while s < 32 * mem[_31025]:
                                                mem[s + _31025 + 292] = mem[s + _31025 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31025 + 260 len (32 * mem[_31025]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17770 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17770] = 30
                                    mem[_17770 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17996 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17996 + 68] = mem[idx + _17770 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17996 + 68] = mem[_17996 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17996 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18793 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18793] = 26
                                        mem[_18793 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19723 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19723] = 26
                                        mem[_19723 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19723 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24139 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24139] = 26
                                            mem[_24139 + 32] = 'SafeMath: division by zero'
                                            _24793 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24793] = 26
                                            mem[_24793 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24793 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27640 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27640]
                                            mem[_27640 + 32] = stor8
                                            require 1 < mem[_27640]
                                            mem[_27640 + 64] = stor7
                                            mem[_27640 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27640 + 100] = ext_call.return_data[0]
                                            mem[_27640 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27640 + 196] = this.address
                                            mem[_27640 + 228] = block.timestamp + 120
                                            mem[_27640 + 164] = 160
                                            mem[_27640 + 260] = mem[_27640]
                                            s = 0
                                            while s < 32 * mem[_27640]:
                                                mem[s + _27640 + 292] = mem[s + _27640 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27640 + 260 len (32 * mem[_27640]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24316 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24316] = 26
                                                mem[_24316 + 32] = 'SafeMath: division by zero'
                                                _24874 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24874] = 26
                                                mem[_24874 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24874 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28616 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28616]
                                                mem[_28616 + 32] = stor8
                                                require 1 < mem[_28616]
                                                mem[_28616 + 64] = stor7
                                                mem[_28616 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28616 + 100] = ext_call.return_data[0]
                                                mem[_28616 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28616 + 196] = this.address
                                                mem[_28616 + 228] = block.timestamp + 120
                                                mem[_28616 + 164] = 160
                                                mem[_28616 + 260] = mem[_28616]
                                                s = 0
                                                while s < 32 * mem[_28616]:
                                                    mem[s + _28616 + 292] = mem[s + _28616 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28616 + 260 len (32 * mem[_28616]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24541 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24541] = 26
                                                mem[_24541 + 32] = 'SafeMath: division by zero'
                                                _25099 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25099] = 26
                                                mem[_25099 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25099 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29657 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29657]
                                                mem[_29657 + 32] = stor8
                                                require 1 < mem[_29657]
                                                mem[_29657 + 64] = stor7
                                                mem[_29657 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29657 + 100] = ext_call.return_data[0]
                                                mem[_29657 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29657 + 196] = this.address
                                                mem[_29657 + 228] = block.timestamp + 120
                                                mem[_29657 + 164] = 160
                                                mem[_29657 + 260] = mem[_29657]
                                                s = 0
                                                while s < 32 * mem[_29657]:
                                                    mem[s + _29657 + 292] = mem[s + _29657 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29657 + 260 len (32 * mem[_29657]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18841 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18841] = 26
                                        mem[_18841 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19801 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19801] = 26
                                            mem[_19801 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19801 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24315 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24315] = 26
                                                mem[_24315 + 32] = 'SafeMath: division by zero'
                                                _24873 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24873] = 26
                                                mem[_24873 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24873 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28610 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28610]
                                                mem[_28610 + 32] = stor8
                                                require 1 < mem[_28610]
                                                mem[_28610 + 64] = stor7
                                                mem[_28610 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28610 + 100] = ext_call.return_data[0]
                                                mem[_28610 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28610 + 196] = this.address
                                                mem[_28610 + 228] = block.timestamp + 120
                                                mem[_28610 + 164] = 160
                                                mem[_28610 + 260] = mem[_28610]
                                                s = 0
                                                while s < 32 * mem[_28610]:
                                                    mem[s + _28610 + 292] = mem[s + _28610 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28610 + 260 len (32 * mem[_28610]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24540 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24540] = 26
                                                mem[_24540 + 32] = 'SafeMath: division by zero'
                                                _25098 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25098] = 26
                                                mem[_25098 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25098 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29651 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29651]
                                                mem[_29651 + 32] = stor8
                                                require 1 < mem[_29651]
                                                mem[_29651 + 64] = stor7
                                                mem[_29651 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29651 + 100] = ext_call.return_data[0]
                                                mem[_29651 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29651 + 196] = this.address
                                                mem[_29651 + 228] = block.timestamp + 120
                                                mem[_29651 + 164] = 160
                                                mem[_29651 + 260] = mem[_29651]
                                                s = 0
                                                while s < 32 * mem[_29651]:
                                                    mem[s + _29651 + 292] = mem[s + _29651 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29651 + 260 len (32 * mem[_29651]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24682 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24682] = 26
                                            mem[_24682 + 32] = 'SafeMath: division by zero'
                                            _25482 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25482] = 26
                                            mem[_25482 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25482 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30513 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30513]
                                            mem[_30513 + 32] = stor8
                                            require 1 < mem[_30513]
                                            mem[_30513 + 64] = stor7
                                            mem[_30513 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30513 + 100] = ext_call.return_data[0]
                                            mem[_30513 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30513 + 196] = this.address
                                            mem[_30513 + 228] = block.timestamp + 120
                                            mem[_30513 + 164] = 160
                                            mem[_30513 + 260] = mem[_30513]
                                            s = 0
                                            while s < 32 * mem[_30513]:
                                                mem[s + _30513 + 292] = mem[s + _30513 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30513 + 260 len (32 * mem[_30513]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30513]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19945 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19945] = 26
                                        mem[_19945 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19945 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24539 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24539] = 26
                                            mem[_24539 + 32] = 'SafeMath: division by zero'
                                            _25097 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25097] = 26
                                            mem[_25097 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25097 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29645 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29645]
                                            mem[_29645 + 32] = stor8
                                            require 1 < mem[_29645]
                                            mem[_29645 + 64] = stor7
                                            mem[_29645 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29645 + 100] = ext_call.return_data[0]
                                            mem[_29645 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29645 + 196] = this.address
                                            mem[_29645 + 228] = block.timestamp + 120
                                            mem[_29645 + 164] = 160
                                            mem[_29645 + 260] = mem[_29645]
                                            s = 0
                                            while s < 32 * mem[_29645]:
                                                mem[s + _29645 + 292] = mem[s + _29645 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29645 + 260 len (32 * mem[_29645]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24681 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24681] = 26
                                                mem[_24681 + 32] = 'SafeMath: division by zero'
                                                _25481 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25481] = 26
                                                mem[_25481 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25481 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30507 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30507]
                                                mem[_30507 + 32] = stor8
                                                require 1 < mem[_30507]
                                                mem[_30507 + 64] = stor7
                                                mem[_30507 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30507 + 100] = ext_call.return_data[0]
                                                mem[_30507 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30507 + 196] = this.address
                                                mem[_30507 + 228] = block.timestamp + 120
                                                mem[_30507 + 164] = 160
                                                mem[_30507 + 260] = mem[_30507]
                                                s = 0
                                                while s < 32 * mem[_30507]:
                                                    mem[s + _30507 + 292] = mem[s + _30507 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30507 + 260 len (32 * mem[_30507]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30507]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24745 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24745] = 26
                                            mem[_24745 + 32] = 'SafeMath: division by zero'
                                            _26073 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26073] = 26
                                            mem[_26073 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26073 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _31017 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_31017]
                                            mem[_31017 + 32] = stor8
                                            require 1 < mem[_31017]
                                            mem[_31017 + 64] = stor7
                                            mem[_31017 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_31017 + 100] = ext_call.return_data[0]
                                            mem[_31017 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_31017 + 196] = this.address
                                            mem[_31017 + 228] = block.timestamp + 120
                                            mem[_31017 + 164] = 160
                                            mem[_31017 + 260] = mem[_31017]
                                            s = 0
                                            while s < 32 * mem[_31017]:
                                                mem[s + _31017 + 292] = mem[s + _31017 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_31017 + 260 len (32 * mem[_31017]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.0xa0712d68 with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
}



}
