contract main {




// =====================  Runtime code  =====================


const EXCESS_UTILIZATION_RATE = 200000000 * 10^18

const OPTIMAL_UTILIZATION_RATE = 800000000 * 10^18


address addressesProvider;
uint256 baseVariableBorrowRate;
uint256 variableRateSlope1;
uint256 variableRateSlope2;
uint256 stableRateSlope1;
uint256 stableRateSlope2;
address reserveAddress;

function getVariableRateSlope1() payable {
    return variableRateSlope1
}

function stableRateSlope1() payable {
    return stableRateSlope1
}

function getStableRateSlope2() payable {
    return stableRateSlope2
}

function getBaseVariableBorrowRate() payable {
    return baseVariableBorrowRate
}

function variableRateSlope2() payable {
    return variableRateSlope2
}

function variableRateSlope1() payable {
    return variableRateSlope1
}

function baseVariableBorrowRate() payable {
    return baseVariableBorrowRate
}

function addressesProvider() payable {
    return addressesProvider
}

function stableRateSlope2() payable {
    return stableRateSlope2
}

function reserve() payable {
    return reserveAddress
}

function getStableRateSlope1() payable {
    return stableRateSlope1
}

function getVariableRateSlope2() payable {
    return variableRateSlope2
}

function _fallback() payable {
    revert
}

function calculateInterestRates(address arg1, uint256 arg2, uint256 arg3, uint256 arg4, uint256 arg5) payable {
    require calldata.size - 4 >= 160
    if arg4 + arg3 < arg3:
        revert with 0, 'SafeMath: addition overflow'
    if not arg4 + arg3:
        if not arg2:
            require ext_code.size(addressesProvider)
            staticcall addressesProvider.0x9964fdb6 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).0xbb85c0bb with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stableRateSlope1:
                if 0 / stableRateSlope1:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3:
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    else:
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        else:
                            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if not arg4 + arg3:
                                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                    if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            else:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 'SafeMath: division by zero'
                                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                    if 0 / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                else:
                    if 10^9 * arg4 / arg4 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not 10^9 * arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        else:
                            if 10^9 * arg3 / arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^9 * arg3:
                                if not arg4 + arg3:
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                    if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            else:
                                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg4 + arg3:
                                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                else:
                                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    else:
                        if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg3:
                            if not arg4 + arg3:
                                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                    if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            else:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * arg4) + (10^9 * arg3):
                                    revert with 0, 'SafeMath: division by zero'
                                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                    if 0 / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        else:
                            if 10^9 * arg3 / arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^9 * arg3:
                                if not arg4 + arg3:
                                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                else:
                                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            else:
                                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not arg4 + arg3:
                                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                    revert with 0, 'SafeMath: division by zero'
                                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                else:
                                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (10^9 * arg4) + (10^9 * arg3):
                                        revert with 0, 'SafeMath: division by zero'
                                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                        if 0 / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            return 0, ext_call.return_data[0], baseVariableBorrowRate
    if arg4 + arg3 + arg2 < arg2:
        revert with 0, 'SafeMath: addition overflow'
    if not arg4 + arg3:
        if arg4 + arg3 + arg2 / 2 < arg4 + arg3 + arg2 / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3 + arg2:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(addressesProvider)
        staticcall addressesProvider.0x9964fdb6 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).0xbb85c0bb with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 <= 800000000 * 10^18:
            if not arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                if stableRateSlope1:
                    if 0 / stableRateSlope1:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    if baseVariableBorrowRate < baseVariableBorrowRate:
                        revert with 0, 'SafeMath: addition overflow'
                    if arg4 + arg3 < arg3:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if not arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg4 / arg4 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^9 * arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 / arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                    if baseVariableBorrowRate < baseVariableBorrowRate:
                        revert with 0, 'SafeMath: addition overflow'
                    if arg4 + arg3 < arg3:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if not arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg4 / arg4 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^9 * arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 / arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not stableRateSlope1:
                if ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    if baseVariableBorrowRate < baseVariableBorrowRate:
                        revert with 0, 'SafeMath: addition overflow'
                    if arg4 + arg3 < arg3:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if not arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg4 / arg4 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^9 * arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 / arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                    if baseVariableBorrowRate < baseVariableBorrowRate:
                        revert with 0, 'SafeMath: addition overflow'
                    if arg4 + arg3 < arg3:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if not arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg4 / arg4 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^9 * arg4:
                        if not arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg3 / arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^9 * arg3:
                            if not arg4 + arg3:
                                revert with 0, 'SafeMath: division by zero'
                            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not arg4 + arg3:
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                                revert with 0, 'SafeMath: addition overflow'
                            if not (10^9 * arg4) + (10^9 * arg3):
                                revert with 0, 'SafeMath: division by zero'
                            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                                return 0, ext_call.return_data[0], baseVariableBorrowRate
                            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                                revert with 0, 'SafeMath: addition overflow'
                            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                                   ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   ext_call.return_data[0],
                                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1 / stableRateSlope1 != (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 / arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, 
                                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                                   baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if 800000000 * 10^18 > arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
            revert with 0, 'SafeMath: subtraction overflow'
        if not (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 800000000 * 10^18:
            if stableRateSlope2:
                if 0 / stableRateSlope2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if variableRateSlope2:
                if 0 / variableRateSlope2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da2b7f8647500000000000000 / (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 800000000 * 10^18 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 < 100000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not stableRateSlope2:
            if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if not variableRateSlope2:
                if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2 / variableRateSlope2 != (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               stableRateSlope1 + ext_call.return_data[0],
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2 / stableRateSlope2 != (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
            revert with 0, 'SafeMath: addition overflow'
        if not variableRateSlope2:
            if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                               variableRateSlope1 + baseVariableBorrowRate
                    if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2 / variableRateSlope2 != (1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
            revert with 0, 'SafeMath: addition overflow'
        if ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
            revert with 0, 'SafeMath: addition overflow'
        if arg4 + arg3 < arg3:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            return 0, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if not arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg4 / arg4 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not 10^9 * arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg3:
            if not arg4 + arg3:
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return (arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * arg4 + arg3 + arg2 / 2 / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) / arg4 + arg3 != 1000000000 * 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) < arg4 + arg3 + arg2 / 2:
        revert with 0, 'SafeMath: addition overflow'
    if not arg4 + arg3 + arg2:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(addressesProvider)
    staticcall addressesProvider.0x9964fdb6 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0xbb85c0bb with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 <= 800000000 * 10^18:
        if not (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            if stableRateSlope1:
                if 0 / stableRateSlope1:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if not (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       baseVariableBorrowRate
            if 1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 / (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       baseVariableBorrowRate
            if variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if 1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 / (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not stableRateSlope1:
            if ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            if not (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       baseVariableBorrowRate
            if 1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 / (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
                if baseVariableBorrowRate < baseVariableBorrowRate:
                    revert with 0, 'SafeMath: addition overflow'
                if arg4 + arg3 < arg3:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if not arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg4 / arg4 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^9 * arg4:
                    if not arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg3 / arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^9 * arg3:
                        if not arg4 + arg3:
                            revert with 0, 'SafeMath: division by zero'
                        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not arg4 + arg3:
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                            if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                            revert with 0, 'SafeMath: addition overflow'
                        if not (10^9 * arg4) + (10^9 * arg3):
                            revert with 0, 'SafeMath: division by zero'
                        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                            return 0, ext_call.return_data[0], baseVariableBorrowRate
                        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                            revert with 0, 'SafeMath: addition overflow'
                        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                               ext_call.return_data[0],
                               baseVariableBorrowRate
                    if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, ext_call.return_data[0], baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, ext_call.return_data[0], baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       baseVariableBorrowRate
            if variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               ext_call.return_data[0],
                               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1 / stableRateSlope1 != (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        if not (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            if baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   baseVariableBorrowRate
        if 1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 / (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 < 400000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18:
            if baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * baseVariableBorrowRate * arg4 / 10^9 * arg4 != baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, 
                               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                               baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   baseVariableBorrowRate
        if variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 / (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 != variableRateSlope1:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate < baseVariableBorrowRate:
            revert with 0, 'SafeMath: addition overflow'
        if arg4 + arg3 < arg3:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if not arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if 10^9 * arg4 / arg4 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not 10^9 * arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg3:
            if not arg4 + arg3:
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                           ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                       ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
                   ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * (variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18 * stableRateSlope1) + 500000000 * 10^18 / 1000000000 * 10^18) + ext_call.return_data[0],
               ((variableRateSlope1 * (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) + 400000000 * 10^18 / 800000000 * 10^18) + 500000000 * 10^18 / 1000000000 * 10^18) + baseVariableBorrowRate
    if 800000000 * 10^18 > (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
        revert with 0, 'SafeMath: subtraction overflow'
    if not ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 800000000 * 10^18:
        if stableRateSlope2:
            if 0 / stableRateSlope2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        if variableRateSlope2:
            if 0 / variableRateSlope2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
            revert with 0, 'SafeMath: addition overflow'
        if arg4 + arg3 < arg3:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
        if not arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg4 / arg4 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not 10^9 * arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg3:
            if not arg4 + arg3:
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               stableRateSlope1 + ext_call.return_data[0],
               variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da2b7f8647500000000000000 / ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 800000000 * 10^18 != 1000000000 * 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 < 100000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if not stableRateSlope2:
        if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        if not variableRateSlope2:
            if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
                revert with 0, 'SafeMath: addition overflow'
            if arg4 + arg3 < arg3:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if not arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg4 / arg4 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not 10^9 * arg4:
                if not arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg3 / arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^9 * arg3:
                    if not arg4 + arg3:
                        revert with 0, 'SafeMath: division by zero'
                    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not arg4 + arg3:
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                        if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                        revert with 0, 'SafeMath: addition overflow'
                    if not (10^9 * arg4) + (10^9 * arg3):
                        revert with 0, 'SafeMath: division by zero'
                    if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                        return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                        revert with 0, 'SafeMath: addition overflow'
                    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                           stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, stableRateSlope1 + ext_call.return_data[0], variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2 / variableRateSlope2 != (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
            revert with 0, 'SafeMath: addition overflow'
        if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
            revert with 0, 'SafeMath: addition overflow'
        if arg4 + arg3 < arg3:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            return 0, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if not arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg4 / arg4 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not 10^9 * arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg3:
            if not arg4 + arg3:
                if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           stableRateSlope1 + ext_call.return_data[0],
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2 / stableRateSlope2 != (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if stableRateSlope1 + ext_call.return_data[0] < ext_call.return_data[0]:
        revert with 0, 'SafeMath: addition overflow'
    if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
        revert with 0, 'SafeMath: addition overflow'
    if not variableRateSlope2:
        if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
            revert with 0, 'SafeMath: addition overflow'
        if arg4 + arg3 < arg3:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if not arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg4 / arg4 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not 10^9 * arg4:
            if not arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg3 / arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^9 * arg3:
                if not arg4 + arg3:
                    revert with 0, 'SafeMath: division by zero'
                if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not arg4 + arg3:
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != variableRateSlope1 + baseVariableBorrowRate:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg3:
            if not arg4 + arg3:
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                    if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                    revert with 0, 'SafeMath: addition overflow'
                if not (10^9 * arg4) + (10^9 * arg3):
                    revert with 0, 'SafeMath: division by zero'
                if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                    return 0, 
                           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                           variableRateSlope1 + baseVariableBorrowRate
                if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                    revert with 0, 'SafeMath: addition overflow'
                return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if 1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2 / variableRateSlope2 != (1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
    if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 < 500000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if variableRateSlope1 + baseVariableBorrowRate < baseVariableBorrowRate:
        revert with 0, 'SafeMath: addition overflow'
    if ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
        revert with 0, 'SafeMath: addition overflow'
    if arg4 + arg3 < arg3:
        revert with 0, 'SafeMath: addition overflow'
    if not arg4 + arg3:
        return 0, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if not arg4:
        if not arg3:
            if not arg4 + arg3:
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if 10^9 * arg4 / arg4 != 10^9:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
    if not 10^9 * arg4:
        if not arg3:
            if not arg4 + arg3:
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg3 / arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if not 10^9 * arg3:
            if not arg4 + arg3:
                revert with 0, 'SafeMath: division by zero'
            if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not arg4 + arg3:
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18:
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) / 10^9 * arg4 != (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
    if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 < 500000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if not arg3:
        if not arg4 + arg3:
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if 10^9 * arg3 / arg3 != 10^9:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
    if not 10^9 * arg3:
        if not arg4 + arg3:
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < 0:
                    revert with 0, 'SafeMath: addition overflow'
            revert with 0, 'SafeMath: division by zero'
        if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
                revert with 0, 'SafeMath: addition overflow'
            if not (10^9 * arg4) + (10^9 * arg3):
                revert with 0, 'SafeMath: division by zero'
            if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
                return 0, 
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                       (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
            if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
            if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
                revert with 0, 'SafeMath: addition overflow'
            return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if 1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 / (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18 != 1000000000 * 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
        if (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if 10^9 * arg5 * arg3 / 10^9 * arg3 != arg5:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
    if (10^9 * arg5 * arg3) + 500000000 * 10^18 < 500000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if not arg4 + arg3:
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
            if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < 0:
                revert with 0, 'SafeMath: addition overflow'
        revert with 0, 'SafeMath: division by zero'
    if (10^9 * arg4) + (10^9 * arg3) / arg4 + arg3 != 10^9:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
    if ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) < (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    if not ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18):
        if (10^9 * arg4) + (10^9 * arg3) / 2 < (10^9 * arg4) + (10^9 * arg3) / 2:
            revert with 0, 'SafeMath: addition overflow'
        if not (10^9 * arg4) + (10^9 * arg3):
            revert with 0, 'SafeMath: division by zero'
        if not (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3):
            return 0, 
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
                   (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
        if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) / (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
        if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
            revert with 0, 'SafeMath: addition overflow'
        return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (10^9 * arg4) + (10^9 * arg3) / 2 / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) / ((10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) != 1000000000 * 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
    if (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) < (10^9 * arg4) + (10^9 * arg3) / 2:
        revert with 0, 'SafeMath: addition overflow'
    if not (10^9 * arg4) + (10^9 * arg3):
        revert with 0, 'SafeMath: division by zero'
    if not (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3):
        return 0, 
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
               (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
    if (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) / (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3) != (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
    if ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 < 500000000 * 10^18:
        revert with 0, 'SafeMath: addition overflow'
    return ((1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2 * (1000000000 * 10^18 * (10^9 * arg5 * arg3) + 500000000 * 10^18 / 1000000000 * 10^18) + (1000000000 * 10^18 * (10^9 * ((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18 * arg4) + (10^9 * variableRateSlope1 * arg4) + (10^9 * baseVariableBorrowRate * arg4) + 500000000 * 10^18 / 1000000000 * 10^18) + ((10^9 * arg4) + (10^9 * arg3) / 2) / (10^9 * arg4) + (10^9 * arg3)) + 500000000 * 10^18 / 1000000000 * 10^18, 
           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * stableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + stableRateSlope1 + ext_call.return_data[0],
           (((1000000000 * 10^18 * (1000000000 * 10^18 * arg4) + (1000000000 * 10^18 * arg3) + (arg4 + arg3 + arg2 / 2) / arg4 + arg3 + arg2) - 0x85a36366eb71f04147a6da26540919837f32d1c000000 / 200000000 * 10^18 * variableRateSlope2) + 500000000 * 10^18 / 1000000000 * 10^18) + variableRateSlope1 + baseVariableBorrowRate
}



}
